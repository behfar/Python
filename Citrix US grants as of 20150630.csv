Patent,PC,Normalized Assignee,Family ID,Grouping,Priority Date,Priority Year,Est. Expiration Date,Title,Abstract,First Claim Word Count,PatentStrength,HML,Notes
7661129,PC,"Citrix Systems, Inc.",27753279,Other Topics,2/26/2002,2002,7/18/2024,Secure traversal of network components,A method and apparatus for authenticating a client to a content server. A ticket authority generates a ticket associated with the client. The ticket comprises a first ticket and a second ticket. The ticket authority transmits the first ticket to the client and the client uses the first ticket to establish a communication session with an content server proxy. The ticket authority then transmits a second ticket to the content server proxy and the content server proxy uses the second ticket to establish a communication session with the content server.,149,93,,
8135843,PC,"Citrix Systems, Inc.",28040721,Graphical User Interface/Communication Channel,3/22/2002,2002,5/12/2028,Methods and systems for providing access to an application,The invention enables the publishing of a graphical user interface application on the web in a manner so that they can be discovered by manual or automatic searches. The invention includes the step of receiving a service access point (SAP) from a web service directory. The SAP is associated with a first application and identifies a web server. The invention also includes the step of retrieving address information associated with the first application from the web server identified by the SAP and launching a second application. The second application establishes a communication channel with an application server identified by the retrieved address information. The application server subsequently executes the first application and returns information to the second application.,120,93,,
7290061,PC,"Citrix Systems, Inc.",27360632,Other Topics,12/5/2000,2000,3/29/2024,System and method for internet content collaboration,A system for collaborative exchange of Web based content information between and among disparate and unrelated content sources includes a content server and a server appliance electronically disposed between the content server and a network which terminates HTTP sessions directed to the content server and initiates a HTTP session with the content server as a proxy. A content collaboration engine hosted on the server appliance suitably includes a content recognition engine which receives content from the server converts received content to DOM and classifies content in accordance with XML recognition rules. A content mapping engine extracts content definition fields from classified content and requests related content from collaborating sites the requested content having content definition fields including values substantially the same as the extracted content definition fields. A content category structure defines the format for categorizing all content sources collaborating in the exchange of content within a consortium. A request for information protocol defines a format for identifying valid content fields a content provider can be queried against in order to identify and recover content from a specific category categorized by the content category structure definition. The content category structure also identifies members of the consortium against which queries may be directed.,211,93,,
8131816,PC,"Citrix Systems, Inc.",28039321,Other Topics,3/14/2002,2002,12/5/2027,Methods and apparatus for generating graphical and media displays at a client,The invention generally relates to generating a display having graphical and/or media components at a client. In one aspect a method for generating a graphical display at a client includes transmitting output from an application program executing on a server to the client identifying a non-textual element within the application output retrieving a compressed data format associated with the non-textual element and transmitting to the client the compressed data format in place of the non-textual element. In another aspect a method for generating a media presentation at a client includes transmitting output from an application program executing on a server to the client identifying a media stream within the application output intercepting an original compressed data set representing at least a portion of the media stream before processing by the application program and transmitting the original compressed data set to the client.,95,93,,see family
7555529,PC,"Citrix Systems, Inc.",27736795,Software Application/Virtual Channel,11/13/1995,1995,2/4/2019,Interacting with software applications displayed in a web page,The invention enables the display of application-output data within application-output windows embedded in a web browser window. The application-output windows can be dynamically moved resized and otherwise manipulated within the web browser window even when the application program providing the source of the application-output data is non-web enabled (e.g. legacy applications). The invention receives window attribute information associated with the application-output windows via a first virtual channel and displays application-output data received via a second virtual channel within the application-output windows which are formed and/or modified using the window attribute information.,176,93,?,remote desktop channel w/o browser intervention
7330872,PC,"Citrix Systems, Inc.",25516983,Other Topics,10/2/2001,2001,1/29/2023,Method for distributed program execution with web-based file-type association,In one aspect the invention relates to a method for enabling distributed program execution in a network that includes a client system and a plurality of server systems. The method includes the step of presenting a graphical depiction of a data file that is stored on a web server. A request to execute a first executable program that includes information concerning a second executable program associated with the data file is reviewed. The second program can execute with on the client system or one of a plurality of server systems. Application output data from the second executable program is reviewed and formatted by the first executable program and received application output data is presented to the user.,163,93,,
7376695,PC,"Citrix Systems, Inc.",28039321,Other Topics,3/14/2002,2002,10/23/2025,Method and system for generating a graphical display for a remote terminal session,In one aspect the invention relates to a method for generating a graphical display for a remote terminal session. The method includes monitoring output produced by an application program executing on a server identifying a bitmap representation within the output produced by the application program and determining a check value for the bitmap representation. The method also includes retrieving a compressed data format of the bitmap representation based at least in part on the check value and transmitting to the remote terminal session the compressed data format in place of the bitmap representation.,67,93,H?,remote desktop serves sends text uncompressed and non-text compressed
7194743,PC,"Citrix Systems, Inc.",26944358,Other Topics,12/12/2000,2000,5/11/2023,Methods and apparatus for communicating changes between a user interface and an executing application using property paths,In one aspect the invention relates to a method of associating an element of a user-interface to a current state of a property in a system including an application having a plurality of components wherein at least one component has a property wherein each property is identified with an identifier. The method comprises associating the element of the user-interface with a property path the property path including a concatenation of a plurality of identifiers the concatenation of identifiers defining a path through the components of the application to a property at the end of the concatenation and mapping the property path to a current state of the property at the end of the path defined by the concatenation of identifiers to associate the element of the user-interface with the current state of that property.,308,92,,
6928469,PC,"Citrix Systems, Inc.",27381447,Client Node/User Credentials,12/29/1998,1998,2/18/2019,Apparatus and method for determining a program neighborhood for a client node in a client-server network using markup language techniques,An apparatus and method for determining a program neighborhood of a client node in a client-server network is described. The program neighborhood of the client node includes application programs hosted by application servers on the network. The present invention enables a user of a client node to learn of these application programs. The user is not required to know where to find such applications or to manually establish links to such applications. To make the client node aware of its program neighborhood a host server collects application-related information corresponding to application programs hosted by the servers in the network. The application-related information can include the application name the server location of the application minimum capabilities required of client nodes for executing the application and those users who are authorized to use that application. User credentials are received from the client system. The user credentials are used to filter the application-related information. Information representing those application programs that are available to the client node is transmitted from the host server to the client system for display. In a Windows-based client node the information can be represented by a graphical icon for each available application program.,177,92,,
7321936,PC,"Ardence Delaware, Inc",30447777,Computing Devices/Client Devices|Computing Devices/Data Streams|Virtual Server/Client Devices|Virtual Server/Virtual Disk,4/18/2002,2002,3/9/2024,System for and method of streaming data to a computer in a network,A system for and method of rapidly streaming data to one or more client devices such as personal computers (PC's) from a server employing virtual disk emulation and broadcasting or multicasting of data residing on a network server. In some embodiments the streamed data includes files necessary to boot and configure the one or more client devices the data including hibernation O/S and application files.,239,92,,
7490166,PC,"Citrix Systems, Inc.",26902328,Other Topics,5/26/2000,2000,12/12/2025,Remote control of a client's off-screen surface,The performance of distributed systems can be improved when a server remotely controls off-screen surfaces at a client coupled to the server via a communications network. The server instructs the client to form an off-screen surface exhibiting a number of particular attributes. The client selects and allocates a particular memory region and forms the off-screen surface therein as instructed by the server. The server subsequently provides the client with an indicia of graphical data and instructs the client to locate the graphical data and to copy the data into the off-screen surface. In response to an error condition the server transmits a duplicate of the off-screen surface to the client with instructions to update the client's on-screen surface using this duplicate surface.,94,92,,
7117243,PC,"Citrix Systems, Inc.",25516341,Other Topics,10/2/2001,2001,1/9/2024,Methods for distributed program execution with file-type association in a client-server network,The present invention relates to a method for enabling distributed execution of a program. In one aspect the method includes the step of receiving a mapping specifying an association between a type of data file and an executable program for execution on a server. The method also includes the steps of presenting a graphical depiction of a data file stored on a client system and receiving a selection of the graphical depiction of the data file. The method further includes the steps of identifying an executable program associated with the type of the selected data file using the received mapping and sending a request to execute the identified executable program.,161,92,,
7644434,PC,"Citrix Systems, Inc.",30003796,Other Topics,4/25/2002,2002,1/7/2025,Computer security system,A method of providing access to an authenticated user and restricting access to an unauthorized user of a computer system is provided. The method includes determining whether a user is authenticated to access at least one resource included in the computer system. The method also includes establishing a session and a session identifier such that the user has access to the at least one resource if the user is authenticated to access the at least one resource. The method also includes changing the session identifier each time the user completes an interaction with the computer system during the session.,361,92,,
7877463,PC,"Citrix Systems, Inc.",26688949,Other Topics,4/10/2001,2001,12/22/2022,Method and systems for providing access to dynamic content via static pages,A system and method for providing access to dynamic content via static pages. A page or portion of a page is received containing at least one executable element and at least one static element. The at least one executable element is identified and then processed to produce output. A static page is created comprising the produced output. In some embodiments static elements linked to executable elements are replaced with static links referencing said executable elements. In other embodiments a page comprising a single form is created from a page comprising at least two forms.,178,92,,
7028025,PC,"Citrix Systems, Inc.",26902328,Transport Mechanism/File Name|Transport Mechanism/Client and Server|Session Key/Graphical Data,5/26/2000,2000,12/12/2022,Method and system for efficiently reducing graphical display data for transmission over a low bandwidth transport protocol mechanism,The present invention improves the performance of distributed systems by reducing the amount of graphical data transmitted between an application server and a thin client. The encoding technique used for graphical data is adapted in response to the repetitiveness of the graphical data during a particular client-server session. Indexes are maintained that are indicative of this repetitiveness and which identify a particular location in the client's cache memory storing the graphical data. Where the index is not found but a fuzzy key indicates a strong likelihood that the graphical object is located at the client the client's persistent storage memory is searched for a file name corresponding to the fuzzy key and which stores the graphical object therein.,111,92,,
7873965,PC,"Citrix Systems, Inc.",26944358,Remote Machine/Remote Application|Remote Machine/Step of Requesting,12/12/2000,2000,10/3/2022,"Methods and apparatus for communicating changes between a user-interface and an executing application, using property paths",A method for detecting a change in a current state of a property associated with an element of a user-interface includes the step of associating the element with a property path including a concatenation of a plurality of identifiers defining a path through a plurality of application components to a property at the end of the concatenation. The property path is mapped to a current state of the property at the end of the path. A request is received from a local machine for a change in a state of a property mapped to one of said plurality of concatenated identifiers defining the property path. The request for the change is sent to a remote machine. The remote machine applies the change. The local machine updates the element of the user-interface associated with the property path responsive to the change and the received regeneration.,338,92,,
6983020,PC,"Citrix Systems, Inc.",28040993,Other Topics,3/25/2002,2002,7/3/2023,Method and apparatus for fast block motion detection,A method system and/or apparatus for quickly detecting blocks or regions in an image whose pixels that can be coded efficiently by a pointer to the same block occurring in a reference image. The reference image is shared between an encoder and a corresponding decoder. One embodiment of the encoder quickly detects such blocks in an image by: (a) defining features such that substantially fewer features occur in an image than pixels (b) correlating features in an image to a corresponding feature in the reference image (c) estimating a displacement vector representative of the displacement of the correlated features (d) estimating a seed point within the displaced block from which to grow the block and (e) growing the displaced block to determine its size shape and/or dimensions.,117,92,,
6266335,PC,"Citrix Systems, Inc.",25540967,Data Packets/Network Connection|IP Address/Network Layer|IP Address/Network Packets|IP Address/Routing Packets|IP Address/Cluster Environment|IP Address/Data Link Layer,12/19/1997,1997,12/19/2017,Cross-platform server clustering using a network flow switch,A network flow switch is provided for connecting a pool of IP routers to a cluster of IP servers sharing a single IP address without requiring translation of the IP address. Rather all IP servers have the same IP address. The network flow switch routes packets to individual servers by writing the Data Link Layer address of the destination IP server in the destination Data Link Layer address field of the packet. However no Data Link Layer address translation is required for packets transmitted from the IP servers to the IP routers. Since in a typical client-server environment the number of packets sent from the server to the client is much greater than the number of packets sent from the client to the server the Data Link Layer address translation requires very little overall processing time.,103,92,,
6952714,PC,"Citrix Systems, Inc.",25516338,Other Topics,10/2/2001,2001,9/10/2023,Method for distributed program execution with server-based file type association,A method for enabling distributed program execution. In one aspect the method includes the steps of presenting a graphical depiction of a data file stored on a server system and receiving a selection of the graphical depiction. The method also includes the steps of transmitting the selection of the graphical depiction of the data file to a server system and receiving a request to execute an executable program associated with the selected data file. The request is transmitted by a server system. The method additionally includes executing the executable program associated with the selected data file.,170,91,,
6950991,PC,"Citrix Systems, Inc.",27375491,Software Application/Virtual Channel,11/13/1995,1995,4/9/2017,Interacting with software applications displayed in a web page,The invention enables the display of application-output data within application-output windows embedded in a web browser window. The application-output windows can be dynamically moved resized and otherwise manipulated within the web browser window even when the application program providing the source of the application-output data is non-web enabled (e.g. legacy applications). The invention receives window attribute information associated with the application-output windows via a first virtual channel and displays application-output data received via a second virtual channel within the application-output windows which are formed and/or modified using the window attribute information.,166,91,?,remote desktop channel w/o browser intervention
6601084,PC,"Citrix Systems, Inc.",25537838,Other Topics,12/19/1997,1997,12/19/2017,Dynamic load balancer for multiple network servers,"The present invention provides methods and systems for balancing the load on a plurality of servers using a load balancing algorithm which continuously examines the loads on the plurality of servers and makes adjustments in the loads accordingly. Among the factors considered in the load balancing are the power of each server relative to other servers the load on each server relative to the other servers and a ""credit"" for each server based on their power and load.",137,91,,
7113520,PC,"Citrix Systems, Inc.",26961709,Data Packets/Client Devices,4/11/2001,2001,10/14/2023,Local protocol server,Communicating data packets between a client device and a host system generally includes using a protocol server module located on the client device that terminates a communication session that uses a first protocol and that is intended to enable communications between a source and a destination in which the source is one of a client device operating system protocol stack and the host system and the destination is one of the client device operating system protocol stack and the host system but differs from the source. The protocol server module translates data packets from the source between the first protocol and a second protocol that is different from the first protocol and transports the data packets having the second protocol to the destination. A controller module generally also is included on the client device. The protocol server module may include a PPP server module located on the client device.,176,91,,
7353289,PC,"Citrix Systems, Inc.",27500198,Mobile Devices/Mobile Clients,11/6/2000,2000,4/7/2023,System for an open architecture development platform with centralized synchronization,One aspect of the preferred embodiment relates to an application framework for managing mobile clients and application programs. By utilizing the preferred embodiment a system administrator may be provided the capability to manage and control multiple devices directly and indirectly using push (server-initiated) and/or pull (client-initiated) techniques from a single location. Additionally the preferred embodiment may be utilized to back up and securely store information on the mobile clients identify device usage and to deliver files and databases to the mobile clients.,138,91,,
7127525,PC,"Citrix Systems, Inc.",26902328,Data Packets/Other Topics|Transport Mechanism/Client and Server,5/26/2000,2000,9/22/2023,Reducing the amount of graphical line data transmitted via a low bandwidth transport protocol mechanism,The performance of distributed systems can be improved by reducing the amount of graphical line data transmitted between a server and a client. The server separates the graphical line data into a plurality of strips. The server then determines a quantized angle and a strip length for each of the strips. The beginning coordinate of the graphical line data is packaged together with the quantized angle or indicia of the quantized angle and the strip length data into a protocol packet and compressed prior to transmission to the client. In one embodiment the strip data transmitted to the client includes a second indicia that a particular strip has been previously transmitted to the client and the client is instructed to form the strip using locally stored data.,182,91,,
7502784,PC,"Citrix Systems, Inc.",26902328,Transport Mechanism/File Name|Transport Mechanism/Client and Server|Session Key/Graphical Data,5/26/2000,2000,3/7/2022,Method and system for efficiently reducing graphical display data for transmission over a low bandwidth transport protocol mechanism,The present invention improves the performance of distributed systems by reducing the amount of graphical data transmitted between an application server and a thin client. The encoding technique used for graphical data is adapted in response to the repetitiveness of the graphical data during a particular client-server session. Indexes are maintained that are indicative of this repetitiveness and which identify a particular location in the client's cache memory storing the graphical data. Where the index is not found but a fuzzy key indicates a strong likelihood that the graphical object is located at the client the client's persistent storage memory is searched for a file name corresponding to the fuzzy key and which stores the graphical object therein.,203,91,,
7136353,PC,Bytemobile Inc,26966995,Data Packets/Communications Network|Data Packets/Network Connection|Data Packets/Quality of Service,5/18/2001,2001,12/17/2024,Quality of service management for multiple connections within a network communication system,Improved quality of service management for multiple connections between a sender and a receiver may be achieved by allocating a host-level transmission rate among the multiple connections based on a ratio of a weight associated with each connection and a sum of the weights associated the connections. Data packets associated with the connections may then be selectively transmitted to the receiver such that data packets having a highest difference between the allocated transmission rate and an actual transmission rate are transmitted first. The data packets transmitted to the sender may also be clocked using a transmission timer having period corresponding to the host-level transmission rate.,174,90,,
7031314,PC,Bytemobile Inc,27383358,Data Packets/Communications Network|Data Packets/Network Connection|Data Packets/Data Structures|Data Packets/Intercepting,5/16/2001,2001,1/4/2024,Systems and methods for providing differentiated services within a network communication system,A service module incorporated within the network infrastructure intercepts packets communicated between a client and a server to determine whether the connection corresponds to one of a plurality of service applications that may supported by the service module. If so the service module breaks the connection by terminating the connection with the client at the service module and opening a separate connection between the service module and the server. The service application may then perform application-specific process of the data communicated between the client and server. In order to increase processing efficiency associated with classifying the connection between the client and the server the service module stores classification rules in a plurality of hashing tables with hash conflicts arranged as an m-ary tree structure. This arrangement enables the service module to efficiently search for classification rules and resolve hash conflicts without imposing a significant processing penalty.,164,90,,
6307570,PC,"Citrix Systems, Inc.",26718977,Virtual Server/Client Devices|Client Node/Other Topics|Software Application/Client Devices|Software Application/Client and the Server,3/31/1997,1997,12/19/2017,Virtual input device,"A software object and method are disclosed which allow a client node to control the display and use of a software system-level input device application on a server. The server host and executes the input device application which is \raised\"" and \""lowered\"" in response to change-of-state protocol packets. The system-level input application device may provide keyboard keypad or other input device functionality.""",93,90,H?,app running remotely on server controls client device
7334122,PC,"Ardence Delaware, Inc",29268684,Computing Devices/Client Devices|Virtual Server/Client Devices|Virtual Server/Virtual Disk,4/18/2002,2002,6/7/2022,System for and method of network booting of an operating system to a client computer using hibernation,A system for and method of network booting of an operating system (O/S) on one or more client devices such as personal computers (PC's) employing a hibernation image. Remote booting of sets of client devices is facilitated by employing virtual disk emulation and in certain preferred embodiments broadcasting or multicasting of data residing on a network server which is necessary to appropriately boot and configure the one or more client devices the data including hibernation O/S and application files.,257,90,,
6799270,PC,"Citrix Systems, Inc.",26803601,Session Key/Hash Key|Session Key/Communication Session,10/30/1998,1998,9/24/2019,System and method for secure distribution of digital information to a chain of computer system nodes in a network,Described are a system and method for securely distributing session keys over a network to each node in a chain of computer system nodes. The chain of nodes recursively constructs and presents a nested request to the authentication server. The nested request includes a request from each of the nodes in the chain requiring a session key to communicate with a neighboring node. The authentication server recursively unravels the request and recursively prepares a response that includes a session key for each node that submitted a request. The response traverses the chain of nodes in the reverse order taken by the nested request to reach the authentication server. Each node receiving the response extracts the portion of the response directed to that node and forwards the remainder of the response if any to the next node in the chain. Thus with a single traversal of the chain of nodes each node receives at least one session key. The forward and reverse protocols easily generalize for any number of nodes in the chain. The protocols can employ one-way hash functions to seal requests and responses and to encode session keys.,172,89,,
7024460,PC,Bytemobile Inc,26790339,Data Packets/Data Streams|Data Packets/Communications Network|Data Packets/Client Devices|Data Packets/Network Connection|Data Packets/Intercepting|Software Application/Client Devices|Software Application/Client and the Server|Software Application/Infrastructure|Software Application/Redirection|Software Application/Intercepting,7/31/2001,2001,1/31/2024,Service-based compression of content within a network communication system,A service module incorporated within the network infrastructure intercepts packets communicated between a client and a server to determine whether the connection corresponds to an email service. If so the service module breaks the connection by terminating the connection with the client at the service module and opening a separate connection between the service module and the server. Packets communicated between the client and the server may then be redirected to an email compression application that monitors messages communicated between the client and the server and processes the messages in accordance with the state of the email session. For messages corresponding to connection establishment user authentication and other protocol-specific messages for example the email compression application may be configured to forward the messages to the originally intended destination. Messages corresponding to an email message data however are buffered within the email compression application. Once the entire message has been received the email compression application may strip the message headers and any protocol-specific data compress the data and attach new message headers corresponding to the compressed email message. The compressed and reformatted email message is then reinserted into the data stream for transmission to the intended destination. Because compression may occur between the server and client compression may be performed without requiring special processing by the server before email messages are sent. Furthermore because the email messages may be compressed in a format that can be readily decompressed using decompression libraries incorporated within the operating system of client devices such as the CAB format or GZIP format the client may decompress received email messages utilizing software already incorporated within the operating system of the client device without requiring download or installation of special decompression software and/or coordination of compression/decompression of email messages with the server or sending party.,135,88,,
8131817,PC,"Citrix Systems, Inc.",28039321,Other Topics,3/14/2002,2002,6/28/2022,Method and system for generating a graphical display for a remote terminal session,In one aspect the invention relates to a method for generating a graphical display for a remote terminal session. The method includes monitoring output produced by an application program executing on a server identifying a bitmap representation within the output produced by the application program and determining a check value for the bitmap representation. The method also includes retrieving a compressed data format of the bitmap representation based at least in part on the check value and transmitting to the remote terminal session the compressed data format in place of the bitmap representation.,239,88,M?,"remote desktop server hashes non-text elements and transmits to client only when client confirms hash miss, ie client doesn't already have the element"
7099273,PC,Bytemobile Inc,27370077,Data Packets/Communications Network|Data Packets/Network Connection,4/12/2001,2001,11/15/2024,Data transport acceleration and management within a network communication system,Improved data transport and management within a network communication system may be achieved by utilizing a transmit timer incorporated within the sender device and exploiting host-level statistics for a plurality of connections between a sender and receiver. The period of the transmit timer may be periodically adjusted based on a ratio of the smoothed round-trip time and the smoothed congestion window thereby reducing or eliminating bursty data transmission commonly associated with conventional TCP architectures. For applications having a plurality of connections between a sender and a receiver that share a common channel such as web applications the congestion window and smoothed round trip time estimates for all active connections may be used to initialize new connections and allocate bandwidth among existing connections. This aspect of the present invention may reduce the destructive interference that may occur as different connections compete with one another to maximize the bandwidth of each connection without regard to other connections serving the same application. Error recovery may also be improved by incorporating a short timer and a long timer that are configured to reduce the size of the congestion window and the corresponding transmission rate in response to a second packet loss with a predefined time period in order to increase resilience to random packet loss.,95,87,,
6954852,PC,"Ardence Delaware, Inc",29268684,Computing Devices/Client Devices|Virtual Server/Client Devices|Virtual Server/Virtual Disk,4/18/2002,2002,11/12/2023,System for and method of network booting of an operating system to a client computer using hibernation,A system for and method of network booting of an operating system (O/S) on one or more client devices such as personal computers (PC's) employing a hibernation image. Remote booting of sets of client devices is facilitated by employing virtual disk emulation and in certain preferred embodiments broadcasting or multicasting of data residing on a network server which is necessary to appropriately boot and configure the one or more client devices the data including hibernation O/S and application files.,525,86,,
5963540,PC,"Citrix Systems, Inc.",25540638,MAC Address,12/19/1997,1997,12/19/2017,Router pooling in a network flowswitch,A router fault tolerant network interface system includes a switch circuit configured to detect when a router fails in a multi-router local network. When a failed router is detected the switch circuit waits for a time-out period to expire to allow convergence. The switch circuit then intervenes when traffic from a server to the failed router is detected. The switch circuit translates the MAC address of the failed router to the MAC address of a functional router. Traffic from a server originally directed to the failed router is then redirected to a functional router. In a further refinement the switch circuit provides the MAC address of a functional router in response to an ARP request from a server to the failed router. Thus traffic from this server will be directed to the functional router without further intervention reducing the overhead of the switch circuit. In still a further refinement if the failed router recovers the switch circuit waits for a time-out period to expire to allow convergence of external routers and to allow the recovered router to learn routes to known clients. The switch circuit then ceases all intervention for the MAC address of the now recovered router.,112,85,,
6052785,PC,Citrix Systems International Gmbh,25524056,Remote Access/Remote File,11/21/1997,1997,11/21/2017,Multiple remote data access security mechanism for multitiered internet computer networks,A system and method for managing client authorization to access remote data repositories through a middle tier server such as a web server. Client remote data repository access is intercepted by the middle tier server and the server is searched for stored credentials permitting client access to the remote data repository. If found the stored credentials are used to authenticate access without further interaction with the client system. If no stored credentials are found the server requests credentials from the client and passes them to the remote data repository for validation. Validated credentials are stored by the server for future use and indexed by a client identifier. Permitted remote data repository access is stored with the validated credentials. Access to a mounted remote file system is not permitted without authorization even if the remote file system would not otherwise require authorization.,108,84,,
7870144,PC,Citrix Systems International Gmbh,28040340,Other Topics,3/21/2002,2002,5/24/2023,Method and system for updating attachment files,A method of updating a file attached to an electronic document can include attaching a file to an electronic document and storing a reference to the attached file. The reference can specify a location from which the attached file was obtained. Responsive to a user input the attached file can be replaced with a file specified by the reference. The attached file also can be updated from newly specified locations.,156,84,,
6859879,PC,Citrix Systems International Gmbh,27798767,Other Topics,5/26/2000,2000,1/23/2023,Method and system for secure pervasive access,The present invention relates to a client-server system having a security system for controlling access to application functions. The security system separated from the clients and the application functions routes all incoming requests created by various PVC-devices to a centralized security system providing an authentication component and a security component. The authentication component provides several authentication mechanisms which may be selected by information contained in the client's request. The authentication mechanism may be changed or extended without changing conditions on the client as well on the server or application side. The security component provides a security policy describing security requirements for accessing application functions which may be invoked by the security component. If the selected authentication mechanism succeeds and fulfills the security policy associated to that application function then the application function will be invoked by the security component.,166,82,,
8527615,PC,"Citrix Systems, Inc.",27381447,Client Node/User Credentials,12/29/1998,1998,12/29/2022,Apparatus and method for determining a program neighborhood for a client node in a client-server network,An apparatus and method for determining a program neighborhood of a client node in a client-server network is described. The program neighborhood of the client node includes application programs hosted by application servers on the network. The present invention enables a user of a client node to learn of these application programs. The user is not required to know where to find such applications or to manually establish links to such applications. To make the client node aware of its program neighborhood a host server collects application-related information corresponding to application programs hosted by the servers in the network. The application-related information can include the application name the server location of the application minimum capabilities required of client nodes for executing the application and those users who are authorized to use that application. User credentials are received from the client system. The user credentials are used to filter the application-related information. Information representing those application programs that are available to the client node is transmitted from the host server to the client system for display. In a Windows-based client node the information can be represented by a graphical icon for each available application program.,246,80,,
8224886,PC,"Citrix Systems, Inc.",27500198,Mobile Devices/Mobile Clients,11/6/2000,2000,10/30/2022,System for an open architecture deployment platform with centralized synchronization,One aspect of the preferred embodiment relates to an application framework for managing mobile clients and application programs. By utilizing the preferred embodiment a system administrator may be provided the capability to manage and control multiple devices directly and indirectly using push (server-initiated) and/or pull (client-initiated) techniques from a single location. Additionally the preferred embodiment may be utilized to back up and securely store information on the mobile clients identify device usage and to deliver files and databases to the mobile clients.,101,79,,
8090808,PC,"Ardence Delaware, Inc",29268684,Computing Devices/Client Devices|Virtual Server/Client Devices|Virtual Server/Virtual Disk,4/18/2002,2002,3/6/2023,System for and method of network booting of an operating system to a client computer using hibernation,A system for and method of network booting of an operating system (O/S) on one or more client devices such as personal computers (PC's) employing a hibernation image. Remote booting of sets of client devices is facilitated by employing virtual disk emulation and in certain preferred embodiments broadcasting or multicasting of data residing on a network server which is necessary to appropriately boot and configure the one or more client devices the data including hibernation O/S and application files.,295,77,,
8127025,PC,"Citrix Systems, Inc.",27500198,Mobile Devices/Mobile Clients,11/6/2000,2000,11/6/2021,System for an open architecture development platform with centralized synchronization,One aspect of the preferred embodiment relates to an application framework for managing mobile clients and application programs. By utilizing the preferred embodiment a system administrator may be provided the capability to manage and control multiple devices directly and indirectly using push (server-initiated) and/or pull (client-initiated) techniques from a single location. Additionally the preferred embodiment may be utilized to back up and securely store information on the mobile clients identify device usage and to deliver files and databases to the mobile clients.,175,76,,
7512694,PC,Bytemobile Inc,26933992,Computing Devices/Client Devices,1/21/2000,2000,3/2/2023,Wireless communications invisible proxy and hooking systems and methods,An communications service provider provides wireless access to a packetized data network such as the Internet. The service provider includes a server computer. The server computer is connected to the network which is at least in part a wired network. The wired network is connected to a cellular wireless communications system. A method of the network includes a client device that communicates wirelessly with the server computer. The client device runs standard applications programs such as browser ftp and e-mail. The method includes serving a first information by the server computer to the client device according to a specialized protocol determining that the first information accords with the specialized protocol and proxying the first information to the standard programs in a standard protocol readable by the standard programs.,327,76,,
8099389,PC,"Citrix Systems, Inc.",26902328,Transport Mechanism/File Name|Transport Mechanism/Client and Server|Session Key/Graphical Data,5/26/2000,2000,6/2/2022,Method and system for efficiently reducing graphical display data for transmission over a low bandwidth transport protocol mechanism,The present invention improves the performance of distributed systems by reducing the amount of graphical data transmitted between an application server and a thin client. The encoding technique used for graphical data is adapted in response to the repetitiveness of the graphical data during a particular client-server session. Indexes are maintained that are indicative of this repetitiveness and which identify a particular location in the client's cache memory storing the graphical data. Where the index is not found but a fuzzy key indicates a strong likelihood that the graphical object is located at the client the client's persistent storage memory is searched for a file name corresponding to the fuzzy key and which stores the graphical object therein.,143,75,,
7403955,PC,Citrix Systems International Gmbh,28040340,Other Topics,3/21/2002,2002,4/4/2024,Method and system for updating attachment files,A method of updating a file attached to an electronic document can include attaching a file to an electronic document and storing a reference to the attached file. The reference can specify a location from which the attached file was obtained. Responsive to a user input the attached file can be replaced with a file specified by the reference. The attached file also can be updated from newly specified locations.,141,72,,
5913230,PC,"Citrix Systems, Inc.",26711255,Other Topics,1/7/1997,1997,3/6/2017,Object and method for providing efficient multi-user access to shared operating system kernal code using instancing,A method for improving the performance of a multi-user operating system includes the steps of providing a kernal mode memory region in which instantiations of kernal objects associated with each user may be stored. Each instantiation of a particular kernal object is accessed via the same virtual address. Storing instantiation of kernal objects reduces code contention for commonly used kernal objects while allowing the instantiation to retain kernal mode protection.,112,70,,
6023749,PC,"Citrix Systems, Inc.",26711255,Other Topics,1/7/1997,1997,3/6/2017,Object and method for providing efficient multi-user access to shared operating system kernal code using instancing,A method for improving the performance of a multi-user operating system includes the steps of providing a kernal mode memory region in which instantiations of kernal objects associated with each user may be stored. Each instantiations of a particular kernal object is accessed via the same virtual address. Storing instantiations of kernal objects reduces code contention for commonly used kernal objects while allowing the instantiation to retain kernal mode protections.,170,68,,
7769042,PC,"Citrix Systems, Inc.",26961709,Data Packets/Client Devices,4/11/2001,2001,9/25/2023,Local protocol server,Communicating data packets between a client device and a host system generally includes using a protocol server module located on the client device that terminates a communication session that uses a first protocol and that is intended to enable communications between a source and a destination in which the source is one of a client device operating system protocol stack and the host system and the destination is one of the client device operating system protocol stack and the host system but differs from the source. The protocol server module translates data packets from the source between the first protocol and a second protocol that is different from the first protocol and transports the data packets having the second protocol to the destination. A controller module generally also is included on the client device. The protocol server module may include a PPP server module located on the client device.,184,65,,
8290907,PC,"Citrix Systems, Inc.",26902328,Transport Mechanism/File Name|Transport Mechanism/Client and Server|Session Key/Graphical Data,5/26/2000,2000,1/12/2022,Method and system for efficiently reducing graphical display data for transmission over a low bandwidth transport protocol mechanism,The present invention improves the performance of distributed systems by reducing the amount of graphical data transmitted between an application server and a thin client. The encoding technique used for graphical data is adapted in response to the repetitiveness of the graphical data during a particular client-server session. Indexes are maintained that are indicative of this repetitiveness and which identify a particular location in the client's cache memory storing the graphical data. Where the index is not found but a fuzzy key indicates a strong likelihood that the graphical object is located at the client the client's persistent storage memory is searched for a file name corresponding to the fuzzy key and which stores the graphical object therein.,145,60,,
6496520,PC,Bytemobile Inc,26873167,Data Packets/Communications Network,1/21/2000,2000,7/19/2020,Wireless network system and method,A method of communications over a network is specially adapted for improved transmission performance with reduced bandwidth requirements in communications networks which are low quality or have widely varied physical channel performance for example wireless networks. The method includes steps of packetizing a payload into a series of data packets inserting header packets at the beginning middle and towards the end of the series transmitting the series together with the header packets receiving at least some of the data packets of the series and at least one of the header packets and sending an acknowledgement. The acknowledgement is either that all data packets and at least one header packet were received; that not all data packets were received and at least one header packet was received; or that some data packets were received but no header packet was received. Re-transmissions of data packets and the header packet when such packets are not received is minimized in order to limit the number of communications necessary to deliver an entire data payload.,143,60,,
8819194,PC,"Citrix Systems, Inc.",27500198,Mobile Devices/Mobile Clients,11/6/2000,2000,11/6/2021,System for an open architecture deployment platform with centralized synchronization,One aspect of the preferred embodiment relates to an application framework for managing mobile clients and application programs. By utilizing the preferred embodiment a system administrator may be provided the capability to manage and control multiple devices directly and indirectly using push (server-initiated) and/or pull (client-initiated) techniques from a single location. Additionally the preferred embodiment may be utilized to back up and securely store information on the mobile clients identify device usage and to deliver files and databases to the mobile clients.,157,57,,
7315544,PC,Bytemobile Inc,27578619,Computing Devices/Client Devices,1/21/2000,2000,8/17/2023,Global sequence numbers in wireless communications systems and methods,A communication provider which provides wireless access to a packetized data network such as the Internet. The provider includes a server computer. The server computer is connected to the network which is at least in part a wired network. A client device is also connected to the network including by wireless means. The wired network is connected to a cellular wireless communications system. Payloads of information communicated by the server computer to the client device are assigned corresponding Global Sequence Numbers. By determining a time differential between next succeeding payloads received by the client a determination is made whether any payload loss occurs on a wired portion of the network or on a wireless portion of the network. Headers of all payloads of information are compressed together and transmitted together in order to limit communications and amount of data communicated. A send rate of the server computer is adjusted in relation to an effective receive rate of the client device.,251,45,,
6795859,PC,Bytemobile Inc,27578395,Computing Devices/Client Devices,1/21/2000,2000,3/2/2022,Scalable server architecture systems and methods,A wireless communications network includes a wireless client device such as a notebook computer a personal digital assistant or a data-enabled telephone. The network includes a router for receiving communications from the wireless client device. The router is connected to an application service provider (ASP) server computer of the network. The ASP server computer of the network has a tiered architecture that includes a deserialized server and a centralization server. The deserialized server functions to handle relatively dynamic information in client-server communications with the wireless client device and the centralization server functions to handle relatively static information in such communications. A session server of the ASP server computer generates a proxy cookie. The proxy cookie includes all relevant information for the wireless client device for the particular communications session. The client device wirelessly communicates with the router according to specialized protocols the router deserialized server the centralization server and the session server communicate according to standard protocols and the proxy cookie is commonly shared to control routing for purposes of segregating the relatively dynamic information and relatively static information according to the ASP server computer tiered architecture.,75,44,L,SII
8095579,PC,Citrix Systems International Gmbh,28040340,Other Topics,3/21/2002,2002,8/21/2024,Method and system for updating attachment files,A method of updating a file attached to an electronic document can include attaching a file to an electronic document and storing a reference to the attached file. The reference can specify a location from which the attached file was obtained. Responsive to a user input the attached file can be replaced with a file specified by the reference. The attached file also can be updated from newly specified locations.,152,38,,
6343311,PC,Citrix Systems International Gmbh,15170381,Other Topics,5/27/1997,1997,5/26/2018,"Methods, systems and computer program products for remote control of a processing system",Methods systems and computer program products are provided for remote control of a processing system by receiving a generic message from a message source and extracting from the generic message a source and instructions describing the control of the remote processing system. The remote processing system is the controlled in a manner specified by the instructions extracted from the generic message so as to provide processing results. A generic message containing the processing results may then be generated and transmitted to the source of the generic message. Preferably the generic message is an e-mail message.,87,90,,
7725587,PC,"Citrix Systems, Inc.",42398613,Data Packets/Payload Portion,8/24/2000,2000,8/15/2025,Deep packet scan hacker identification,Securing an accessible computer system typically includes receiving a data packet that includes a payload portion and an attribute portion where the data packet is communicated between at least one access requestor and at least one access provider. At least the payload portion of the received data packet typically is monitored where monitoring includes scanning the payload portion for at least one predetermined pattern. When the payload portion is determined to include at least one predetermined pattern access by the access requestor to the access provider may be controlled. Monitoring the data packet may include scanning the payload portion while handling the data packet with a switch. Controlling access may include denying access by the access requestor to the access provider.,158,93,,
8233392,PC,"Citrix Systems, Inc.",38471349,Other Topics,7/29/2003,2003,6/21/2026,Transaction boundary detection for reduction in timeout penalties,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,314,93,,
8495305,PC,"Citrix Systems, Inc.",38226024,Other Topics,6/30/2004,2004,7/2/2027,Method and device for performing caching of dynamically generated objects in a data communication network,A method for maintaining a cache of dynamically generated objects. The method includes storing in the cache dynamically generated objects previously served from an originating server to a client. A communication between the client and server is intercepted by the cache. The cache parses the communication to identify an object determinant and to determine whether the object determinant indicates whether a change has occurred or will occur in an object at the originating server. The cache marks the object stored in the cache as invalid if the object determinant so indicates. If the object has been marked as invalid the cache retrieves the object from the originating server.,203,93,,
8238241,PC,"Citrix Systems, Inc.",46302427,Other Topics,7/29/2003,2003,5/5/2027,Automatic detection and window virtualization for flow control,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,212,93,,
7890996,PC,"Citrix Systems, Inc.",42197614,Security Gateway/Security Gateway Receives Messages|Security Gateway/Requests Rather than Malicious Attacks the Security Gateway,2/18/2004,2004,12/28/2026,Using statistical analysis to generate exception rules that allow legitimate messages to pass through application proxies and gateways,A security gateway receives messages rejected by a message filter based on a set of rules. The security gateway also receives attributes of the rejected messages that triggered the rules. The security gateway maintains frequencies with which the messages with a particular attribute were rejected by the rules. The security gateway finds rejected messages or attributes having a high frequency of occurrence. Since messages or attributes having a high frequency of occurrences are more likely to represent legitimate requests rather than malicious attacks the security gateway generates exception rules which would allow messages that have similar attributes to pass through the gateway.,236,93,,
8533846,PC,"Citrix Systems, Inc.",39361211,Other Topics,11/8/2006,2006,9/24/2029,Method and system for dynamically associating access rights with a resource,A method for dynamically associating by a server access rights with a resource includes the step of receiving by the server a request for a resource from a client. The server requests from a policy engine an identification of a plurality of access rights to associate with the resource the plurality of access rights identified responsive to an application of a policy to the client. The server associates the resource with the plurality of access rights via a rights markup language. The server transmits the resource to the client with the identification of the associated plurality of access rights. An application program on the client makes an access control decision responsive to the associated plurality of access rights. The application program provides restricted access to the resource responsive to the access control decision.,278,93,,
8413229,PC,"Citrix Systems, Inc.",39190208,Private Networks/Client Side,8/21/2006,2006,12/29/2028,"Method and appliance for authenticating, by an appliance, a client to access a virtual private network connection, based on an attribute of a client-side certificate",In a method and appliance for authenticating by an appliance a client to access a virtual network connection based on an attribute of a client-side certificate a client authentication certificate is requested from a client. A value of at least one field in the client authentication certificate received from the client is identified. One of a plurality of types of access is assigned responsive to an application of a policy to the identified value of the at least one field each of the plurality of access types associated with at least one connection characteristic.,166,93,,
8171127,PC,"Citrix Systems, Inc.",37912108,Other Topics,10/7/2005,2005,1/13/2029,Systems and methods for response monitoring,Systems and methods for response monitoring are described. A method of generating a measurement for use in calculating an end-user experience metric in a server-based computing environment includes transmitting a message from a client of the server-based computing environment to an application executing in a user space provided by an operating system of the server receiving a graphic response for execution by the client from the application and determining an amount of time elapsed between the transmission of the message and the conclusion of the execution of the graphic response.,263,93,,
8504775,PC,"Citrix Systems, Inc.",39763694,Intermediary Devices/Network Traffic|IP Address/Network Traffic,3/12/2007,2007,2/13/2028,Systems and methods of prefreshening cached objects based on user's current web page,The present solution provides techniques that may accelerate and optimize network traffic in the areas of proxy caching protocol acceleration domain name resolution acceleration and compression improvements using prefetching and/or prefreshening techniques to improve intermediary caching. Techniques described herein may improve the efficiency of obtaining and servicing data from originating servers to requesting clients and accelerates domain name resolution. The present solution may further help accelerate resolution of URLs into IP addresses. The present solution may improve compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,217,93,,
8490148,PC,"Citrix Systems, Inc.",39764023,Data Packets/Data Streams|Data Packets/Data Structures|Data Packets/Payload Portion,3/12/2007,2007,2/11/2029,Systems and methods for managing application security profiles,Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing VPNs SSL offloading content switching application security acceleration and caching.,353,93,,
8255456,PC,"Citrix Systems, Inc.",38225964,Directed Towards/Dynamically Generated Objects,12/30/2005,2005,5/31/2031,System and method for performing flash caching of dynamically generated objects in a data communication network,The present invention is directed towards a method and system for providing a technique referred to as flash caching to respond to requests for an object such as a dynamically generated object from multiple clients. This technique of the present invention uses a dynamically generated object stored in a buffer for transmission to a client for example in response to a request from the client to also respond to additional requests for the dynamically generated object from other clients while the object is stored in the buffer. Using this technique the present invention is able to increase cache hit rates for extremely fast changing dynamically generated objects that may not otherwise be cacheable.,199,93,,
8432800,PC,"Citrix Systems, Inc.",39760775,Intermediary Devices/Network Traffic|Intermediary Devices/Network Packets|Intermediary Devices/Detecting Transaction,7/29/2003,2003,7/15/2027,Systems and methods for stochastic-based quality of service,Systems and methods for utilizing transaction boundary detection methods in queuing and retransmission decisions relating to network traffic are described. By detecting transaction boundaries and sizes a client server or intermediary device may prioritize based on transaction sizes in queuing decisions giving precedence to smaller transactions which may represent interactive and/or latency-sensitive traffic. Further after detecting a transaction boundary a device may retransmit one or more additional packets prompting acknowledgements in order to ensure timely notification if the last packet of the transaction has been dropped. Systems and methods for potentially improving network latency including retransmitting a dropped packet twice or more in order to avoid incurring additional delays due to a retransmitted packet being lost are also described.,177,93,,
8775944,PC,"Citrix Systems, Inc.",41449133,Graphical User Interface/User Interface Element,6/26/2008,2008,1/23/2031,Methods and systems for interactive evaluation of policies,A system for interactive evaluation of policies includes a first graphical user interface element and a second graphical user interface element. The first graphical user interface element enumerates at least one resource. The second graphical user interface element receives an identification of a characteristic of at least one client and displays a result of an application of at least one policy associated with the at least one resource to the at least one client the at least on policy applied responsive to the received identification of the characteristic.,323,92,,
8341732,PC,"Citrix Systems, Inc.",40572801,Virtual Machine/Computing Environment,1/24/2006,2006,5/7/2030,"Methods and systems for selecting a method for execution, by a virtual machine, of an application program",A method for selecting a method of execution for an application includes the step of receiving credentials. A plurality of applications available to a client machine is enumerated responsive to the received credentials. A request to execute an enumerated application is received. One of a predetermined number of methods for executing the requested application is selected responsive to a policy the predetermined number of methods including a method for executing the requested application in a computing environment provided by a virtual machine.,201,92,,
7698453,PC,"Citrix Systems, Inc.",46302423,Other Topics,7/29/2003,2003,11/4/2026,Early generation of acknowledgements for flow control,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,189,92,,
7500262,PC,"Citrix Systems, Inc.",40385496,Other Topics,4/29/2002,2002,11/15/2024,Implementing single sign-on across a heterogeneous collection of client/server and web-based applications,Leveraging an established authenticated session in obtaining authentication to a client application includes receiving a request for access to a client application requiring authentication of a requestor and determining whether there exist characteristics of leverageable authentications corresponding to established sessions having an authenticated state at a time of the determination. When the determination reveals characteristics of at least one leverageable authentication corresponding to an established session and attempt is made to obtain access for the requester to the client application based on the at least one leverageable authentication and the requestor is provided with a notification related to the attempt to obtain access for the requester to the client application.,687,92,,
7996814,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments|Software Application/State Metrics|Software Application/Data Values,12/21/2004,2004,8/13/2029,Application model for automated management of software application deployments,A system for managing a deployment of a software application is disclosed. The system includes a telemetry component that collects data values of state metrics associated with the deployment an application model that represents the deployment a repository of encoded knowledge describing known problems associated with the software application and an analysis subsystem that programmatically maps logical combinations of features associated with the deployment to known problems. The application model includes a representation of physical and logical objects in a domain of the deployment and configuration data about the objects. The analysis subsystem is adapted to query the application model for information about the deployment. The application model can implement a discovery process to construct itself by using an abstract model of a generalized deployment of the software application the discovery process including obtaining information from the managed deployment.,395,92,,
8001527,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments,12/21/2004,2004,10/23/2028,Automated root cause analysis of problems associated with software application deployments,Computer systems and methods are disclosed for managing a deployment of a software application. One system includes an application model describing the deployment the application model comprising a representation of physical and logical objects in a domain of the deployment configuration data about the objects and information about relationships between the objects. The system also includes a root cause analysis module configured to identify one or more problematic objects of the application model and to use pattern-recognition on the application model to find root cause candidates that may be a root cause of one or more problems associated with the problematic objects. The root cause analysis module can be further configured to apply diagnostic unit tests on one or more objects associated with the root cause candidates the diagnostic unit tests configured to narrow down a list of possible root causes of the problems. Various pattern-recognition techniques are disclosed including looking for recent property or configurational changes in the application model clustering of problematic objects examining links between objects in the application model comparisons between pairs of non-problematic objects as well as between problematic objects and non-problematic objects temporal comparisons of the state of the application model and examining objects that are near the problematic objects in the application model.,308,92,,
8291108,PC,"Citrix Systems, Inc.",39760351,Other Topics,3/12/2007,2007,11/5/2029,Systems and methods for load balancing based on user selected metrics,The present invention provides improvements to load balancing by providing a load balancing solution that allows a user to select metrics weights and thresholds from metrics collected or determined by a load balancing appliance as well as metrics obtained from another device such as a server running the service. The systems and methods described providing a load balancing technique in which load balancing decisions can be made based on metrics known by another device monitoring such metrics. The load balancing appliance uses a network management protocol and communication model such as a Simple Network Management Protocol (SNMP) to identify and collect metrics from a server service or other device. These metrics are available on the load balancing appliance with appliance determined metrics. Via a configuration interface of the appliance a user can select one or more appliance determined metrics and/or the metrics obtained via the network management protocol to determine the load of a service.,230,92,,
7954090,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments|Software Application/State Metrics|Software Application/Data Values,12/21/2004,2004,2/25/2030,Systems and methods for detecting behavioral features of software application deployments for automated deployment management,A system for monitoring and analyzing a deployment of a software application is disclosed. The system includes a monitoring component that collects streams of data values of time-variant state metrics associated with the deployment and a feature detector that analyzes the streams to identify features known to be associated with potential problems. Detected features can include deviations of a signal from a normalcy band a rising or descending trend in signal behavior deviations from seasonal or cyclical normalcy bands and the like.,249,92,,
8370420,PC,"Citrix Systems, Inc.",47604699,Other Topics,7/11/2002,2002,5/13/2025,Web-integrated display of locally stored content objects,A method and apparatus for displaying locally stored content objects is disclosed. In one embodiment the method comprises running an agent on a machine and integrating one or more locally stored objects in a page being displayed using information from the agent.,470,92,,
8769522,PC,"Citrix Systems, Inc.",39102550,Other Topics,8/21/2006,2006,11/30/2030,Systems and methods of installing an application without rebooting,A method for automatically changing a version of a client agent for a non-administrative user account without rebooting the user's machine uses a service having installation privileges. The service executes on the client and installs a client agent. The client agent communicates with a network appliance. The client agent detects a difference between its version and a version of the client agent identified by the network appliance. The agent signals the service that it has detected the difference and in response the service executes an installation program that installs without rebooting the client the version of the client agent identified by the appliance. A corresponding system is also described.,376,92,,
7924884,PC,"Citrix Systems, Inc.",38173407,Directed Towards/Other Topics,12/20/2005,2005,8/18/2028,Performance logging using relative differentials and skip recording,The present invention is directed towards “skip” and “differential” recording techniques for recording values of network parameter to a log in a lossless manner while reducing storage resources used to record such values. The counter monitor of the present invention monitors and records values of counters at time intervals to generate a counter log provided via temporary or permanent storage. The counter monitor compares a reading of the value of the counter to a previously obtained value of the counter. If the value of the counter has not changed the counter monitor records only the timestamp to the counter log thereby “skipping” the recording of the unchanged value. If there is any change in the value of the counter then the change in value of the counter i.e. a “differential” value along with the timestamp is stored in the counters log. To further reduce storage resource usage the counter monitor also stores changes to the timestamps as differential changes in time values.,180,92,,
8561148,PC,"Citrix Systems, Inc.",41449132,Graphical User Interface/Other Topics,6/26/2008,2008,3/14/2031,"Methods and systems for interactive evaluation using dynamically generated, interactive resultant sets of policies",A method for interactive policy evaluation using dynamically generated interactive resultant sets of policies includes the step of receiving by a graphical user interface at least one of: a description of a client requesting access to a resource a description of the resource and a description of a method of access requested by the client. The graphical user interface displays at least one policy applicable to the client request for access to the resource. The graphical user interface displays a decision made by applying the at least one policy to the received description.,247,92,,
8191008,PC,"Citrix Systems, Inc.",37903320,Other Topics,10/3/2005,2005,12/10/2027,Simulating multi-monitor functionality in a single monitor environment,The systems and methods of the present provide techniques for virtualizing simulating or providing multiple displays for an environment having one display device or less display devices than desired. The techniques of the present invention virtualize a client's display environment by modifying and controlling the behavior and appearance of an application window displayed on the client based on a desired display layout for the client. The present invention provides a window message processing mechanism to intercept a selected message to a window of an application. The window message processing mechanism compares the behavior and appearance of the window in view of the desired display layout and modifies the message to display the window on the client based on the desired display layout. As such the present invention processes selected window messages to translate the behavior or appearance of the window to the desired display layout.,305,92,,
8117314,PC,"Citrix Systems, Inc.",40572801,Virtual Machine/Computing Environment|Remote Access/Other Topics|Remote Machine/Computing Environment|Remote Machine/Step of Requesting,1/24/2006,2006,4/5/2029,Methods and systems for providing remote access to a computing environment provided by a virtual machine,A method for providing remote access to a computer environment provided by a virtual machine includes the step of receiving authentication information associated with a user of a client machine. Based on the received authentication information a computer environment provided by a virtualized operating system and already associated with the user is identified. A connection is established between the client machine and the identified computing environment.,158,92,,
7865888,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments|Software Application/State Metrics,12/21/2004,2004,7/28/2029,Systems and methods for gathering deployment state for automated management of software application deployments,Systems and methods for obtaining information about a deployment of a software application are disclosed. One system comprises a plurality of deployment servers running components of the software application deployment a plurality of monitors associated with the deployment servers and an analysis subsystem that generates requests for state metrics from the deployment based on rules describing known problems with the software application. The analysis subsystem transmits each request for state metrics to a monitor associated with a deployment server that is associated with the request. The monitors are configured to receive the requests for state metrics from the analysis subsystem and collect the state metrics from one of the components of the software application deployment. The monitors which can reside on the deployment servers or locally with respect to the analysis subsystem can transmit the collected state metrics back to the analysis subsystem. An application model storing a representation of objects of the deployment can also be provided wherein the analysis subsystem queries the application model for deployment information necessary to transmit the requests for state metrics to appropriate ones of the monitors. The monitors can be configured to conduct post-processing of collected state metrics and also to prevent redundant collection.,345,92,,
7870550,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments|Software Application/State Metrics,12/21/2004,2004,9/10/2029,Systems and methods for automated management of software application deployments,Systems and methods for managing a deployment of a software application are disclosed. One system comprises a machine-readable repository of rules describing problems associated with the software application a monitoring component that collects state metrics from the deployment and a problem detector that programmatically uses the rules to map combinations of the collected state metrics to problems.,207,92,,
7630305,PC,"Citrix Systems, Inc.",46302425,Data Packets/Communications Network|Data Packets/Network Connection,7/29/2003,2003,11/27/2025,Tcp selective acknowledgements for communicating delivered and missed data packets,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,243,92,,
8694684,PC,"Citrix Systems, Inc.",39102684,Data Packets/Data Streams|Data Packets/Communications Network|Data Packets/Network Connection|Data Packets/Intercepting|Virtual Server/Virtual Private Network|Virtual Server/Intercepting|Private Networks/Data Communication Network|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/Transport Layer Protocol,8/21/2006,2006,11/26/2029,Systems and methods of symmetric transport control protocol compression,A method for compressing a stream of application layer network traffic communicated over a transport layer connection of a virtual private network connection between a client and a server using an appliance. The appliance intercepts one or more transport layer packets of a stream of application network traffic communicated via a transport layer connection of a virtual private network connection between a client and a server. The appliance accumulates data from a payload of the intercepted transport layer packets determines data accumulated for transmission should be compressed based on one or more compression trigger and compresses the accumulated data into a self-contained compression block for transmission.,448,92,,
7616638,PC,"Citrix Systems, Inc.",46302424,Other Topics,7/29/2003,2003,11/3/2025,Wavefront detection and disambiguation of acknowledgments,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,174,92,,
8103783,PC,"Citrix Systems, Inc.",39763829,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,10/12/2028,Systems and methods of providing security and reliability to proxy caches,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,247,92,,
8108525,PC,"Citrix Systems, Inc.",38776235,Private Networks/Network Session,8/3/2006,2006,10/21/2027,Systems and methods for managing a plurality of user sessions in a virtual private network environment,Methods for establishing an SSL/VPN session on behalf of a user of a client where the user has a previously existing session are described. Methods include receiving by an appliance a request from a first client operated by a user to establish a virtual private network session; creating by the appliance a temporary virtual private network session with the client; identifying by the appliance an existing virtual private network session previously established on behalf of the user; terminating the previous session; and creating a new virtual private network session with the client using the temporary session. Other methods may further include transmitting a request to a user corresponding to whether to terminate one or more previous sessions and transferring session data from a previously existing session to a current session. Corresponding systems are also described.,301,92,,
7953889,PC,"Citrix Systems, Inc.",39030600,Transport Layer Connection/Client Agent,8/3/2006,2006,11/3/2028,Systems and methods for routing vpn traffic around network disruption,Methods for using a client agent to route client requests among a plurality of appliances using transport layer information include the steps of: establishing by a client agent executing on a client a first transport layer connection with a first appliance of a plurality of appliances the first appliance providing access to one or more servers; establishing by a client agent executing on the client a second transport layer connection with a second appliance of a plurality of appliances the second appliance providing access to one or more servers; intercepting by the client agent a packet transmitted by the client; selecting by the client agent one of the connections to transmit the intercepted packet based on a characteristic of at least one of: the transport layer connections the plurality of appliances or the servers; and transmitting the intercepted packet via the selected connection.,183,92,,
8074028,PC,"Citrix Systems, Inc.",39763831,Other Topics,3/12/2007,2007,9/6/2028,Systems and methods of providing a multi-tier cache,The present solution provides a multi-tiered caching and cache indexing system is depicted. A cache management system uses a memory based object index to reference or identify corresponding objects stored in disk. The memory used to index object may grow proportionally or in relation to growth in the size of the disk. The techniques described herein minimize reduce or maintain the size of memory for an object index although the size of storage for storing objects is changed. These techniques allow for more optimal use of memory for object indexing while increasing or decreasing disk size for object storage.,282,92,,
7788536,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments|Software Application/State Metrics|Software Application/Data Values,12/21/2004,2004,6/30/2029,Automated detection of problems in software application deployments,A system for monitoring and analyzing the operation of a deployment of a software application is disclosed. The system includes a monitoring component a repository that stores a plurality of rules and an analysis engine. The monitoring component collects data values of each of a plurality of state metrics associated with the deployment of the software application. At least some of the rules in the repository map respective combinations of states associated with the state metrics to corresponding problems. The analysis engine programmatically detects instances of said problems at least in-part by using the rules to analyze the state metric data values collected by the monitoring component. The rules can also include remedies associated with the detected problems and the system may include remedy selection and execution modules.,293,92,,
7783985,PC,"Citrix Systems, Inc.",38135884,Computing Devices/Computing Environment|Computing Devices/Viewer Computing|Remote Access/Viewer Computing|Local Computing/Computing Environment|Local Computing/Network Connection,1/4/2006,2006,10/1/2026,Systems and methods for transferring data between computing devices,Systems and methods for extending the drag-and-drop data transfer mechanism to the remote access environment are described. The extension allows the end-user to select data located on the remote host or the local viewer drag the selected data to a window on the host or viewer and drop the selected data in the window. In response the data is transferred via a network connecting the viewer and the host without any further input from the end-user.,279,92,,
8918488,PC,"Citrix Systems, Inc.",41820735,Computing Devices/Computing Environment|Computing Devices/Virtualization Environment,2/4/2009,2009,10/14/2031,Methods and systems for automated management of virtual resources in a cloud computing environment,A system for automated management of virtual resources in a cloud computing environment includes a host computing device communication component and a storage system communication component. The storage system communication component is executed by a storage delivery management service communicates with a storage system adapter in a storage area network to identify a storage system in a storage area network and directs the automated provisioning of a virtual storage resource on the identified storage system the storage system providing resources for provisioning the virtual drive. The host computing device communication component receives a request for access by a host computing device to the virtual storage resource and responds to the host computing device with an identification of a network port of the identified storage system and an identification of the provisioned virtual storage resource.,244,92,,
7996549,PC,"Citrix Systems, Inc.",38005130,Data Packets/Data Streams|Data Packets/Packet Engine|Data Packets/Intercepting,1/14/2005,2005,8/21/2028,Methods and systems for recording and real-time playback of presentation layer protocol data,A method for recording and real-time playback of presentation layer protocol data includes the step of intercepting by a recorder a presentation layer protocol data stream comprising a plurality of packets during transmission of the presentation layer protocol data stream from a first device to a second device the presentation layer protocol data stream representing display data. A distributor transmits a copy of at least one packet of the presentation layer protocol data stream. A protocol engine uses information associated with the at least one copied packet to regenerate the display data represented by the at least one copied packet. The steps of intercepting the presentation layer protocol data stream and of transmitting the copy of the at least one packet repeat until the first device completes transmission of the protocol data stream to the second device.,282,92,,
8151323,PC,"Citrix Systems, Inc.",38595542,Remote Access/Resource Provided|Remote Access/Client Devices|Remote Access/Access Rights|Private Networks/VPN User|Private Networks/Level of Access,4/12/2006,2006,6/22/2029,Systems and methods for providing levels of access and action control via an ssl vpn appliance,The present invention relates to systems and methods to identify a level of access for a resource being accessed via a secure socket layer virtual private network (SSL VPN) connection to a network and to control the action on the resource based on the identified level of access. The appliance described herein provides intelligent secure access and action control to resources based on a sense and respond mechanism. When a user requests access to a resource via the SSL VPN connection of the appliance the appliance obtains information about the client to determine the user access scenariothe location device connection and identify of the user or client. Based on the collected information the appliance responds to the detected user scenario by identifying a level of access to the resource for the user/client such as rights to view print edit or save a document Based on the identified level of access the appliance controls the actions performs on the resource by various techniques described herein so that the user can only perform the allowed action n accordance with the level of access. As such the present invention allows organization to control and provide the appropriate level of access to valuable confidential or business critical information accessed remotely or via a pubic network while protecting such information by controlling the types of actions performed or allowed to be performed remotely on the information.,176,92,,
7768543,PC,"Citrix Systems, Inc.",38335664,Other Topics,3/9/2006,2006,4/28/2029,System and method for dynamically altering videoconference bit rates and layout based on participant activity,Systems and Methods to transmit and simultaneously display all video streams in a video conference by dynamically adapting video streams based on audio volume of the participants include allocating an amount of bandwidth to a participant in a videoconference; determining a level of activity exhibited by the participant during the videoconference and changing the amount of bandwidth allocated to the participant responsive to the determined level of activity. In another aspect a method for displaying video streams includes creating a graphical representation of a participant in a videoconference; displaying the created graphical representation; determining a level of activity exhibited by the participant during the videoconference; and altering the displayed graphical representation of the participant responsive to the determined level of activity.,129,92,,
7954150,PC,"Citrix Systems, Inc.",40572801,Virtual Server/Client Machine|Virtual Machine/Computing Environment|Virtual Machine/Client Agent,1/24/2006,2006,8/28/2029,Methods and systems for assigning access control levels in providing access to resources via virtual machines,A system for granting access to resources includes a client machine a collection agent a policy engine and a broker server. The client machine requests access to a resource. The collection agent gathers information about the client machine. The policy engine receives the gathered information and assigns one of a plurality of levels of access responsive to application of a policy to the received information. The broker server establishes responsive to the assigned level of access a connection between the client machine and a computing environment providing the requested resource the computing environment provided by a virtual machine.,440,92,,
8255570,PC,"Citrix Systems, Inc.",39763892,Compression History,3/12/2007,2007,2/23/2029,Systems and methods of compression history expiration and synchronization,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,243,92,,
8131825,PC,"Citrix Systems, Inc.",37912022,Remote Access/Local Machine|Remote Access/Remote File|Remote Machine/Remote Application|Remote Machine/Remote File,10/7/2005,2005,10/18/2028,Method and a system for responding locally to requests for file metadata associated with files stored remotely,A method and system for responding locally to requests for file metadata associated with files stored remotely includes a method of responding locally to requests for file metadata without downloading the file from a remote location. A directory structure representing an application program stored by a remote machine and metadata associated with each file comprising the stored application program are received from the remote machine. The directory and the metadata are stored. At least one request to access metadata associated with a specific tile in the directory structure is received. The stored metadata is used to respond to the at least one request.,262,92,,
7870153,PC,"Citrix Systems, Inc.",40572801,Virtual Machine/Computing Environment|Remote Access/Remote File|Remote Machine/Computing Environment|Remote Machine/Remote Application|Remote Machine/Remote File|Remote Machine/Step of Requesting|Remote Machine/Response to a Determination,1/24/2006,2006,1/27/2028,"Methods and systems for executing, by a virtual machine, an application program requested by a client machine",A method for executing by a virtual machine an application program requested by a client machine includes the step of receiving a file including access information for accessing a plurality of application files and for executing a first client capable of receiving an application stream. An identification of the plurality of application files is retrieved responsive to the received file. At least one characteristic required for execution of the plurality of application files is retrieved responsive to the file. A determination is made as to whether a client machine includes the at least one characteristic. A second client is executed responsive to a determination that the client machine lacks the at least one characteristic the second client requesting execution of the plurality of application files on a remote machine comprising a virtual machine providing a computing environment having the at least one characteristic.,227,92,,
7346842,PC,"Citrix Systems, Inc.",39182358,Client Node/Network Communication|Client Node/Portions of the Page|Client Node/Transmitting the same Data to more than One|Transmitted Page,11/2/2000,2000,7/30/2024,Methods and apparatus for incorporating a partial page on a client,The invention relates to a method and apparatus for regenerating portions of the page that have changed and transmitting only those portions to the client for display. Executing only the necessary parts of the page generation code and transmitting only changes to the client improves the efficiency of using the resources of the network communication channel the client node and the server node. Performing these operations only when required when the data has changed improves the efficiency of use even further. The invention also takes advantage of any portions of the page that are already on the client by reusing them and thus eliminates the need to regenerate or transmit those reusable portions.In one aspect the invention relates to a method for incorporating a partial page into a transmitted page displayed on a client. The method includes displaying the transmitted page on a client receiving by the client a regenerated portion of the transmitted page from a server and incorporating by the client the regenerated portion into the transmitted page displayed on the client. In one embodiment the method includes receiving by the client a modification list from the server instructing the client on the incorporation of the regenerated page portion into the transmitted page. In another embodiment the method includes receiving by the client additional code instructing the client on how to interpret commands contained in the modification list.,121,92,,
7865589,PC,"Citrix Systems, Inc.",39762555,Data Packets/Data Streams|Data Packets/Data Structures|Data Packets/Payload Portion,3/12/2007,2007,2/14/2029,Systems and methods for providing structured policy expressions to represent unstructured data in a network appliance,Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing VPNs SSL offloading content switching application security acceleration and caching.,109,92,,
8095940,PC,"Citrix Systems, Inc.",37885424,Other Topics,9/19/2005,2005,2/21/2029,Method and system for locating and accessing resources,In a method for accessing resources provided by an operating system a request for a resource is received by an application program executing inside an environment. A first identifier associated with the resource is acquired. A registry is consulted responsive to an association between a first identifier associated with the resource and a second identifier associated with the resource the association associated with the environment. The resource and an environment on which to launch the resource are identified responsive to consulting the registry. The second identifier is associated with the resource with the environment and with the environment on which to launch the resource. A registry key for the resource is stored in the registry the registry key comprising the second identifier. The request for the resource is redirected to the identified instance of the resource responsive to the second identifier. The request for the resource is responded to using the instance of the resource located in the environment on which the resource resides. The requested resource is launched in the identified environment responsive to the second identifier.,201,92,,
8341270,PC,"Citrix Systems, Inc.",40572801,Virtual Machine/Computing Environment|Virtual Machine/Hypervisor,1/24/2006,2006,2/28/2030,Methods and systems for providing access to a computing environment,A method for providing access to a computing environment includes the step of receiving by a broker machine a request from a client machine for access to a computing environment the request including an identification of a user of the client machine. One of a plurality of virtual machines is identified the identified virtual machine providing the requested computing environment. One of a plurality of execution machines is identified the identified execution machine executing a hypervisor providing access to hardware resources required by the identified virtual machine. A connection is established between the client machine and the identified virtual machine.,316,92,,
7853678,PC,"Citrix Systems, Inc.",39762539,Data Packets/Data Streams|Data Packets/Data Structures|Data Packets/Payload Portion,3/12/2007,2007,1/11/2029,Systems and methods for configuring flow control of policy expressions,Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing VPNs SSL offloading content switching application security acceleration and caching.,123,92,,
7853679,PC,"Citrix Systems, Inc.",39762558,Data Packets/Data Streams|Data Packets/Data Structures|Data Packets/Payload Portion,3/12/2007,2007,1/9/2029,Systems and methods for configuring handling of undefined policy events,Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing VPNs SSL offloading content switching application security acceleration and caching.,94,92,,
8170975,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments,12/21/2004,2004,3/12/2028,Encoded software management rules having free logical variables for input pattern matching and output binding substitutions to supply information to remedies for problems detected using the rules,A rule stored in a tangible computer-readable memory is adapted to be programmatically applied by a computer to automatically detect occurrences of a particular problem in a deployment of a software application. The rule comprises a plurality of atomic gates and a plurality of operator gates. The atomic gates have predicates for detecting occurrences of a plurality of conditions in the software application deployment. The operator gates are configured to detect predefined logical combinations of outputs of the atomic gates to generate a rule output that indicates whether the problem is currently detected in the deployment. The rule contains a plurality of free logical variables which can be assigned values. The free logical variables are configured for use in input pattern matching and output binding substitutions to supply information to a remedy for the problem. Each substitution comprises an assignment of a value to a variable.,157,92,,
7809818,PC,"Citrix Systems, Inc.",39763833,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,5/24/2029,Systems and method of using http head command for prefetching,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,104,92,,
7796510,PC,"Citrix Systems, Inc.",39762545,Transport Layer Connection/Quality of Service,3/12/2007,2007,5/13/2028,Systems and methods for providing virtual fair queueing of network traffic,Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments a proxy for one or more connections may allocate distribute or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate distribute or generate these indications in such a way as to provide quality of service to one or more connections or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.,127,92,,
7925694,PC,"Citrix Systems, Inc.",40149650,Other Topics,10/19/2007,2007,7/20/2029,Systems and methods for managing cookies via http content layer,The cookie management system and methods of the present solution address issues with rewriting cookie headers by handling cookies in the content layer of HTTP instead of the HTTP transaction layer. The present solution maintains cookie information for a browser via an intermediary and installs the correct cookie parameters in the browser via the HTTP content layer. Instead of using the headers of the HTTP transaction layer which may cause issues due to rewriting the present solution manages the cookies outside of this layer. This avoids the browser managing the cookies incorrectly. Set cookies headers served from a server in response to client HTTP requests are removed by the intermediary. Cookie information from the headers are stored in a cookie jar on the intermediary. The intermediary delivers instructions and scripts via the content layer of the HTTP response to set the cookie in the browser. The scripts detect browser changes to the cookie and communicates the changes to the intermediary to update the cookie jar. With the present solution the domain and path names of a cookie are set correctly on the browser when delivering content via a reverse proxy.,165,92,,
8180724,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments|Software Application/Data Values,12/21/2004,2004,2/7/2028,Systems and methods for encoding knowledge for automated management of software application deployments,A method of encoding knowledge is disclosed which can be used to automatically detect problems in software application deployments. The method includes accessing a source of knowledge describing a problem known to occur in deployments of a particular software application and which identifies a plurality of conditions associated with the problem. An encoded representation of the knowledge source is generated according to a predefined knowledge encoding methodology. The encoded representation is adapted to be applied automatically by a computer to analyze data representing a current state of a monitored deployment of the software application to detect whether the conditions and the problem exist therein. In various implementations the encoded representation of the knowledge can include queries for deployment information information concerning the relative importance of the conditions to a detection of the problem and/or logical constructs for computing a confidence value in the existence of the problem and for determining whether to report the problem if some of the conditions are not true. The knowledge source can comprise a text document (such as a knowledge base article) a flowchart of a diagnostic troubleshooting method and the like. Also disclosed are methods of at least partially automating the encoding process.,198,92,,
8355407,PC,"Citrix Systems, Inc.",40572801,Virtual Server/Client Machine|Virtual Machine/Hypervisor|Virtual Machine/Client Agent,1/24/2006,2006,2/11/2028,"Methods and systems for interacting, via a hypermedium page, with a virtual machine executing in a terminal services session",A method for making a hypermedium page interactive the hypermedium page displayed by a network browser includes the step of selecting a hyperlink on the hypermedium page displayed on a client machine the hyperlink identifying a desired computing resource. A hyperlink configuration file is retrieved the hyperlink configuration file corresponding to the hyperlink and identifying a server machine. A client agent is started on the client machine. The client agent creates via a terminal services session a communication link to a virtual machine executing on the server identified by the hyperlink configuration file the virtual machine executed by a hypervisor executing in the terminal services session provided by an operating system executing on the server. The client agent receives data from the virtual machine and displays on the client machine the received data without intervention by the network browser.,309,92,,
7783757,PC,"Citrix Systems, Inc.",39763832,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,3/24/2029,Systems and methods of revalidating cached objects in parallel with request for object,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,79,92,,see family
8270423,PC,"Citrix Systems, Inc.",46327480,Intermediary Devices/Network Traffic|Intermediary Devices/Network Packets|Intermediary Devices/Detecting Transaction,7/29/2003,2003,5/14/2027,Systems and methods of using packet boundaries for reduction in timeout prevention,Systems and methods for utilizing transaction boundary detection methods in queuing and retransmission decisions relating to network traffic are described. By detecting transaction boundaries and sizes a client server or intermediary device may prioritize based on transaction sizes in queuing decisions giving precedence to smaller transactions which may represent interactive and/or latency-sensitive traffic. Further after detecting a transaction boundary a device may retransmit one or more additional packets prompting acknowledgements in order to ensure timely notification if the last packet of the transaction has been dropped. Systems and methods for potentially improving network latency including retransmitting a dropped packet twice or more in order to avoid incurring additional delays due to a retransmitted packet being lost are also described.,150,92,,
8051180,PC,"Citrix Systems, Inc.",40572801,Virtual Server/Client Machine|Virtual Machine/Computing Environment|Virtual Machine/Hypervisor|Virtual Machine/User Session,1/24/2006,2006,8/4/2028,Methods and servers for establishing a connection between a client system and a virtual machine executing in a terminal services session and hosting a requested computing environment,A method for providing access to a computing environment includes the step of receiving a request from a client system for an enumeration of available computing environments. Collected data regarding available computing environments are accessed. Accessed data are transmitted to a client system the accessed data indicating to the client system each computing environment available to a user of the client system. A request is received from the client system to access one of the computing environments. A connection is established between the client system and a virtual machine hosting the requested computing environment via a terminal services session the virtual machine executed by a hypervisor executing in the terminal services session provided by an operating system executing on one of a plurality of execution machines.,318,92,,
7656799,PC,"Citrix Systems, Inc.",46302426,Other Topics,7/29/2003,2003,6/28/2025,Flow control system architecture,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,300,92,,
8169436,PC,"Citrix Systems, Inc.",40591947,Remote Machine/Local Computing Machine|Remote Machine/Remote Application|Local Computing/Remote Computing Machine|Local Computing/Local Agent,1/27/2008,2008,11/24/2030,Methods and systems for remoting three dimensional graphics,Methods and systems for providing three dimensional graphics to remote computing machines and appliances that include an agent executing on a local computing machine to intercept a plurality of graphics commands generated by a three dimensional application executing on a local computing machine. A first portion of the plurality of graphics commands are encoded by the agent using a first codec while a second portion of the plurality of graphics commands are encoded by the agent using a second codec. The agent creates a frame comprising the first portion and the second portion of the plurality of graphics commands compresses the frame and transmits the frame to a remote computing machine.,169,92,,
7720936,PC,"Citrix Systems, Inc.",39763763,Intermediary Devices/Network Traffic|Intermediary Devices/DNS|IP Address/Network Traffic|IP Address/Cases the Present|IP Address/DNS,3/12/2007,2007,4/21/2028,Systems and methods of freshening and prefreshening a dns cache,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,200,91,,
7756826,PC,"Citrix Systems, Inc.",38878037,Other Topics,6/30/2006,2006,2/13/2027,Method and systems for efficient delivery of previously stored content,Systems and methods for reducing file sizes for files delivered over a network are disclosed. A method comprises receiving a first file comprising sequences of data; creating a hash table having entries corresponding to overlapping sequences of data; receiving a second file comprising sequences of data; comparing each of the sequences of data in the second file to the sequences of data in the hash table to determine sequences of data present in both the first and second files; and creating a third file comprising sequences of data from the second file and representations of locations and lengths of said sequences of data present in both the first and second files.,277,91,,
8312120,PC,"Citrix Systems, Inc.",39760770,Virtual Server/Spillover,8/22/2006,2006,11/18/2028,Systems and methods for providing dynamic spillover of virtual servers based on bandwidth,The present solution provides a spillover management technique for virtual servers of an appliance based on bandwidth. A network administrator may configure a bandwidth threshold for one or more virtual servers such as virtual servers providing acceleration or load balancing for one or more services. The bandwidth threshold may be specified as a number of bytes transferred via the virtual server. The bandwidth threshold may also be specified as a round trip time or derivative thereof. A user may specify the bandwidth threshold via a configuration interface. Otherwise the appliance may establish the bandwidth threshold. The appliance monitors the bandwidth used by a first virtual server. In response to detecting the bandwidth reaching or exceeding the bandwidth threshold the appliance dynamically directs client requests to a second virtual server.,134,91,,
8443358,PC,"Citrix Systems, Inc.",40942733,Virtual Machine/Guest,2/10/2006,2006,4/12/2031,Hot pluggable virtual machine,An exemplary method for a hot pluggable virtual machine comprises authenticating a user within an active host environment on a host device executing a virtual machine driver configuring a guest environment and activating the guest environment for the virtual machine on the host device.,111,91,,
7490073,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments|Software Application/Data Values,12/21/2004,2004,9/8/2026,Systems and methods for encoding knowledge for automated management of software application deployments,A method of encoding knowledge is disclosed which can be used to automatically detect problems in software application deployments. The method includes accessing a source of knowledge describing a problem known to occur in deployments of a particular software application and which identifies a plurality of conditions associated with the problem. An encoded representation of the knowledge source is generated according to a predefined knowledge encoding methodology. The encoded representation is adapted to be applied automatically by a computer to analyze data representing a current state of a monitored deployment of the software application to detect whether the conditions and the problem exist therein. In various implementations the encoded representation of the knowledge can include queries for deployment information information concerning the relative importance of the conditions to a detection of the problem and/or logical constructs for computing a confidence value in the existence of the problem and for determining whether to report the problem if some of the conditions are not true. The knowledge source can comprise a text document (such as a knowledge base article) a flowchart of a diagnostic troubleshooting method and the like. Also disclosed are methods of at least partially automating the encoding process.,179,91,,
7706266,PC,"Citrix Systems, Inc.",39760350,Transport Layer Connection/Quality of Service,3/12/2007,2007,7/1/2028,Systems and methods of providing proxy-based quality of service,Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments a proxy for one or more connections may allocate distribute or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate distribute or generate these indications in such a way as to provide quality of service to one or more connections or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.,103,91,,
8141164,PC,"Citrix Systems, Inc.",39101266,Other Topics,8/21/2006,2006,5/8/2030,Systems and methods for dynamic decentralized load balancing across multiple sites,A method for enabling decentralized dynamic load balancing among a plurality of appliances providing access to a plurality of sites each site comprising a local area network and at least one server includes: determining by a first appliance a first number of services currently available for access via a local area network connected to the first appliance; receiving by the first appliance from a second appliance a communication indicating a second number of services currently available for access via a local area network connected to the second appliance; receiving by the first appliance a plurality of requests to connect to a service; determining by the first appliance a weight to be assigned to the second appliance wherein the determination is responsive to the second number; and forwarding by the first appliance to the second appliance a subset of the plurality of requests wherein the number of requests comprising the subset is determined in response to the determined weight. Corresponding systems are also described.,124,91,,
8190707,PC,"Citrix Systems, Inc.",40085515,Local Computing/Computing Environment|Local Computing/Data Items,10/20/2007,2007,7/4/2028,System and method for transferring data among computing environments,Systems and methods for transferring data among computing environments include a method for transferring data items among a portion of a remote computing environment and a portion of a local computing environment using a presentation layer protocol. Data items are transferred during transfer cycles and upon the release of data objects into a destination computing environment. Transfer cycles may transfer data among local and remote computing environments among more than one remote computing environment and may further transfer in parallel with other transfer cycles. A first transfer cycle transferring a first data item continues to transfer the first data item when a second transfer cycle initializes and transfers a second data item during a portion of the first transfer cycle. Data operations may be performed on data items during the transfer of a data item and data items may be compressed or segmented prior to transfer.,401,91,,
8397287,PC,"Citrix Systems, Inc.",39102873,Private Networks/Level of Access|Private Networks/Client Side,8/21/2006,2006,3/11/2030,"Method and system for authorizing a level of access of a client to a virtual private network connection, based on a client-side attribute",An appliance and method for authorizing a level of access of a client to a virtual private network connection based on a client-side attribute includes the step of establishing by an appliance a control connection with a client upon receiving a client request to establish a virtual private network connection with a network. The appliance transmits via the control connection a request to the client to evaluate at least one clause of a security string the at least one clause including an expression associated with a client-side attribute. The client transmits via the control connection a response to the appliance comprising a result of evaluating the at least one clause by the client. The appliance assigns the client to an authorization group based on the result of evaluation of the at least one clause.,222,91,,
7219233,PC,"Citrix Systems, Inc.",38015870,Other Topics,8/18/2000,2000,2/26/2025,Methods and apparatus for associating a user with content in a collaborative whiteboard system,Projector and camera arrangements are provided for use in electronic whiteboard systems. Specifically the present invention provides projector and camera arrangements wherein the projector and camera share the same imaging optics. By sharing the same projection and camera optics the distortions that affect the projection system are the same as those of the camera system. Thus the calibration step required in conventional whiteboard systems where the projector and camera are separate i.e. each having their own distinct optics and settings is no longer needed. Further the arrangements provided in accordance with the invention are self-aligning even when lens distortions are large and even in the presence of strong perspective effects. The shared optics projector and camera arrangements of the invention also provide for dynamic zooming. In addition various active and passive optical marker or lightpen designs are provided for use in electronic whiteboard systems.,127,91,,
7617531,PC,"Citrix Systems, Inc.",41261650,Security Gateway/Security Gateway Receives Messages,2/18/2004,2004,1/5/2027,Inferencing data types of message components,A security gateway receives messages and extracts components thereof typically in the form of field name-value pairs. The security gateway determines a data type of the values for individual field names to infer the most restrictive data type of the values for that field. The security gateway may then generates rules which would block messages that do not have values that match the most restrictive data type. Since the most restrictive data type defines a data type of values for the field as narrowly as possible the generated rules will make it more difficult for an intruder to guess a valid data type of a value. Since messages that have values that do not match the most restrictive data type are likely to represent malicious attacks the more narrowly the data type of values is defined the greater the number of illegitimate messages that will be blocked.,145,91,,
7765378,PC,"Citrix Systems, Inc.",42341969,Other Topics,6/1/2001,2001,6/8/2026,Utilization of memory storage,A file storage system can include a file manager that adaptively partitions memory to accommodate the storage of fragmented data information. The fragments potentially of varying size can be stored in a volume of memory that is partitioned to include a group of storage segments. In the event that a particular fragment is not sized to efficiently fit in a free storage segment the segment can be further subdivided to accommodate a fragment. In this way a segment allotted for storage of data information can be adaptively subdivided into a smaller group of storage sub-segments. These sub-segments and yet potentially smaller storage partitions of the sub-segments can then be used to store additional fragments of a related stream of data. Based on this technique portions of a logical stream of data information can be stored in the segments that vary in size. Meta data associated with the stored fragments can be used to facilitate reconstruction of a file or data stream.,364,91,,
7664857,PC,"Citrix Systems, Inc.",39760353,Data Packets/Communications Network|Data Packets/Network Connection,1/26/2007,2007,6/13/2028,Systems and methods of using an ip id field for automatic wan/lan detection,The solution of the present invention provides systems and methods for encoding information into an Internet Protocol identification field (IPID) of an IP layer header of a network packet in a manner acceptable to many or all of the network devices that encounter the encoded packet. In one embodiment the solution described herein encodes the IP identification field of the IPID header with information to be communicated between devices. Appliances may use the encoded IP field as a signal or a means for a low-bandwidth subcarrier of data between the appliances that is transparent to any intervening network equipment. For example the encoded field may be used to announce or probe the presence of a device a functionality or capability of device or to indicate a type or speed of a network connection of a port on a device.,138,91,,
8132247,PC,"Citrix Systems, Inc.",40339420,IP Address/SSL VPN Session,8/3/2007,2007,11/21/2029,Systems and methods for authorizing a client in an ssl vpn session failover environment,The SSL VPN session failover solution of the appliance and/or client agent described herein provides an environment for handling IP address assignment and end point re-authorization upon failover. The appliances may be deployed to provide a session failover environment in which a second appliance is a backup to a first appliance when a failover condition is detected such as failure in operation of the first appliance. The backup appliance takes over responsibility for SSL VPN sessions provided by the first appliance. In the failover environment the first appliance propagates SSL VPN session information including user IP address assignment and end point authorization information to the backup appliance. The backup appliance maintains this information. Upon detection of failover of the first appliance the backup appliance activates the transferred SSL VPN session and maintains the user assigned IP addresses. The backup appliance may also re-authorize the client for the transferred SSL VPN session.,203,91,,
8010679,PC,"Citrix Systems, Inc.",40572801,Virtual Machine/Computing Environment|Virtual Machine/Hypervisor|Virtual Machine/User Session,1/24/2006,2006,9/27/2028,Methods and systems for providing access to a computing environment provided by a virtual machine executing in a hypervisor executing in a terminal services session,A method for providing access to a computing environment includes the step of receiving by a broker machine a request from a client machine for access to a computing environment the request including an identification of a user of the client machine. One of a plurality of virtual machines is identified by a session management component the identified virtual machine providing the requested computing environment. One of a plurality of execution machines is identified the identified execution machine providing a terminal services session in which a hypervisor executes to provide access to hardware resources required by the identified virtual machine. The hypervisor launches the identified virtual machine. A connection is established between the client machine and the identified virtual machine via the terminal services session.,180,91,,
8213393,PC,"Citrix Systems, Inc.",39101319,Private Networks/Client Agent|Private Networks/Network Session|Private Networks/VPN User|IP Address/Virtual Private Network|IP Address/SSL VPN Session,8/21/2006,2006,6/19/2030,Methods for associating an ip address to a user via an appliance,The intranet IP address management solution of the appliance and/or client described herein provides an environment for efficiently assigning managing and querying virtual private network addresses referred to as intranet IP (IIP) addresses of virtual private network users such as a multitude of SSL VPN users on an enterprise network. The appliance provides techniques and policies for assigning previously assigned virtual private network addresses of a user to subsequent sessions of the user as the user logs in multiple times or roams between access points. This technique is referred to IIP stickiness as the appliance attempts to provide the same IIP address to a roaming VPN user. The appliance also provides a configurable user domain naming policy so that one can ping or query the virtual private network address of a user by an easily referenceable host name identifying the user. The appliance and/or client agent also provide techniques to allow applications to seamlessly and transparently communicate on the virtual private network using the virtual private network address of the user or client on the private network.,206,91,,
7619545,PC,"Citrix Systems, Inc.",39762126,Compression History,3/12/2007,2007,3/12/2027,Systems and methods of using application and protocol specific parsing for compression,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,104,91,,
8886822,PC,"Citrix Systems, Inc.",38595542,Directed Towards/Computing Environment,4/12/2006,2006,11/25/2028,Systems and methods for accelerating delivery of a computing environment to a remote user,The present invention is directed towards a method and system for accelerating delivery of a computing environment to a remote client. The computing environment may include a plurality of files comprising an application program and may be streamed to a remote client from a server. Responsive to a determination of whether transmission of the application may be accelerated an appliance intercepting the plurality of files may accelerate transmission of the application program by applying one or more transport layer transmission acceleration techniques to the plurality of files.,175,91,,
7870277,PC,"Citrix Systems, Inc.",39762538,Data Packets/Data Streams|Data Packets/Data Structures|Data Packets/Payload Portion,3/12/2007,2007,3/24/2029,Systems and methods for using object oriented expressions to configure application security policies,Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing VPNs SSL offloading content switching application security acceleration and caching.,127,91,,
7581005,PC,"Citrix Sytstems, Inc., Florida",39645515,Transport Layer Connection/Transport Layer Protocol,1/20/2005,2005,2/20/2028,Systems and methods for preserving transport layer protocol options,The solution of the present invention provides systems and methods for preserving transport layer header options traversing network devices that terminate transport layer connections. The solution described herein provides a bi-directional intelligent proxying system by which a proxy client exchanges transport layer option information with a proxy server via an application layer protocol. The proxy server which may be in the form of an appliance re-injects the transport layer options received from the client into the appropriate network packets communicated on the intended network. Likewise the proxying appliance can inform the proxy client of transport layer options received from the network such as via a server. With this solution devices that transmit control information exchange communications or other functionality via transport layer options may continue to operate in conjunction with transport layer terminating devices.,218,91,,
7921184,PC,"Citrix Systems, Inc.",38225948,Directed Towards/Dynamically Generated Objects|Real Time/Data Processing,12/30/2005,2005,6/30/2028,System and method for performing flash crowd caching of dynamically generated objects in a data communication network,The present invention is directed towards a “flash crowd” technique for handling situations where the cache receives additional requests e.g.. nearly simultaneous requests for the same object during the time the server is processing and returning the response object for a first requester. Once all such nearly simultaneous requests are responded to by the cache the object is flushed from the cache with no additional expire time or invalidation action needed. This technique of the present invention enables data to be cached and served for very small amounts of time for objects that would otherwise be considered non-cacheable. As such this technique yields a significant improvement in applications that serve fast changing data to a large volume of concurrent users such for example as real time stock quotes or a fast evolving news story.,256,91,,
7584294,PC,"Citrix Systems, Inc.",39763785,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,2/19/2028,Systems and methods for prefetching objects for caching using qos,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,108,91,,
7843912,PC,"Citrix Systems, Inc.",39029097,Private Networks/Client Agent,8/3/2006,2006,12/11/2028,Systems and methods of fine grained interception of network communications on a virtual private network,A method for intercepting communication of a client to a destination on a virtual private network includes an agent executing on the client that intercepts a network communication of the client. The agent provides a virtual private network connection from a first network to a second network. The decision to intercept is based on a network destination description or an identification of an application authorized to be accessed via the virtual private network. In one case the agent determines that a destination specified by the intercepted communication corresponds to a network identifier and a port of a network destination description of an application on the second network authorized for access via the virtual private network. In response to this determination the agent transmits the intercepted communication.,176,91,,
7747953,PC,"Citrix Systems, Inc.",38832547,Computing Devices/Computing Environment,6/15/2006,2006,10/24/2027,Methods and systems for receiving feedback from a scalable number of participants of an on-line presentation,Methods and systems for receiving feedback from a scalable number of participants of an on-line presentation. One method includes analyzing a screen change data set at a first computing device of an on-line presentation environment tagging the screen change data set as requesting acknowledgement by the one or more viewers and transmitting the screen change data set to the one or more viewers. The method also includes receiving a confirmation of receipt of the tagged screen change data set generating a representation of the tagged screen change data set in response to receiving the confirmation of receipt and displaying the generated representation at a presenter.,201,91,,
7779034,PC,"Citrix Systems, Inc.",37912008,Remote Access/Local Machine|Remote Access/Remote File|Remote Machine/Remote Application|Remote Machine/Remote File|Remote Machine/Response to a Determination|Isolation Environment/Local Machine,10/7/2005,2005,12/24/2026,Method and system for accessing a remote file in a directory structure associated with an application program executing locally,A method and system for accessing a file in a directory structure associated with an application includes a method of accessing a file in a directory structure associated with an application. A request by an application for access to a file is intercepted. The request is redirected to a first isolation environment. A determination is made that the requested file does not exist in the first isolation environment. The request is redirected to a second isolation environment responsive to a determination that the file is identified in an enumeration of a directory structure including a plurality of application files residing on a remote machine. The requested file is retrieved from a file server responsive to a determination that the second isolation environment does not contain the file and that the file is identified in the enumeration.,233,91,,
7865585,PC,"Citrix Systems, Inc.",39763786,Compression History,3/12/2007,2007,3/7/2029,Systems and methods for providing dynamic ad hoc proxy-cache hierarchies,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,118,91,,
7900201,PC,"Citrix Systems, Inc.",40342941,Software Application/Software Application Deployments,12/21/2004,2004,8/19/2029,Automated remedying of problems in software application deployments,Computer-implemented systems and methods for managing a deployment of a software application are disclosed. A method includes identifying problems with the deployment each problem having a severity rating. For each identified problem one or more associated remedies are identified each remedy having a severity rating based on the severity rating of the problem with which the remedy is associated. The method further includes ranking the remedies based on the remedies' severity ratings. The remedies can be executed in order of rank. Also disclosed are systems and methods of preventing simultaneous execution of certain types of remedies either on the deployment in general or on a set of components of the deployment. Also disclosed are methods for logging the results of executed remedies and their effect on deployment health.,123,91,,
8484656,PC,"Citrix Systems, Inc.",39760352,Other Topics,3/12/2007,2007,9/10/2031,Systems and methods for providing global server load balancing of heterogeneous devices,The present invention provides improvements to load balancing by providing a load balancing solution that distributes a load among a plurality of heterogenous devices such as different types of local load balancers using metrics collected from the different devices. The load balancing appliance collects metrics from heterogenous devices using a network management protocol and communication model such as a Simple Network Management Protocol (SNMP). These heterogenous device metrics are available on the load balancing appliance with appliance determined metrics and metrics obtained by the appliance from homogenous devices using a metric exchange protocol. Via a configuration interface of the appliance a user can select one or more of these different metrics for global load balancing. As such the load balancing appliance described herein obtains a multitude of metrics from the different devices under management. Additionally the load balancing appliance described herein provides great flexibility in allowing the user to configure the global load balancer based on the user's understanding of these multitudes of metrics and to take into account the different characteristics and behaviors of the heterogenous devices.,245,91,,
7890570,PC,"Citrix Systems, Inc.",40433032,Remote Access/Resource Provided|Remote Access/Local Machine|Remote Machine/Resource Provided|Remote Machine/Graphical Data,9/12/2007,2007,3/3/2029,"Methods and systems for providing, by a remote machine, access to graphical data associated with a resource provided by a local machine",A method for providing by a remote machine access to graphical data associated with a resource provided by a local machine includes initializing by a remote agent on a remote machine a proxy icon handler. The proxy icon handler receives from an icon handler on a local machine data associated with an icon for a resource provided by the local machine. The proxy icon handler modifies a window in a remote desktop environment displaying a plurality of icons including at least one icon associated with a resource provided by the remote machine and the icon associated with the resource provided by the local machine. The remote agent transmits to the local machine window attribute data associated with the modified window and graphical data representing the window displaying the plurality of icons. The local agent displays the received graphical data in a window formed according to the received window attribute data.,241,91,,
7532134,PC,"Citrix Systems, Inc.",39762127,Compression History,3/12/2007,2007,4/10/2027,Systems and methods for sharing compression histories between multiple devices,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories and compression history indexes across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,116,91,,
8149431,PC,"Citrix Systems, Inc.",41786476,Virtual Server/Client Machine|Virtual Server/Intercepting|Virtual Machine/Computing Environment|Remote Machine/Computing Environment|Remote Machine/Remote Application|Remote Machine/Network Environment,11/7/2008,2008,11/21/2030,Systems and methods for managing printer settings in a networked computing environment,Systems and methods for remotely managing printer settings that are associated with a remote printer connected to a client machine. A virtual printer driver executing on a server is used to generate and manage generate virtual printer queues associated with remote printers connected to the client machine. Each virtual printer queue intercepts print requests generated by one or more applications executing on the server these print requests cause the virtual printer driver to either retrieve printer setting information from cache memory or interrogate the remote printer for printer setting information. The virtual printer driver retrieves printer setting information and associates virtual printer queues with remote printers using the retrieved printer setting information. The virtual printer driver then responds to the print request by generating a graphical interface that incorporates the retrieved printer settings and user-defined printer settings.,222,91,,
8260926,PC,"Citrix Systems, Inc.",42173171,Other Topics,11/25/2008,2008,2/1/2030,Systems and methods for gslb site persistence,The present invention provides systems and methods for maintaining site persistence in a hierarchical Global Server Load Balancing (GSLB) deployment. Via configuration of GSLB services locally and remotely on each of the GSLB appliances and LB appliances at a site a site appliance identifies and associates requests from the GSLB with the site. Furthermore the site appliance may receive a GSLB cookie with the client request and confirms the request is from the expected GSLB in the site hierarchy. When the load balancers receives a response from a server the appliance may include the GSLB cookie with the response back to the client. The appliance may also include an LB cookie to identify the server selected by the LB. When the client sends another request the request may include the GSLB and LB cookie. With this information the GSLB and LB appliance may maintain site persistence for the client as well as server persistence at the site.,212,91,,
7949677,PC,"Citrix Systems, Inc.",40572801,Virtual Server/Client Machine|Virtual Machine/Computing Environment|Virtual Machine/Client Agent|Remote Access/Resource Provided|Remote Machine/Resource Provided|Remote Machine/Computing Environment|Remote Machine/Client Agent|Remote Machine/Step of Requesting|Remote Machine/Access Control,1/24/2006,2006,9/8/2027,Methods and systems for providing authorized remote access to a computing environment provided by a virtual machine,A method for providing authorized remote access to a computing environment provided by a virtual machine includes the step of requesting by a client machine access to a resource. A collection agent gathers information about the client machine. A policy engine receives the gathered information. The policy engine makes an access control decision based on the received information. A computing environment already associated with the user is identified in response to the received information the identified computing environment provided by a virtual machine. A broker server establishes responsive to the access control decision a connection between the client machine and the identified computing environment.,422,91,,
8171483,PC,"Citrix Systems, Inc.",40297704,Isolation Environment/Installation Scope|Isolation Environment/Isolation Scope,10/20/2007,2007,3/1/2031,Method and system for communicating between isolation environments,A method and system for associating installation scopes within an isolation environment where the method includes defining an isolation environment for encompassing an aggregation of installation scopes. Associations are created between a first application and a first installation scope. When the first application requires the presence of a second application within the isolation environment for proper execution an image of the required second application is mounted onto a second installation scope and an association between the second application and the second installation scope is created. Another association is created between the first installation scope and a second installation scope and this third association is created within a third installation scope. Each of the first second and third installation scopes are stored and the first application is launched into the defined isolation environment.,229,91,,
8869262,PC,"Citrix Systems, Inc.",39030773,Private Networks/Other Topics,8/3/2006,2006,5/31/2029,Systems and methods for application based interception of ssl/vpn traffic,A method for allowing or denying by an appliance access to a resource by an application on a client via a virtual private network connection includes basing the decision to allow or deny access on identification of the application. The appliance intercepts a request from an application on a client on a first network to access via a virtual private network connection a resource on a second network. The appliance identifies the application and associates with the intercepted request an authorization policy based on the identity of the application. The appliance determines using the authorization policy and the identity of the application to either allow or deny access by the application to the resource.,227,91,,
7983170,PC,"Citrix Systems, Inc.",39527039,Private Networks/Other Topics,12/19/2006,2006,7/17/2028,In-band quality-of-service signaling to endpoints that enforce traffic policies at traffic sources using policy messages piggybacked onto diffserv bits,IP packets are scheduled at source devices such as cell phones on a private network that connect to the Internet at an edge device. A private traffic controller by the edge device detects pre-Internet congestion on the private network. The private traffic controller uses in-band piggybacked signaling of policy changes by intercepting return packets to the source devices and modifying bits such as DSCP bits in the header. Source traffic controllers in the source devices read the modified DSCP bits and implement specified policy changes dropping or delaying packets at the source device before transmission. Congestion on RF links from cell phones is reduced by the source traffic controllers dropping packets before transmission. The source device limits or drops future packets in response to the policies signaled by the DSCP bits. Rather than indicate the existing packet's priority private DSCP bits signal policy changes to the source device.,244,91,,
7827237,PC,"Citrix Systems, Inc.",39763782,Compression History,3/12/2007,2007,8/4/2028,Systems and methods for identifying long matches of data in a compression history,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,149,91,,
8082511,PC,"Citrix Systems, Inc.",39717354,User Profile,2/28/2007,2007,3/14/2030,Active and passive personalization techniques,A method for personalizing content for a particular user in a computing system comprising a user interface configured to display content. The method comprises identifying a long term profile having one or more features in a feature set and a long term level of importance associated with each term in the feature set identifying a short term profile having one or more features in the feature set and a short term level of importance associated with each term in the feature set identifying input related to the display of the one or more content items on the user interface and using the input to modify the short term level of importance and the long term level of importance associated with each term in the feature set to form a modified user interest set.,197,91,,
7453379,PC,"Citrix Systems, Inc.",39762130,Compression History,3/12/2007,2007,3/12/2027,Systems and methods for identifying long matches of data in a compression history,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,149,91,,
8505006,PC,"Citrix Systems, Inc.",40942733,Virtual Machine/Other Topics,2/10/2006,2006,4/26/2031,Resource management in virtual machines using dynamic table for performing resource queries,Systems and methods are provided for intelligent resource management for a virtual machine. A method for operating a virtual environment can comprise receiving a request for a resource from an application processing the request to identify the resource determining whether the resource is for the virtual environment and modifying a part of a data structure for the request based on a reference to the resource in the virtual environment.,220,91,,
7685298,PC,"Citrix Systems, Inc.",38092954,Virtual Server/Authentication Virtual Server|Remote Access/Resource Provided|Authentication Credentials,12/2/2005,2005,3/2/2027,Systems and methods for providing authentication credentials across application environments,The present invention relates to a system for providing a modified URL from a proxy server to a virtualized computing environment attempting to access a remote resource. The modified URL may contain information which allows a proxy server which receives a request for the URL to generate a request for the remote resource where the request includes any state information necessary to access the resource. After transmitting the request the proxy server may receive the requested resource; and transmit the resource to the application.,241,91,,
8451806,PC,"Citrix Systems, Inc.",39101328,Private Networks/Client Agent|Private Networks/Network Session|Private Networks/VPN User|IP Address/Virtual Private Network|IP Address/SSL VPN Session,8/21/2006,2006,4/9/2028,Systems and methods for pinging a user's intranet ip address,The intranet IP address management solution of the appliance and/or client described herein provides an environment for efficiently assigning managing and querying virtual private network addresses referred to as intranet IP (IIP) addresses of virtual private network users such as a multitude of SSL VPN users on an enterprise network. The appliance provides techniques and policies for assigning previously assigned virtual private network addresses of a user to subsequent sessions of the user as the user logs in multiple times or roams between access points. This technique is referred to IIP stickiness as the appliance attempts to provide the same IIP address to a roaming VPN user. The appliance also provides a configurable user domain naming policy so that one can ping or query the virtual private network address of a user by an easily referenceable host name identifying the user. The appliance and/or client agent also provide techniques to allow applications to seamlessly and transparently communicate on the virtual private network using the virtual private network address of the user or client on the private network.,302,91,,
8504716,PC,"Citrix Systems, Inc.",41351615,Directed Towards/Present Disclosure,10/8/2008,2008,4/13/2032,Systems and methods for allocating bandwidth by an intermediary for flow control,The present disclosure is directed towards systems and methods for allocating a bandwidth credit or an annuity of bandwidth credit to a sender by an intermediary deployed between the sender and a receiver. The sender may be allocated a bandwidth credit or an annuity of bandwidth credit which may identify an amount of data the sender may transmit over a predetermined time period to the receiver via the intermediary. The intermediary may determine an allocation of a one-time bandwidth credit based on the determination that a difference between the rate of transmission of the sender and the bandwidth usage of the sender falls below a predetermined threshold of the bandwidth credit. The intermediary may determine an annuity of bandwidth credit based on a determination that a difference between the bandwidth usage of the sender over the annuity period and the annuity of bandwidth credit exceeds a predetermined threshold.,199,91,,
7460038,PC,"Citrix Systems, Inc.",39763745,Compression History,3/12/2007,2007,3/12/2027,Systems and methods of clustered sharing of compression histories,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,177,91,,
8566925,PC,"Citrix Systems, Inc.",38896896,Virtual Server/Virtual Private Network|Virtual Server/Authentication Virtual Server|Private Networks/Level of Access,8/3/2006,2006,12/8/2030,Systems and methods for policy based triggering of client-authentication at directory level granularity,Systems and methods are disclosed for an appliance to authenticate access of a client to a protected directory on a server via a connection such as a secure SSL connection established by the appliance. A method comprises the steps of: receiving by an appliance a first request from a client on a first network to access a server on a second network the appliance providing the client a virtual private network connection from the first network to the second network; determining by the appliance the first request comprises access to a protected directory of the server; associating by the appliance an authentication policy with the protected directory the authentication policy specifying an action to authenticate the client's access to the protected directory; and transmitting by the appliance in response to the authentication policy a second request to the client for an authentication certificate. Corresponding systems are also disclosed.,182,91,,
7269757,PC,"Citrix Systems, Inc.",46301580,Real Time/Other Topics,7/11/2003,2003,10/12/2024,Distributed computer monitoring system and methods for autonomous computer management,Methods and systems are provided by which a flexible efficient and easy-to-use real-time enterprise management system is provided. The methods and systems provided can effectively monitor and manage the resources and events of each of a plurality of computers within a fluidly changing network environment (e.g. client/server and peer-to-peer networks). Also provided are methods and systems which allow an individual computer to determine whether or not its current performance characteristics vary from their acceptable parameters without having to contact any other computer. Finally provided are methods and systems by which computers can analyze and store data regarding their performance characteristics in real time.,179,91,,
8825859,PC,"Citrix Systems, Inc.",44152683,Other Topics,12/23/2009,2009,6/24/2032,System and methods for mixed mode of ipv6 and ipv4 dns of global server load balancing,Systems and methods for providing one or more GSLB vServers to support both IPv4 and IPv6. The IPv6 support can be provided by permitting both A and AAAA domain name resolution. In other embodiments the IPv6 support can be provided by modifying data structures to support IPv6 addresses.,154,91,,
8352624,PC,"Ardence Delaware, Inc",39319371,Computing Devices/Client Devices|Computing Devices/Data Streams|Virtual Server/Client Devices|Virtual Server/Virtual Disk,4/18/2002,2002,5/6/2024,System for and method of streaming data to a computer in a network,A system for and method of rapidly streaming data to one or more client devices such as personal computers (PC's) from a server employing virtual disk emulation and broadcasting or multicasting of data residing on a network server. In some embodiments the streamed data includes files necessary to boot and configure the one or more client devices the data including hibernation O/S and application files.,251,91,,
8275829,PC,"Citrix Systems, Inc.",39763785,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,7/3/2027,Systems and methods of prefetching objects for caching using qos,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,84,91,,
8676949,PC,"Citrix Systems, Inc.",44063000,Computing Devices/Client Devices|Computing Devices/Network Packets|Data Packets/Client Devices|Data Packets/Network Connection|Virtual Machine/Hypervisor|Virtual Machine/Image Processor Algorithm|Remote Access/Network Packets|Remote Access/Client Devices|Remote Machine/Image Processor Algorithm|Remote Machine/Access Control,11/25/2009,2009,5/29/2031,Methods for interfacing with a virtualized computing service over a network using a lightweight client,Methods for controlling a virtualized computer service remotely through a client includes receiving a connection request from the client for controlling the virtual service available at a virtual machine. The request includes a plurality of connection parameters that describe the connection requirements of the client and is received at a virtual machine that is equipped with an image processor algorithm. The connection parameters are interrogated using the image processor algorithm to identify a specific virtual machine that provides the requested virtualized computer service. A framebuffer data for the identified virtual machine located in virtual memory is accessed and read directly through a hypervisor. The framebuffer data is processed into a plurality of image data packets using the image processor algorithm and transmitted to the client for presenting on a display device associated with the client. The image data packet grammar is tailored to the client and represents an image of the virtual machine display for the specific virtual machine.,215,91,,
8364785,PC,"Citrix Systems, Inc.",39763763,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,1/5/2028,Systems and methods for domain name resolution interception caching,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,135,91,,
8437284,PC,"Citrix Systems, Inc.",46327481,Intermediary Devices/Network Traffic|Intermediary Devices/Network Packets|Intermediary Devices/Detecting Transaction,7/29/2003,2003,4/8/2027,Systems and methods for additional retransmissions of dropped packets,Systems and methods for utilizing transaction boundary detection methods in queuing and retransmission decisions relating to network traffic are described. By detecting transaction boundaries and sizes a client server or intermediary device may prioritize based on transaction sizes in queuing decisions giving precedence to smaller transactions which may represent interactive and/or latency-sensitive traffic. Further after detecting a transaction boundary a device may retransmit one or more additional packets prompting acknowledgements in order to ensure timely notification if the last packet of the transaction has been dropped. Systems and methods for potentially improving network latency including retransmitting a dropped packet twice or more in order to avoid incurring additional delays due to a retransmitted packet being lost are also described.,180,91,,
8615583,PC,"Citrix Systems, Inc.",39763832,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,5/2/2027,Systems and methods of revalidating cached objects in parallel with request for object,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,78,91,H?,"revalidating obj in cache while serving obj to requestor: intermediary device fields client request by serving obj from cache, but also asks server to determine state of obj (I suppose in case cache is stale)"
8181107,PC,Bytemobile Inc,39498711,Mobile Devices/Transmitted Data|Mobile Devices/Request Data|Mobile Devices/Content Server,12/8/2006,2006,2/1/2030,Content adaptation,A system includes a mobile device and an optimization server. The mobile device is capable of transmitting request data that includes a requested webpage and identification data. The optimization server is configured to receive response data that corresponds to the request data from a content server to adapt the response data based on the identification data and to transmit the adapted response data to the mobile device.,247,91,,
7978617,PC,"Citrix Systems, Inc.",39188456,Other Topics,9/15/2006,2006,3/5/2028,Methods for providing performance improvement recommendations,In a method of providing a performance improvement recommendation for a connection between a first network node in communication with a second network node information is transmitted from the first node to the second node to provide communication between the nodes via a number of transmission components. An elapsed time of transmission of the information between a subset of the transmission components is measured the aggregation of the measurements representing time elapsed for end-to-end transmission of the information that includes preparing by the first node the information for transmission and processing by the second node the information upon receipt. A determination is made that one of the measured transmission components has a performance that crosses a predetermined threshold. A recommendation is identified to improve the performance of the identified component.,260,91,,
7793220,PC,"Citrix Systems, Inc.",42669782,Other Topics,8/29/2000,2000,2/9/2026,Scalable derivative services,An efficient method for parsing HTML pages identifies pages containing a mix of static and dynamic content. The pages are parsed to form abstract syntax trees (ASTs) which are then cached along with the pages. When a later version of a page is retrieved it is compared against the cached version and only those portions of the AST that contain different content are reparsed.,188,91,,
8561155,PC,"Citrix Systems, Inc.",39030650,Private Networks/Client Agent|Private Networks/HTTP Request|Transport Layer Connection/Client Agent|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/HTTP Request|Transport Layer Connection/Connection Management,8/3/2006,2006,5/4/2029,Systems and methods for using a client agent to manage http authentication cookies,Systems and methods are described for using a client agent to manage HTTP authentication cookies. One method includes intercepting by a client agent executing on a client a connection request from the client; establishing by the client agent a transport layer virtual private network connection with a network appliance; transmitting by the client agent via the established connection an HTTP request comprising an authentication cookie; and transmitting by the client agent via the connection the connection request. A second method includes intercepting by a client agent executing on a client an HTTP communication comprising a cookie from an appliance on a virtual private network to the client; removing by the client agent the cookie from the HTTP communication; storing by the client agent the received cookie; transmitting by the client agent the modified HTTP communication to an application executing on the client; intercepting by the client agent an HTTP request from the client; inserting by the client agent in the HTTP request the received cookie; and transmitting the modified HTTP request to the appliance. Corresponding systems are also described.,220,91,,
8037126,PC,"Citrix Systems, Inc.",39763834,Intermediary Devices/Network Traffic|IP Address/Network Traffic|IP Address/Cases the Present,3/12/2007,2007,12/11/2027,Systems and methods of dynamically checking freshness of cached objects based on link status,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. In other cases the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address the present solution helps accelerate HTTP access. In some cases the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,127,91,,
8020195,PC,"Citrix Systems, Inc.",39540396,Other Topics,3/30/2007,2007,10/1/2029,Systems and methods for user login,Systems and methods for login a user into a computing system are shown and described. The method can include receiving a request for an anonymous user login creating an identifying tag responsive to the received request creating a user account incorporating the identifying tag and providing to the computing system the created user account to log into the computing system.,221,91,,
8116207,PC,"Citrix Systems, Inc.",39101263,Other Topics,8/21/2006,2006,1/6/2029,Systems and methods for weighted monitoring of network services,A method for determining service availability using a plurality of weighted monitoring agents includes: establishing by an appliance a plurality of agents the plurality of agents monitoring a service executing on a server and each agent having an assigned weight; computing by the appliance a sum of the assigned weights of the agents reporting the service as currently operational; determining by the appliance the sum falls below a given threshold; and transmitting by the appliance an indication that the service is unusable. Corresponding systems are also described.,178,91,,
8725791,PC,"Citrix Systems, Inc.",42751970,User Profile,5/2/2009,2009,1/3/2033,Methods and systems for providing a consistent profile to overlapping user sessions,Just in time delivery of a consistent user profile to overlapping user sessions where a first user session issues a request for a first file of a user profile to a server agent. Upon receiving the request the server agent retrieves the first file from a base user profile and just in time delivers the retrieved first file to the first user session. The user via a second user session executing simultaneously with the first user session issues a request to the server agent for the first file and a second file of the user profile. Upon receiving the request the server agent identifies a modified version of the first file in a provisional user profile retrieves the modified first file from the provisional user profile and the second file from the base user profile and just in time delivers both files to the second user session.,299,91,,
7760642,PC,"Citrix Systems, Inc.",39762540,Transport Layer Connection/Quality of Service,3/12/2007,2007,4/3/2028,Systems and methods for providing quality of service precedence in tcp congestion control,Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments a proxy for one or more connections may allocate distribute or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate distribute or generate these indications in such a way as to provide quality of service to one or more connections or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.,166,91,,
8341287,PC,"Citrix Systems, Inc.",39762541,Data Packets/Data Streams|Data Packets/Data Structures|Data Packets/Payload Portion,3/12/2007,2007,3/21/2028,Systems and methods for configuring policy bank invocations,Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups.,175,91,,
8612614,PC,"Citrix Systems, Inc.",41531260,Other Topics,7/17/2008,2008,1/26/2030,Method and system for establishing a dedicated session for a member of a common frame buffer group,A method for establishing a dedicated session for a member of a common frame buffer group includes the step of transmitting by a server agent via at least one frame buffer channel a first frame buffer update to each generated by one of the plurality of associated clients. The method includes the step of detecting an event generated by one of the plurality of associated clients. The method includes the step of removing by the server agent the one of the plurality of associated clients from the plurality of associated clients. The method includes the step of establishing by the server agent a second frame buffer channel between the removed one of the plurality of associated clients and the server agent. The method includes the step of transmitting a second frame buffer update by the server agent to the removed one of the plurality of associated clients via the second frame buffer channel.,337,90,,
8635344,PC,"Citrix Systems, Inc.",44188809,Directed Towards/Multi-core,12/23/2009,2009,1/22/2032,Systems and methods for managing ports for rtsp across cores in a multi-core system,The present application is directed towards systems and methods for systems and methods for handling real-time streaming protocol sessions by an intermediary multi-core system. When a multi-core intermediary receives a setup request for a real-time streaming protocol session the intermediary processes and forwards the request to a server providing the streaming media. The server sets up an RTSP session and transmits a session identification to the multi-core intermediary. A core of the intermediary receives the transmitted session identification and determines an owner core of the session based on a hash of the session identification. The core transmits the session information to the determined owner core which selects two consecutive ports on which to establish listening services. The owner core then notifies all other cores to establish listening services on the same consecutive ports such that any core that receives an RTSP control message from a client can handle it properly.,205,90,,
8411560,PC,"Citrix Systems, Inc.",46302425,Data Packets/Communications Network|Data Packets/Network Connection,10/30/2002,2002,11/26/2024,Tcp selection acknowledgements for communicating delivered and missing data packets,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,201,90,,
7978716,PC,"Citrix Systems, Inc.",46332087,Virtual Server/Virtual Private Network|Private Networks/Additional Target Packet Traffic,11/24/2003,2003,9/10/2025,Systems and methods for providing a vpn solution,A system apparatus and a method for implementing a secured communications link at a layer other than that at which packets are filtered are disclosed. In one embodiment a computer system is configured to form a virtual private network (VPN) and comprises an address inspection driver to identify initial target packet traffic addressed to a target server. Also the computer system includes a pseudo server module to receive rerouted initial target packet traffic from the address inspection driver. The pseudo server module is configured to convey packet regeneration instructions to a VPN gateway. The address inspection driver functions to identify additional target packet traffic addressed to the target server and routes the additional target packet traffic to the pseudo server. In one embodiment the pseudo server is configured to strip header information from the additional target packet traffic to form a payload and thereafter to route the payload to the target.,148,90,,
8090877,PC,"Citrix Systems, Inc.",40530860,Other Topics,1/26/2008,2008,10/1/2029,Systems and methods for fine grain policy driven cookie proxying,The present solution enables a client that is not configured to use cookies to access resources of the server that uses cookies for communications with the clients. An intermediary deployed between a client and a server intercepts and modifies transmissions between the client and the server to compensate for the mismatch in configuration of the cookies between the client and the server. The present disclosure relates to a method for managing cookies by an intermediary for a client. An intermediary receives a response from a server to a request of a client. The response may comprise a uniform resource locator (URL) and a cookie. The intermediary may modify the response by removing the cookie from the response and inserting a unique client identifier into the URL. The intermediary may store the removed cookie in association with the unique client identifier and forward the modified response to the client.,108,90,,
8335943,PC,"Citrix Systems, Inc.",43355346,Other Topics,6/22/2009,2009,8/14/2030,Systems and methods for stateful session failover between multi-core appliances,The present disclosure presents systems and methods for maintaining operation of stateful sessions by a secondary multi-core appliance upon failover of a first multi-core appliance. A stateful session failover module of primary appliance may receive session states from each of the cores of the primary appliance. The stateful session failover module may communicate the session states of the cores of the primary appliance to a stateful session failover module of the secondary appliance. The stateful session failover module of the secondary appliance may update each of the cores of the secondary appliance with the session states. Upon failover cores of the secondary appliance may maintain operation and features of the sessions handled by the primary appliance prior to failover using the received state sessions for each session maintained.,151,90,,
7720954,PC,"Citrix Systems, Inc.",38825193,Other Topics,8/3/2006,2006,7/13/2028,Method and appliance for using a dynamic response time to determine responsiveness of network services,In a method and appliance for using a dynamic response time to determine responsiveness of one or more network services on a server a monitor determines a response time for each of one or more network services. The monitor establishes an average response time based on the determined response time for each of the one or more network services. The monitor associates with the established average response time a predetermined threshold for which the response time of the one or more network services may deviate from the average response time and maintain an indication of responsiveness. The monitor monitors the response time of the one or more network services to one or more requests. The monitor determines that the response time of the one or more network services deviates from the average response time by the predetermined threshold. The monitor indicates that the one or more network services are unavailable.,168,90,,
7916047,PC,"Citrix Systems, Inc.",39763745,Compression History,3/12/2007,2007,5/17/2027,Systems and methods of clustered sharing of compression histories,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,105,90,,
8112789,PC,"Citrix Systems, Inc.",37963021,Other Topics,10/11/2005,2005,9/21/2029,Systems and methods for facilitating distributed authentication,A method for facilitating distributed authentication includes the step of requesting by a user of a client machine residing in a first domain access to a resource residing in a second domain. The client machine authenticates the user to an intermediate machine. The intermediate machine impersonates the client machine. The intermediate machine impersonating the client machine requests access to the second domain from a domain controller residing in the second domain. The domain controller authorizes the requested access responsive to a determination that the impersonated client machine is trusted for delegation. The domain controller transmits to an application server residing in the second domain authentication data associated with the impersonated client machine. The application server transmits to the intermediate machine a launch ticket uniquely identifying a logon token. The client machine provides to the application server the launch ticket to access the resource residing in the second domain.,187,90,,
8559449,PC,"Citrix Systems, Inc.",46332087,Virtual Server/Virtual Private Network|Private Networks/Additional Target Packet Traffic,11/11/2003,2003,5/13/2025,Systems and methods for providing a vpn solution,"A system apparatus and a method for implementing a secured communications link at a layer other than that at which packets are filtered are disclosed. In one embodiment a computer system is configured to form a virtual private network (""VPN"") and comprises an address inspection driver to identify initial target packet traffic addressed to a target server. Also the computer system includes a pseudo server module to receive rerouted initial target packet traffic from the address inspection driver. The pseudo server module is configured to convey packet regeneration instructions to a VPN gateway. The address inspection driver functions to identify additional target packet traffic addressed to the target server and routes the additional target packet traffic to the pseudo server. In one embodiment the pseudo server is configured to strip header information from the additional target packet traffic to form a payload and thereafter to route the payload to the target.",113,90,,
8024407,PC,"Citrix Systems, Inc.",40473485,Virtual Server/Intercepting,10/17/2007,2007,1/15/2030,"Methods and systems for providing access, from within a virtual world, to an external resource",In a method for providing access to resources a virtual world application executing on a first server transmits to a client data representative of at least one virtual world object. The virtual world application receives from the client a request to access a resource executed on a second server. The virtual world application requests access to the requested resource and in response receives output data generated by the resource. The virtual world application transmits to the client the received output data and data representative of a second virtual world object. In some aspects the virtual world application receives a request to render on a virtual world object output data generated by a resource executed on the client. An agent intercepts the output data generated by the resource executed on the client. A virtual world client applies the intercepted output data as a texture to a virtual world object.,225,90,,
8301686,PC,"Citrix Systems, Inc.",47045871,Computing Devices/Other Topics|Virtual Machine/Other Topics,4/16/2007,2007,10/11/2029,Systems and methods for decentralized computing,Methods and systems for providing decentralized computing are provided. An exemplary method includes generating one or more virtual machine images including at least one application and a virtual machine associating the one or more virtual machine images with user information receiving user information from a digital device selecting one or more associated virtual machine images based on the user information and providing the one or more virtual machine images to the digital device.,142,90,,
8738780,PC,"Citrix Systems, Inc.",42337836,Other Topics,1/22/2009,2009,5/15/2031,System and method for hybrid communication mechanism utilizing both communication server-based and direct endpoint-to-endpoint connections,A new approach is proposed that contemplates systems and methods to support a hybrid solution that utilizes a centralized communication server as the main mechanism for communication between two clients (endpoints) but augments the server-based communication with an optional direct connection between the two clients whenever available while hiding the complexities and time spent dealing with the direct connection from the clients. The switch of the communication mode between the clients is kept transparent to them during their communication session without causing any inconvenience and/or disruption of the communication. When a direct endpoint to endpoint connection is not available the approach preserves the advantages of connecting through the intermediate communication server.,242,90,,
8751844,PC,"Citrix Systems, Inc.",43757654,Virtual Server/Other Topics|Virtual Machine/Other Topics,9/24/2009,2009,4/16/2031,Systems and methods for attributing an amount of power consumption to a workload,A method for attributing a portion of a level of electrical power consumption by a server to a virtual machine executing on the server includes determining a level of electrical power consumption of a server. The method includes identifying a level of load placed on the server by a workload executing on the server. The method includes attributing by a power apportionment module in communication with the server a portion of the level of electrical power consumption of the server to the workload based on the identified level of load. The method includes providing by the power apportionment module to a user an identification of the attributed portion of the level of electrical power consumption.,166,90,,
8184534,PC,"Citrix Systems, Inc.",39760350,Transport Layer Connection/Quality of Service,3/12/2007,2007,3/12/2027,Systems and methods of providing proxy-based quality of service,Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments a proxy for one or more connections may allocate distribute or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate distribute or generate these indications in such a way as to provide quality of service to one or more connections or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.,96,90,,
8392982,PC,"Citrix Systems, Inc.",42738799,Virtual Server/Authentication Virtual Server|Authentication Credentials,3/20/2009,2009,11/8/2030,"Systems and methods for selective authentication, authorization, and auditing in connection with traffic management",The present invention provides a system and method for authentication of network traffic managed by a traffic management virtual server. A traffic management virtual server may determine that a client has not been authenticated from a request of the client to access a server. Responsive to the request the traffic management virtual server may transmit a response to the client with instructions to redirect to an authentication virtual server. The authentication virtual server may receive a second request from the client. The authentication virtual server may then authenticate credentials received from the client and establish an authentication session for the client. Further the authentication virtual server may transmit a second response to redirect the client to the traffic management virtual server. The second response identifies the authentication session. The traffic management virtual server then receives a request from the client with an identifier to the authentication session.,229,90,,
7551620,PC,"Citrix Systems, Inc.",40765951,Data Packets/Data Streams|Data Packets/Network Connection,12/15/2004,2004,6/20/2027,Protecting data integrity in an enhanced network connection,The integrity of a data stream transmitted over a network is protected by adjusting the sequence number the port number or another field of a data packet field for a number of data packets so that the data packets will be considered either valid or invalid by a downstream receiving device. Data packets that have such a field adjusted can be thought of as being rotated outside of a valid range or window as defined for a network connection. This field of a rotated data packet can be further adjusted through de-rotation or re-rotation for various applications. Downstream devices can thus respond to the data packets depending on the state of the rotation.,102,90,,
7613131,PC,"Citrix Systems, Inc.",38003665,Other Topics,11/10/2005,2005,10/8/2027,Overlay network infrastructure,A method and apparatus for processing an overlay network infrastructure. In one embodiment the method comprises a plurality of transparent access points (TAPs). Each TAP is communicably coupled between one or more clients and servers and a wide area network (WAN) to enable the one or more clients to communicate with the one or more servers and is coupled to other of the TAPs via permanently established secure links. The overlay network also comprises a controller coupled to each of the TAPs via a secure connection to configure the TAPs with information to enable each TAP to know what services are available and from which of the TAPs each of the services can be accessed.,153,90,,
8004973,PC,"Citrix Systems, Inc.",38328632,Other Topics,4/25/2006,2006,8/10/2027,Virtual inline configuration for a network device,A performance enhancing proxy network device is configured to operate in a virtual inline mode in which selected network traffic is redirected to and through the network device by a router using simple routing policies. In this way the network device can be coupled to the router in series but can still operate as if it were physically connected inline.,307,90,,
8230105,PC,Bytemobile Inc,39769194,Data Packets/Data Streams,7/10/2007,2007,7/9/2028,Adaptive bitrate management for streaming media over packet networks,A method including receiving a receiver report from a terminal; estimating one or more network conditions of a media network based at least in part on the receiver report; determining an optimal session bitrate based on the estimated one or more network conditions; and providing media data to the terminal based on the optimal session bitrate.,151,90,,
8352605,PC,"Citrix Systems, Inc.",39763786,Compression History,3/12/2007,2007,3/12/2027,Systems and methods for providing dynamic ad hoc proxy-cache hierarchies,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,183,90,,
8386238,PC,"Citrix Systems, Inc.",40404215,Other Topics,11/5/2008,2008,9/19/2030,Systems and methods for evaluating a sequence of characters,A sequence of characters may be evaluated to determine the presence of a natural language word. The sequence of characters may be analyzed to find a subsequence of alphabetical characters. Based on a statistical model of a natural language a probability that the subsequence is a natural language word may be calculated. The probability may then be used to determine if the subsequence is indeed a natural language word.,118,90,,
6141686,PC,"Citrix Systems, Inc.",46254982,Data Packets/Intercepting|IP Address/Network Traffic|IP Address/Source IP|IP Address/Network Layer|IP Address/Network Packets,3/13/1998,1998,3/13/2018,Client-side application-classifier gathering network-traffic statistics and application and user names using extensible-service provider plugin for policy-based network control,Low-level network services are provided by network-service-provider plugins. These plugins are controlled by an extensible service provider that is layered above the TCP or other protocol layer but below the Winsock-2 library and API. Policy servers determine priority of network traffic through control points on a network. Examining packets passing through these control points provides limited data such as the source and destination IP address and TCP ports. Many applications on a client machine may use the same IP address and TCP ports so packet examination is ineffective for prioritizing data from different applications on one client machine. Often some applications such as videoconferencing or data-entry for corporate sales are more important than other applications such as web browsing. A application-classifier plugin to the extensible service provider intercepts network traffic at above the client's TCP/IP stack and associates applications and users with network packets. These associations and statistics such as maximum average and instantaneous data rates and start and stop time are consolidated into tables. The policy server can query these tables to find which application is generating network traffic and prioritize the traffic based on the high-level application. Bandwidth-hogging applications such as browsers can be identified from the statistics and given lower priority.,233,90,,
8046403,PC,"Citrix Systems, Inc.",40433032,Remote Access/Resource Provided|Remote Access/Local Machine|Remote Machine/Resource Provided,9/12/2007,2007,1/28/2030,"Methods and systems for providing, by a remote machine, access to functionality associated with a resource executing on a local machine",A method for providing by a remote machine access to functionality associated with a resource executing on a local machine includes receiving by a remote agent executing on a remote machine an identification of a shell extension associated with a resource provided by a local machine. The remote agent installs a proxy handler associated with the identified shell extension. The proxy handler receives a request for access to the shell extension and redirects the request to a shell extension invoker executing on the local machine.,196,90,,
8646028,PC,"Citrix Systems, Inc.",44142394,Computing Devices/Trusted Virtual Machine|Virtual Machine/Trusted Virtual Machine,12/14/2009,2009,6/20/2031,Methods and systems for allocating a usb device to a trusted virtual machine or a non-trusted virtual machine,The methods and systems provide for allocating a universal serial bus (USB) device to one of a trusted virtual machine and a non-trusted virtual machine. A control program receives data indicating a USB port on the computing machine received a USB device and identifies at least one attribute of the USB device. The control program selects based on application of a policy to the identified at least one device attribute one of a trusted virtual machine and a non-trusted virtual machine executing. The control program grants to the virtual machine selected by the control program access to the USB device.,314,90,,
8090797,PC,"Citrix Systems, Inc.",42289250,Isolation Environment/Computing Machine,5/2/2009,2009,1/5/2030,Methods and systems for launching applications into existing isolation environments,Methods and systems that can launch applications into existing isolation environments do so by executing a run module on a computing machine to intercept requests to execute an application. A client communicating with the computing machine generates requests to execute an application on the computing machine. A run module identifies a profile associated with the requested application and queries an application delivery service to identify at least one isolation environment that corresponds to the profile. The run module receives from the application delivery service a response that identifies a first isolation environment associated with the application and issues a command to a launch module to launch the application into the first isolation environment.,149,90,,
8578076,PC,"Citrix Systems, Inc.",42558586,Other Topics,5/1/2009,2009,7/11/2030,Systems and methods for establishing a cloud bridge between virtual storage resources,Methods and systems for establishing a cloud bridge between two virtual storage resources and for transmitting data from one first virtual storage resource to the other virtual storage resource. The system can include a first virtual storage resource or cloud and a storage delivery management service that executes on a computer and within the first virtual storage resource. The storage delivery management service can receive user credentials of a user that identify a storage adapter. Upon receiving the user credentials the storage delivery management service can invoke the storage adapter which executes an interface that identifies a second virtual storage resource and includes an interface translation file. The storage delivery management service accesses the second virtual storage resource and establishes a cloud bridge with the second virtual storage resource using information obtained from the second virtual storage resource and information translated by the storage adapter using the interface translation file.,254,90,,
8296357,PC,"Citrix Systems, Inc.",41017039,Other Topics,5/19/2008,2008,7/28/2030,Systems and methods for remoting multimedia plugin calls,Described are methods and systems for remotely providing calls issued to a multimedia plugin. A proxy plugin executing on a server can intercept calls issued by a container application on the server to a multimedia plugin. The proxy plugin can then transmit the intercepted call to a plugin executing on a client. The multimedia plugin on the client can receive the call issued by container application and responsively generate graphical or multimedia content. Upon generating the multimedia or graphical content the multimedia plugin can display the generated content within a plugin window on the client. In some instances the proxy plugin responds to the call issued by the container application rather than forward the call to the multimedia plugin. In those instances the proxy plugin retrieves content from cache and responds to the container application call with the retrieved content.,143,90,,
7877368,PC,"Citrix Systems, Inc.",40589226,Private Networks/Multiple Devices|Private Networks/Local Area Network,11/2/2007,2007,3/25/2029,Hosted searching of private local area network information with support for add-on applications,Hosted searching of private LAN information is described. The apparatus includes a LAN crawler to automatically and repeatedly crawl a LAN having multiple devices using a discovery module to discover the devices a generic-probing module to attempt to collect the descriptive information according to a first set of probing requirements and multiple specific-probing plug-ins each of which attempt to collect the descriptive information according to a second set of specific probing requirements. In another embodiment the apparatus also includes a hosted on-demand search system including a centralized-search server to create and synchronize a private search database. The centralized-search server includes an application interface to receive a request to access the private search database from a third-party add-on application to provide the accessed information to the third-party add-on application and to receive from the third-party add-on application an application rendered component to be displayed on the user interface.,464,90,,
8176486,PC,"Citrix Systems, Inc.",39707577,Virtual Server/Other Topics|Virtual Machine/Other Topics,2/15/2007,2007,11/10/2030,Maintaining a pool of free virtual machines on a server computer,Various embodiments of a system and method for managing virtual machines on a server computer are described. According to one embodiment of the method a pool of free virtual machines may be maintained on the server computer e.g. where the number of virtual machines in the pool is specified by an administrator. In response to receiving a request to assign a virtual machine to a first user the server computer may assign a first virtual machine from the pool to the first user and add a new virtual machine to the pool to replace the first virtual machine. In some embodiments the server computer may be one of a plurality of server computers in a server computer system. An administrator may be able to configure different pool sizes for different server computers in the system through a central user interface.,278,90,,
7872597,PC,"Citrix Systems, Inc.",39762126,Compression History,3/12/2007,2007,3/12/2027,Systems and methods of using application and protocol specific parsing for compression,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,117,90,,
8259729,PC,"Citrix Systems, Inc.",46302424,Other Topics,10/30/2002,2002,8/14/2024,Wavefront detection and disambiguation of acknowledgements,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,208,90,,
8990380,PC,"Citrix Systems, Inc.",44584644,Directed Towards/Network Packets,8/12/2010,2010,3/9/2032,Systems and methods for quality of service of ica published applications,The present invention is directed towards systems and methods for providing discovery of applications for classification of a network packet for performing QoS and acceleration techniques. Remote display protocol traffic associated with a new application not previously included in a list of predetermined applications may be parsed for application information and the new application may be added to the application list. The remote display protocol traffic may then be classified according to the new application and network performance may be enhanced and optimized by providing QoS and acceleration engines with packet- or data-specific information corresponding to the newly identified application.,175,90,,
8499057,PC,"Citrix Systems, Inc.",38225948,Directed Towards/Dynamically Generated Objects|Real Time/Data Processing,12/30/2005,2005,2/13/2026,System and method for performing flash crowd caching of dynamically generated objects in a data communication network,"The present invention is directed towards a ""flash crowd"" technique for handling situations where the cache receives additional requests e.g. nearly simultaneous requests for the same object during the time the server is processing and returning the response object for a first requestor. Once all such nearly simultaneous requests are responded to by the cache the object is flushed from the cache with no additional expiry time or invalidation action needed. This technique of the present invention enables data to be cached and served for very small amounts of time for objects that would otherwise be considered non-cacheable. As such this technique yields a significant improvement in applications that serve fast changing data to a large volume of concurrent users such for example as real time stock quotes or a fast evolving news story.",225,90,,
7991904,PC,Bytemobile Inc,42666360,Data Packets/Data Streams,7/10/2007,2007,8/17/2028,Adaptive bitrate management for streaming media over packet networks,A method including providing pseudo-streaming media data to a terminal; receiving a transport control protocol (TCP) acknowledgement from the terminal; estimating one or more network conditions of a network based at least in part on the TCP acknowledgement; determining an optimal session bitrate based on the estimated one or more network conditions; and providing pseudo-streaming media data to the terminal based on the optimal session bitrate.,128,90,,
7831728,PC,"Citrix Systems, Inc.",46326469,Data Packets/Data Streams|Data Packets/Packet Engine,1/14/2005,2005,4/24/2026,Methods and systems for real-time seeking during real-time playback of a presentation layer protocol data stream,A method for real-time seeking during real-time playback of presentation layer protocol data streams includes the step of receiving by a foreground protocol engine a request for rendering the contents of a packet in a presentation layer protocol data stream comprising a first plurality of packets already received and a second plurality of packets yet to be received. The foreground protocol engine identifies a state-snapshot having an associated timestamp previous to that of the requested packet. The foreground protocol engine displays during transmission of the presentation layer protocol data stream from a first device to a second device the requested packet responsive to the identified state-snapshot.,275,90,,
8051127,PC,"Citrix Systems, Inc.",39763782,Compression History,3/12/2007,2007,3/12/2027,Systems and methods for identifying long matches of data in a compression history,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,128,90,,
7685630,PC,"Citrix Systems, Inc.",38565590,Other Topics,5/4/2006,2006,1/21/2029,Methods and systems for providing scalable authentication,Methods and systems of authenticating a plurality of users for access to an on-line group activity are described. The systems and methods prevent overloading of any participant's computer due to authentication. In some configurations multiple endpoints are designated as authenticators and requests for authentication are load balanced amongst the authenticators.,127,90,,
7610365,PC,Citrix Systems International Gmbh,41211171,Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing,2/14/2001,2001,10/30/2027,Automatic relevance-based preloading of relevant information in portable devices,A system for automatic proximity-based preloading of relevant information in portable devices pre-loads a portable device such as a mobile telephone a personal digital assistant (PDA) or portable computer before the occurrence of a trip or event with information relevant to the user's current or upcoming tasks. The system locates and loads into the portable device only the information required by the user for near term projects meetings or trips. The system is generally comprised of an information catalog a proximity estimator a relevance estimator an information retriever and a device loader. The information catalog contains a list of the information sources and items to which the user has access and from which the system of the invention will retrieve data to be loaded into the mobile device. The proximity estimator determines the proximity of various relevant information items to the user's tasks based on distance time and/or association. The relevance estimator combines these proximity measures into a single relevance score. The most relevant information is retrieved by the information retriever and loaded onto the portable device by the device loader.,128,90,,
8959579,PC,Citrix Systems Inc,50476540,Mobile Devices/Secure Container,10/16/2012,2012,9/27/2033,Controlling mobile device access to secure data,Various aspects of the disclosure relate to providing secure containers or data vaults for data of one or more managed applications. In some embodiments each managed application may be assigned its own private data vault and/or may be assigned a shared data vault that is accessible to at least one other managed application. As the managed application executes calls for access to the data may be intercepted and redirected to the secure containers. Data stored in a secure container may be encrypted according to a policy. Other aspects relate to deleting data from a secure container such as via a selective wipe of data associated with a managed application. Further aspects relate to configuring and creating the secure containers retrieving key information required to encrypt/decrypt the data stored in the secure containers and publishing the managed applications policy information and key information for download to a mobile device.,296,90,,
8887230,PC,Citrix Systems Inc,50476486,Mobile Devices/User Interface,10/15/2012,2012,9/27/2033,Configuring and providing profiles that manage execution of mobile applications,Various aspects of the disclosure relate to configuring and providing policies that manage execution of mobile applications. In some embodiments a user interface may be generated that allows an IT administrator or other operator to set change and/or add to policy settings. The policy settings can be formatted into a policy file and be made available for download to a mobile device such as via an application store or to be pushed to the mobile device as part of a data push service. The mobile device based on the various settings included in the policy file may perform various actions to enforce the security constraints that are represented by the policy. The various settings that can be included in a policy are numerous and some examples and variations thereof are described in connection with the example embodiments discussed herein.,353,90,,
8077622,PC,"Citrix Systems, Inc.",40337998,Other Topics,8/3/2007,2007,1/25/2029,Systems and methods for efficiently load balancing based on least connections,Systems and methods for load balancing services based on fewest connections by decreasing granularity of service selection as a number of fewest connections serviced by the services increases may include establishing by an appliance a set of identifiers corresponding to a number of connections serviced by a service the set comprising a first plurality of identifiers each identifying a predetermined number of connections and a second plurality of identifiers each identifying a predetermined range of numbers of connections. The appliance assigns to each service servicing connections an identifier corresponding to the number of connections serviced by the service at least one of the identifiers selected from the second plurality of identifiers. The appliance receives a request for a service and forwards the request to a service assigned to the identifier corresponding to a fewest number of connections with at least one service assigned to the identifier.,206,90,,
8904477,PC,Citrix Systems Inc,50476486,Mobile Devices/User Interface,10/15/2012,2012,9/27/2033,Configuring and providing profiles that manage execution of mobile applications,Various aspects of the disclosure relate to configuring and providing policies that manage execution of mobile applications. In some embodiments a user interface may be generated that allows an IT administrator or other operator to set change and/or add to policy settings. The policy settings can be formatted into a policy file and be made available for download to a mobile device such as via an application store or to be pushed to the mobile device as part of a data push service. The mobile device based on the various settings included in the policy file may perform various actions to enforce the security constraints that are represented by the policy. The various settings that can be included in a policy are numerous and some examples and variations thereof are described in connection with the example embodiments discussed herein.,282,90,,
8493858,PC,"Citrix Systems, Inc.",39113291,Virtual Server/Spillover|Transport Layer Connection/Response to the Client|Transport Layer Connection/Response from the Server|Transport Layer Connection/Predetermined Threshold|Transport Layer Connection/Connection Management,8/22/2006,2006,3/7/2029,Systems and methods for providing dynamic connection spillover among virtual servers,A method for an appliance to switch handling of transport layer connection requests from a first virtual server of the appliance managing a first plurality of services to a second virtual server of the appliance managing a second plurality of services upon exceeding by the first virtual server a maximum connection threshold determined dynamically from a status of the first plurality of services. The method includes the steps of: establishing on an appliance a first virtual server which directs transport layer connection requests from a plurality of clients to a first plurality of services; establishing via the appliance a predetermined threshold identifying a maximum active transport layer connection capacity for the first virtual server the predetermined threshold comprising a sum of a predetermined connection capacity for each of the plurality of services; monitoring by the appliance a status for each of the plurality of services; determining by the appliance the status of a service of the plurality of services indicates the service is not available; and adjusting by the appliance in response to the determination the predetermined threshold to comprise the sum of the predetermined connection capacity for each of the plurality of services having a status of available. Corresponding systems are also described.,408,90,,
8891364,PC,"Citrix Systems, Inc.",48700726,Computing Devices/Network Packets|Directed Towards/Network Packets|Intermediary Devices/Network Traffic|Intermediary Devices/Network Packets,6/15/2012,2012,1/2/2033,Systems and methods for distributing traffic across cluster nodes,The present application is directed towards systems and methods for distributing traffic across nodes of a cluster of intermediary devices through distributed flow distribution (DFD). Upon receipt of network traffic a cluster node such as an intermediary computing device or appliance may internally steer a portion of the traffic via an inter-node communications backplane to one or more other nodes in the cluster so that the load is equally handled by all of the nodes in the cluster. A cluster node may determine whether to process the traffic steered via the backplane by computing a hash of packet parameters of the network traffic. Hash keys may be selected such that uniformity is assured and the key used in hash computation may be synchronized across all of the nodes so that only one node determines that it should process the particular packets or traffic flow.,146,90,,
8082348,PC,"Citrix Systems, Inc.",45219287,Other Topics,6/17/2005,2005,10/20/2028,Selecting an instance of a resource using network routability information,A client computer requests a resource from an ISP/OSP. The ISP/OSP maintains multiple instances of the resource. In deciding to which instance of the resource to route the client computer a resource selection server takes network routability information into account. Geographic proximity resource utilization network utilization and/or maintenance of peering agreements may also be taken into account in selecting the instance of the resource.,305,90,,60 Amazon citations.
8931078,PC,Citrix Systems Inc,50476702,Private Networks/VPN User|Private Networks/Multiple Devices|Mobile Devices/Enterprise Applications|Mobile Devices/Secure Container|Mobile Devices/Services Based on One|Security Gateway/Policy Controlled VPN|Security Gateway/Access Gateway,10/15/2012,2012,9/16/2033,Providing virtualized private network tunnels,Various aspects of the disclosure relate to providing a per-application policy-controlled virtual private network (VPN) tunnel. In some embodiments tickets may be used to provide access to an enterprise resource without separate authentication of the application and in some instances can be used in such a manner as to provide a seamless experience to the user when reestablishing a per-application policy controlled VPN tunnel during the lifetime of the ticket. Additional aspects relate to an access gateway providing updated policy information and tickets to a mobile device. Other aspects relate to selectively wiping the tickets from a secure container of the mobile device. Yet further aspects relate to operating applications in multiple modes such as a managed mode and an unmanaged mode and providing authentication-related services based on one or more of the above aspects.,228,90,,
8850049,PC,"Citrix Systems, Inc.",51588295,Computing Devices/Computer-readable Media|Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing|Mobile Devices/Monitor State,3/29/2013,2013,9/13/2033,Providing mobile device management functionalities for a managed browser,Methods systems computer-readable media and apparatuses for providing mobile device management functionalities are presented. In various embodiments a mobile device management agent may monitor state information associated with a mobile computing device. The monitored state information may be analyzed on the mobile computing device and/or by one or more policy management servers. In some instances the one or more policy management servers may provide management information to the mobile computing device and the management information may include one or more commands (which may e.g. cause the mobile computing device to enforce one or more policies) and/or one or more policy updates. Subsequently one or more policies may be enforced on the mobile computing device based on the monitored state information and/or based on the management information.,236,90,,
8286082,PC,"Citrix Systems, Inc.",40433032,Remote Access/Resource Provided|Remote Access/Local Machine|Remote Machine/Resource Provided|Remote Machine/Graphical Data,9/12/2007,2007,9/14/2030,"Methods and systems for providing, by a remote machine, access to a desk band associated with a resource executing on a local machine",A method for providing by a remote machine access to a desk band associated with a resource on a local machine includes receiving by a first agent on the remote machine an identification of a desk band associated with a resource on a local machine. The first agent in communication with a shell on the remote machine maintains a taskbar window in a remote desktop environment. The taskbar window includes at least one window associated with a resource provided by the remote machine and a window region representing the desk band by using graphical data stored on the remote machine. The first agent transmits to a second agent on the local machine window attribute data and output data associated with the taskbar window in the remote desktop environment. The second agent displays at least a portion of the received output data in a local window on a local desktop environment.,297,90,,
8640216,PC,"Citrix Systems, Inc.",44153116,Directed Towards/Other Topics,12/23/2009,2009,7/19/2031,Systems and methods for cross site forgery protection,The present solution described herein is directed towards systems and methods to prevent cross-site request forgeries based on web form verification using unique identifiers. The present solution tags each form from a server that is served out in the response with a unique and unpredictable identifier. When the form is posted the present solution enforces that the identifier being returned is the same as the one that was served out to the user. This prevents malicious unauthorized third party users from submitting a form on a user's behalf since they cannot guess the value of this unique identifier that was inserted.,246,90,,
8850010,PC,"Citrix Systems, Inc.",51588300,Computing Devices/Computer-readable Media|Computing Devices/Unmanaged Mode,3/29/2013,2013,9/30/2033,Providing a managed browser,Methods systems computer-readable media and apparatuses for providing a managed browser are presented. In various embodiments a computing device may load a managed browser. The managed browser may for instance be configured to provide a managed mode in which one or more policies are applied to the managed browser and an unmanaged mode in which such policies might not be applied and/or in which the browser might not be managed by at least one device manager agent running on the computing device. Based on device state information and/or one or more policies the managed browser may switch between the managed mode and the unmanaged mode and the managed browser may provide various functionalities which may include selectively providing access to enterprise resources based on such state information and/or the one or more policies.,196,90,,
7876712,PC,"Citrix Systems, Inc.",38003665,Other Topics,11/10/2005,2005,11/10/2025,Overlay network infrastructure,A method and apparatus for processing an overlay network infrastructure. In one embodiment the method comprises a plurality of transparent access points (TAPs). Each TAP is communicably coupled between one or more clients and servers and a wide area network (WAN) to enable the one or more clients to communicate with the one or more servers and is coupled to other of the TAPs via permanently established secure links. The overlay network also comprises a controller coupled to each of the TAPs via a secure connection to configure the TAPs with information to enable each TAP to know what services are available and from which of the TAPs each of the services can be accessed.,202,90,,
8171124,PC,"Citrix Systems, Inc.",41786391,Other Topics,11/25/2008,2008,2/1/2030,Systems and methods for gslb remote service monitoring,The present invention provides improvements to the integration between a metric exchange protocol and a monitoring mechanism supporting load balancing by a Global Server Load Balancing (GSLB) appliance in a GSLB hierarchy of appliances using a method for triggering a monitor on a remote service. The method includes receiving by a first appliance metrics of a second appliance via a metric exchange connection between the first and second appliances. The first appliance includes a GSLB service and identifies a service provided via the second appliance as a remote service for GSLB. The first appliance may identify via the metrics that a state of the service is up and determine that the metric exchange connection is down. Responsive to the determination the first appliance may trigger a monitor to monitor the status of the service. Further the first appliance may obtain via the monitor a second status of the service.,147,90,,
7987285,PC,Bytemobile Inc,39769194,Data Packets/Data Streams,7/10/2007,2007,10/24/2028,Adaptive bitrate management for streaming media over packet networks,A method including receiving a receiver report from a terminal; estimating one or more network conditions of a media network based at least in part on the receiver report; determining an optimal session bitrate based on the estimated one or more network conditions; and providing media data to the terminal based on the optimal session bitrate.,119,90,,
8289960,PC,"Citrix Systems, Inc.",42712643,Data Packets/Packet Engine|Data Packets/Communications Network,6/22/2009,2009,3/29/2030,Systems and methods for n-core tracing,Described herein are systems and methods for aggregating performance data or trace data for a multi-core multi-packet-engine networked appliance. A plurality of packet engines operate on the appliance and manage network traffic between a plurality of clients and a plurality of servers. In various embodiments the system comprises a plurality of packet engines and an aggregator communicating with the packet engines through shared memory allocations. Each packet engine can write performance data or trace data to the a shared memory allocation. The aggregator can obtain the performance data or trace data and consolidate the data to provide unified performance data or unified trace data representative of the appliance.,226,90,,
8806570,PC,"Citrix Systems, Inc.",50031074,Mobile Devices/Enterprise Applications|Software Application/Enterprise Applications,10/11/2011,2011,5/3/2033,Policy-based application management,Improved techniques for managing enterprise applications on mobile devices are described herein. Each enterprise mobile application running on the mobile device has an associated policy through which it interacts with its environment. The policy selectively blocks or allows activities involving the enterprise application in accordance with rules established by the enterprise. Together the enterprise applications running on the mobile device form a set of managed applications. Managed applications are typically allowed to exchange data with other managed applications but are blocked from exchanging data with other applications such as the user's own personal applications. Policies may be defined to manage data sharing mobile resource management application specific information networking and data access solutions device cloud and transfer dual mode application software enterprise app store access and virtualized application and resources among other things.,199,90,,
7870411,PC,"Citrix Systems, Inc.",38957324,Virtual Machine/Hypervisor|Virtual Machine/Guest,7/17/2006,2006,1/23/2029,Tracking current time on multiprocessor hosts and virtual machines,An operating system in a virtual environment can obtain the current time of the processor that the OS is utilizing through a method for synchronizing timers on multiple processors with a standard reference time such as the Coordinated Universal Time (UTC). A hypervisor controlling the processors obtains a number of synchronization values that together with a local timer counter value are utilized by the guest operating system to determine the physical processor time.,108,90,,
8769428,PC,"Citrix Systems, Inc.",44083232,Remote Machine/Local Computing Machine|Remote Machine/Remote Application|Local Computing/Remote Computing Machine|Local Computing/Window Displaying,12/9/2009,2009,4/28/2033,Methods and systems for generating a combined display of taskbar button group entries generated on a local machine and on a remote machine,The present disclosure features methods and systems for updating a taskbar generated and displayed by a local computer with a user interface element representative of a remote application executing on a remote computer and application output generated by the remote application. These methods and system include a local client receiving application output generated by a remote application and remote window configuration information generating an application output window comprising local taskbar grouping configuration information and updating a taskbar responsive to the local taskbar grouping configuration information.,194,90,,
8291416,PC,"Citrix Systems, Inc.",42735673,Virtual Machine/Other Topics,4/17/2009,2009,5/20/2031,Methods and systems for using a plurality of historical metrics to select a physical host for virtual machine execution,A host recommendation service identifies a virtual machine. An analysis engine retrieves a plurality of metrics for each of a plurality of physical hosts available for executing the virtual machine. The plurality of metrics includes a current level of load on each of the plurality of physical hosts and a level of load on each of the plurality of physical hosts during a prior time period. The analysis engine also identifies a level of load placed on a physical host by the virtual machine during a prior time period. The analysis engine determines a level of priority associated with the metrics and assigns a score to each of the plurality of physical hosts. The host recommendation service transmits an identification of one of the plurality of physical hosts on which to execute the virtual machine.,326,90,,
8326943,PC,"Citrix Systems, Inc.",42289250,Isolation Environment/Computing Machine,5/2/2009,2009,5/2/2029,Methods and systems for launching applications into existing isolation environments,Methods and systems that can launch applications into existing isolation environments do so by executing a run module on a computing machine to intercept requests to execute an application. A client communicating with the computing machine generates requests to execute an application on the computing machine. A run module identifies a profile associated with the requested application and queries an application delivery service to identify at least one isolation environment that corresponds to the profile. The run module receives from the application delivery service a response that identifies a first isolation environment associated with the application and issues a command to a launch module to launch the application into the first isolation environment.,147,90,,
8750490,PC,"Citrix Systems, Inc.",40383407,Computing Devices/Client Devices,8/22/2007,2007,5/4/2031,Systems and methods for establishing a communication session among end-points,Systems and methods for establishing a communications session among end-points are shown and described. The method can include receiving from a client computing device at a gateway computing device a request to establish a communication session with an end-point the client computing device executing a program that locates address information for the end-point within application output displayed at the client computing device and forwarding at least a portion of the received request to a private branch exchange in communication the gateway computing device the at least a portion of the received request including the address information of the end-point and address information associated with an end-user of the client computing device.,414,90,,
8560552,PC,"Citrix Systems, Inc.",43902947,Other Topics,1/8/2010,2010,8/2/2030,Method for lossless data reduction of redundant patterns,The present application describes methods and systems for compressing and/or decompressing data. As blocks of data are processed the processed blocks are placed into a circular buffer at a compressor and indexed based on patterns of data present in the processed blocks. A circular buffer is maintained at the decompressor so that the decompressor circular buffer is consistent with the compressor circular buffer. When a new block of data is processed the compressor checks the index to the circular buffer to determine whether the new block of data contains a pattern that is redundant with a pattern in one or more blocks of data that have already been processed. If a redundancy is detected the compressor informs the decompressor of the redundancy and provides information allowing the decompressor to reconstruct the redundant pattern from the decompressor's circular buffer. In this way redundant data need not be retransmitted or stored.,294,90,,
8719898,PC,"Citrix Systems, Inc.",50476486,Mobile Devices/User Interface,10/15/2012,2012,9/27/2033,Configuring and providing profiles that manage execution of mobile applications,Various aspects of the disclosure relate to configuring and providing policies that manage execution of mobile applications. In some embodiments a user interface may be generated that allows an IT administrator or other operator to set change and/or add to policy settings. The policy settings can be formatted into a policy file and be made available for download to a mobile device such as via an application store or to be pushed to the mobile device as part of a data push service. The mobile device based on the various settings included in the policy file may perform various actions to enforce the security constraints that are represented by the policy. The various settings that can be included in a policy are numerous and some examples and variations thereof are described in connection with the example embodiments discussed herein.,235,90,,
8832787,PC,"Citrix Systems, Inc.",40385496,Other Topics,4/29/2002,2002,2/26/2026,Implementing single sign-on across a heterogeneous collection of client/server and web-based applications,Leveraging an established authenticated session in obtaining authentication to a client application includes receiving a request for access to a client application requiring authentication of a requestor and determining whether there exist characteristics of leverageable authentications corresponding to established sessions having an authenticated state at a time of the determination. When the determination reveals characteristics of at least one leverageable authentication corresponding to an established session and attempt is made to obtain access for the requestor to the client application based on the at least one leverageable authentication and the requestor is provided with a notification related to the 1 attempt to obtain access for the requestor to the client application.,179,90,,
8352728,PC,"Citrix Systems, Inc.",39102727,Other Topics,8/21/2006,2006,1/3/2029,Systems and methods for bulk encryption and decryption of transmitted data,A method for using a network appliance to efficiently buffer and encrypt data for transmission includes: receiving by an appliance via a connection two or more SSL records comprising encrypted messages; decrypting the two or more messages; buffering by the appliance the two ore more decrypted messages; determining by the appliance that a transmittal condition has been satisfied; encrypting by the appliance in response to the determination the first decrypted message and a portion of the second decrypted message to produce a third SSL record; and transmitting by the appliance via a second connection the third record. Corresponding systems are also described.,354,90,,
8726343,PC,"Citrix Systems, Inc.",49725950,Other Topics,10/12/2012,2012,8/9/2033,Managing dynamic policies and settings in an orchestration framework for connected devices,Aspects described herein allow multiple devices to function as a coherent whole allowing each device to take on distinct functions that are complementary to one another. Aspects described herein also allow the devices function as a coherent whole when interconnected devices and their respective applications are configured to operate in various operation modes when management policies are employed to control the operation of the interconnected devices and their respective applications when transferring content between the interconnected devices and storing the content at those devices when obtaining access credentials for the interconnected devices that enable the devices to access enterprise resources when a policy agent applies management policies to control operation of and interaction between the interconnected devices and when the interconnected devices are used to access an enterprise application store.,194,90,,
8095787,PC,"Citrix Systems, Inc.",39102737,Computing Devices/Client Devices,8/21/2006,2006,2/11/2030,Systems and methods for optimizing ssl handshake processing,A method for buffering SSL handshake messages prior to computing a message digest for the SSL handshake includes: conducting by an appliance with a client an SSL handshake the SSL handshake comprising a plurality of SSL handshake messages; storing by the appliance the plurality of SSL handshake messages; providing by the appliance to a message digest computing device in response to receiving a client finish message corresponding to the SSL handshake the plurality of SSL handshake messages; receiving by the appliance from the message digest computing device a message digest corresponding to the provided messages; determining by the appliance the message digest matches a message digest included in the SSL client finish message; and completing by the appliance with the client the SSL handshake. Corresponding systems are also described.,176,90,,
8677252,PC,"Citrix Systems, Inc.",38514967,Other Topics,4/14/2006,2006,4/14/2026,Systems and methods for displaying to a presenter visual feedback corresponding to visual changes received by viewers,Methods for providing to the presenter visual feedback regarding the screen data received by one or more viewers in an online presentation environment having a presenter transmitting screen data to one or more viewers over a network may include: transmitting data representing changed visual data; receiving confirmation of receipt of the changed visual data from one or more viewers; generating a representation of the visual data received by one or more viewers responsive to the received confirmation data; and displaying the generated representation at the presenter. Corresponding systems may include: a transmitter which transmits data representing changed visual data; a receiver which receives confirmation of receipt of the changed visual data from one or more viewers; and a display generator which generates a representation of the visual data received by one or more viewers responsive to the received confirmation data and which displays the generated representation at the presenter.,274,90,,
8881228,PC,"Citrix Systems, Inc.",51588300,Computing Devices/Computer-readable Media|Computing Devices/Unmanaged Mode,3/29/2013,2013,9/30/2033,Providing a managed browser,Methods systems computer-readable media and apparatuses for providing a managed browser are presented. In various embodiments a computing device may load a managed browser. The managed browser may for instance be configured to provide a managed mode in which one or more policies are applied to the managed browser and an unmanaged mode in which such policies might not be applied and/or in which the browser might not be managed by at least one device manager agent running on the computing device. Based on device state information and/or one or more policies the managed browser may switch between the managed mode and the unmanaged mode and the managed browser may provide various functionalities which may include selectively providing access to enterprise resources based on such state information and/or the one or more policies.,226,90,,
8627063,PC,"Citrix Systems, Inc.",44152806,Directed Towards/SSL,12/23/2009,2009,1/15/2032,Systems and methods for flash crowd control and batching ocsp requests via online certificate status protocol,The present invention is directed towards systems and methods for batching OCSP requests and caching corresponding responses. An intermediary between a plurality of clients and one or more servers receives a first client certificate during a first SSL handshake with a first client and a second client certificate during a second SSL handshake with a second client. The intermediary may identify that the statuses of the client certificates are not in a cache of the intermediary. An OCSP responder of the intermediary may transmit a single request to an OCSP server to determine the statuses. The intermediary may determine from a single response received from the OCSP server whether to establish SSL connections with the clients based on the statuses. The intermediary may store the statuses to the cache for determining whether to establish a SSL connection in response to receiving a client certificate from the first client.,407,90,,
8856319,PC,"Citrix Systems, Inc.",50032873,Virtual Server/Cloud Infrastructure|Virtual Machine/Computing Environment|Virtual Machine/Cloud,2/3/2010,2010,12/22/2031,Event and state management in a scalable cloud computing environment,A scalable cloud infrastructure serves two or more customers where each customer is associated with at least one unit of virtual resources. The virtual resources are established by apportioning physical resources in the cloud infrastructure that are partitioned into pods within one or more zones in a scalable manner. Additionally the cloud infrastructure establishes one or more management server clusters each comprising one or more management servers. The two or more customers create a number of virtual machines within pods in one or more zones. As customers interact primarily with the management server cluster to manage their virtual machine a state and event handling method is devised to centralize the management of a potentially vast number of customer and supporting system virtual machines.,275,90,,
8341208,PC,"Citrix Systems, Inc.",40433032,Remote Access/Resource Provided|Remote Access/Local Machine|Remote Machine/Resource Provided,9/12/2007,2007,9/12/2028,"Methods and systems for providing, by a remote machine, access to functionality associated with a resource executing on a local machine",A method for providing by a remote machine access to functionality associated with a resource executing on a local machine includes receiving by a remote agent executing on a remote machine an identification of a shell extension associated with a resource provided by a local machine. The remote agent installs a proxy handler associated with the identified shell extension. The proxy handler receives a request for access to the shell extension and redirects the request to a shell extension invoker executing on the local machine.,149,90,,
8799994,PC,"Citrix Systems, Inc.",50000687,Mobile Devices/Enterprise Applications|Software Application/Enterprise Applications,10/11/2011,2011,5/3/2033,Policy-based application management,Improved techniques for managing enterprise applications on mobile devices are described herein. Each enterprise mobile application running on the mobile device has an associated policy through which it interacts with its environment. The policy selectively blocks or allows activities involving the enterprise application in accordance with rules established by the enterprise. Together the enterprise applications running on the mobile device form a set of managed applications. Managed applications are typically allowed to exchange data with other managed applications but are blocked from exchanging data with other applications such as the user's own personal applications. Policies may be defined to manage data sharing mobile resource management application specific information networking and data access solutions device cloud and transfer dual mode application software enterprise app store access and virtualized application and resources among other things.,296,90,,
8589579,PC,"Citrix Systems, Inc.",41268293,Directed Towards/Other Topics,10/8/2008,2008,5/5/2031,Systems and methods for real-time endpoint application flow control with network structure component,The present solution is directed towards systems and methods to more efficiently control a flow of a data stream traversing at least one intermediary on a network between a client and a server. A sender transmits a first message comprising a first value of a bandwidth between the first intermediary and a second intermediary determined by the sender to a first intermediary. The first intermediary establishes a next value of the bandwidth between the first intermediary and the second intermediary. The sender receives from the first intermediary responsive to the first message a second message comprising the established next value of the bandwidth between the first intermediary and the second intermediary. A data transfer manager of the sender responsive to the second message determines a size of a portion of data queued for transmission to transmit to the first intermediary and a time for transmitting the portion of data queued.,285,90,,
8903950,PC,"Citrix Systems, Inc.",38370068,User Profile,5/5/2000,2000,1/23/2024,Personalized content delivery using peer-to-peer precaching,A method and apparatus for peer-to-peer video precaching is described. In one embodiment the method comprises building a user profile periodically checking for new content of objects in the user profile maintaining a data base of available objects and location of said objects and determining the download location of an object requested by a user.,128,90,,
8621204,PC,"Citrix Systems, Inc.",44152805,Directed Towards/SSL|Directed Towards/Uniform Resource|Intermediary Devices/Intermediary Receives a Request from a Client,12/23/2009,2009,2/23/2032,Systems and methods for evaluating and prioritizing responses from multiple ocsp responders,The present invention is directed towards systems and methods for determining a status of a client certificate from a plurality of responses for an Online Certificate Status Protocol (OCSP) request. An intermediary device between a plurality of clients and one or more servers identifies a plurality of OCSP responders for determining a status of a client certificate responsive to receiving the client certificate from a client during a Secure Socket Layer (SSL) handshake. Each of the plurality of OCSP responders may transmit a request for the status of the client certificate to a uniform resource locator corresponding to each OCSP responder. The intermediary device may determine a single status for the client certificate from a plurality of statuses of the client certificate received via responses from each uniform resource locator.,162,90,,
8775544,PC,"Citrix Systems, Inc.",41820735,Computing Devices/Other Topics|Virtual Machine/Storage Area,2/4/2009,2009,12/13/2031,Methods and systems for dynamically switching between communications protocols,A method for dynamically switching between communications protocols used in communicating with each of a plurality of physical computing devices includes configuring by a storage delivery management service a storage system in a storage area network to communicate according to a first communications protocol with a first physical computing device executing a virtual machine the storage system providing to the virtual machine access to a virtual storage resource. The storage delivery management service receives a request to migrate the virtual machine from the first physical computing device to a second physical computing device. The storage delivery management service configures the storage system to communicate with the second physical computing device according to a second communications protocol. The storage delivery management service transmits to the second physical computing device an identification of the storage system providing access to the virtual storage resource for the virtual machine.,248,90,,
7692466,PC,"Citrix Systems, Inc.",39100827,Other Topics,8/18/2006,2006,11/7/2026,Sense amplifier based flip-flop,A circuit includes an input stage an output stage and a delay stage. The input stage is operative to receive a clock signal and a first and second input signal. The output stage is operative to receive the clock signal. The output stage is also operative to generate a first and second output signal based on the clock signal and the first and second input signals. The delay stage is operatively coupled to the input and output stages. The delay stage includes a first and second branch. The second branch includes at least one more delay element than the first branch.,89,90,,
7769869,PC,"Citrix Systems, Inc.",39101327,Virtual Server/Virtual Private Network|Virtual Server/Internet Protocol Address|Private Networks/Client Agent|Transport Layer Connection/Client Agent|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/Destination Port|Transport Layer Connection/Transport Layer Protocol,8/21/2006,2006,1/23/2029,Systems and methods of providing server initiated connections on a virtual private network,The present invention is related to a method for establishing via an appliance a transport layer protocol connection initiated by a server on a first network to a client connected from a second network to the first network via a secure socket layer virtual private network (SSL VPN) connection. The method includes the step of receiving by an appliance a transport layer connection request from a server on a first network to connect to a client connected to the first network via a SSL VPN connection from a second network. The transport layer connection request identifies a client destination internet protocol address and a client destination port on the first network. The method includes establishing by the appliance a first transport layer connection to the server on the first network determining by the appliance the client on the second network associated with the client destination internet protocol address on the first network and transmitting by the appliance connection information identifying the client destination port to an agent on the client. The agent establishes a second transport layer connection to the client destination port using a local internet protocol address of the client on the second network and establishes a third transport layer connection to the appliance which it associates with the second transport layer connection.,273,90,,
8495181,PC,"Citrix Systems, Inc.",39030772,Private Networks/Client Agent,8/3/2006,2006,11/11/2029,Systems and methods for application based interception ssi/vpn traffic,A method for intercepting by an agent of a client communications from the client to be transmitted via a virtual private network connection includes the step of intercepting communications based on identification of an application from which the communication originates. The agent receives information identifying a first application. The agent determines a network communication transmitted by the client originates from the first application and intercepts that communication. The agent transmits the intercepted communication via the virtual private network connection.,261,90,,
8738703,PC,"Citrix Systems, Inc.",39304329,Other Topics,10/17/2006,2006,9/21/2030,Systems and methods for providing online collaborative support,A first support node and a third node provide online collaborative support to a customer node over a computer network. An online support session facilitating at least in part bi-directional communication between the customer node and the first support node is established. The third node is also connected to the online support session and receives support session information from the customer node. In addition information is communicated bi-directionally between the first support node and the third node.,237,90,,
8078972,PC,"Citrix Systems, Inc.",39189988,Computing Devices/Performance Data|Remote Access/Performance Data|Remote Access/User Interface|Graphical User Interface/User Interface Element|Graphical User Interface/Performance Data,9/15/2006,2006,4/19/2027,Methods and interfaces for displaying performance data related to a current remote access session,A graphical user interface displays performance data related to a communication session between a first computing device and a second computing device. The graphical user interface comprises a first graphical element and a second graphical element. The first graphical element has a number of sections that represent respective physical portions of a connection between the first computing device and the second computing device. Each of the sections displays the performance data of a current session for that respective physical section. The second graphical element displays corresponding performance data for a predetermined number of previous sessions between the first computing device and the second computing device.,272,89,,
8271661,PC,"Citrix Systems, Inc.",39101327,Virtual Server/Virtual Private Network|Virtual Server/Internet Protocol Address|Private Networks/Client Agent|Transport Layer Connection/Client Agent|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/Destination Port|Transport Layer Connection/Transport Layer Protocol,8/21/2006,2006,8/22/2026,Systems and methods of providing server initiated connections on a virtual private network,The present invention is related to a method for establishing via an appliance a transport layer protocol connection initiated by a server on a first network to a client connected from a second network to the first network via a secure socket layer virtual private network (SSL VPN) connection. The method includes the step of receiving by an appliance a transport layer connection request from a server on a first network to connect to a client connected to the first network via a SSL VPN connection from a second network. The transport layer connection request identifies a client destination internet protocol address and a client destination port on the first network. The method includes establishing by the appliance a first transport layer connection to the server on the first network determining by the appliance the client on the second network associated with the client destination internet protocol address on the first network and transmitting by the appliance connection information identifying the client destination port to an agent on the client. The agent establishes a second transport layer connection to the client destination port using a local internet protocol address of the client on the second network and establishes a third transport layer connection to the appliance which it associates with the second transport layer connection.,183,89,,
8462630,PC,"Citrix Systems, Inc.",46302427,Other Topics,7/29/2003,2003,12/28/2024,Early generation of acknowledgements for flow control,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,208,89,,
7433898,PC,"Citrix Systems, Inc.",39797367,Other Topics,6/1/2004,2004,5/2/2026,Methods and apparatus for shared storage journaling,Multiple computers have access to a shared storage system. The computers negotiate with each other for access rights (e.g. READ or WRITE) to regions of the storage system. After negotiating for permission to modify a location (e.g. a range of addresses) of the shared storage system a given computer copies data from the shared storage system into its own corresponding cache. The given computer granted the permission then modifies the data in its cache while maintaining a separate journal of corresponding changes to metadata. The given computer writes the journal to a dedicated region of the storage system. Thereafter the given computer attempts to flush contents of the modified cache to the storage system. If the given computer crashes while attempting to flush the modified cache to the shared storage system a healthy one of the multiple computers utilizes the journal information in the storage system to recover metadata.,166,88,,
8849988,PC,"Citrix Systems, Inc.",42223791,Directed Towards/Other Topics,11/25/2008,2008,4/12/2030,Systems and methods to monitor an access gateway,The present invention is directed towards systems and methods for monitoring an access gateway. The systems and methods include monitors on appliances that generate and send requests to logon agents or login page services on access gateways. Based on the responses from the logon agents or login page services the monitors determine whether the logon agents or login page services are available.,308,88,,
7898968,PC,"Citrix Systems, Inc.",39188494,Computing Devices/Other Topics|IP Address/Other Topics,9/15/2006,2006,12/19/2028,Systems and methods for selecting efficient connection paths between computing devices,A method for determining a communication path between a first computing device and a second computing comprises: receiving at a second computing device a plurality of IP addresses for a first computing device; establishing a primary connection between the first and second computing devices using a first one of the plurality of IP addresses; transmitting from the second computing device a plurality of probe messages to each of the plurality of IP addresses; receiving at the second computing device from the plurality of IP addresses a plurality of responses to the plurality of probe messages; selecting one of the plurality of IP addresses for future communications between the first to the second computing device and transferring the primary connection between the first and second computing devices to the selected IP address. Corresponding systems are also described.,199,88,,
7584222,PC,"Citrix Systems, Inc.",39797367,Other Topics,6/1/2004,2004,11/1/2026,Methods and apparatus facilitating access to shared storage among multiple computers,Each of multiple computers in a cluster of computers negotiates access to locations in a common storage system. Each of the computers (coupled together via a network) in the cluster includes a transaction manager application to coordinate access to shared storage locations (such as a volume or portions thereof) in the storage system. The transaction managers at each of the multiple computers utilize a unified address space that maps locations in the storage system to corresponding access properties maintained by respective transaction managers in the computers. The access properties derived from use of the unified address space indicate an access status of the regions or locations in the shared storage system. If necessary the computers in a cluster communicate with each other to negotiate access to the shared storage. Also the computers in a cluster communicate so that current access properties maintained in each computer are consistent.,346,87,,
8413142,PC,"Citrix Systems, Inc.",44202514,Virtual Machine/Virtual Disk,3/30/2010,2010,6/18/2031,Storage optimization selection within a virtualization environment,Storage optimization selection for virtual disks of a virtualization environment where the storage optimization can be selected based in part on the disk type of a virtual disk included in a virtual machine. The disk type of the virtual disk can be discovered by the virtualization environment which queries a database within the virtualization environment for metadata associated with the virtual disk. The metadata can be created when a virtual desktop infrastructure creates the virtual disk and a virtual machine template that includes the at least one virtual disk. The virtual disk can be modified to either include or be associated with the metadata that describes a disk type of the virtual disk. Upon executing the virtual machine that includes the modified virtual disk a storage subsystem of the virtualization environment can obtain the metadata of the virtual disk to discover the disk type of the virtual disk.,146,87,,
7490089,PC,"Citrix Systems, Inc.",39797367,Other Topics,6/1/2004,2004,1/7/2027,Methods and apparatus facilitating access to shared storage among multiple computers,A given computer in a cluster communicates with multiple computers in the cluster i) via use of a network supporting communications from the multiple computers amongst each other and ii) through accesses to the shared storage system to which each of the computers in the cluster have access. Each computer in the cluster i) supports communications over a network connection to the other computers and ii) includes a link (e.g. a fiber channel) directly to the shared storage system. Thus if one communication path fails such as the network path the other communication path such as the independent link to the shared storage supporting the ability to read/write to storage provides a backup means of communicating. Attributes associated with a cluster can therefore be properly maintained via the members even during a failure.,191,87,,
8452812,PC,"Citrix Systems, Inc.",39325274,Virtual Machine/Redirection|Remote Access/Resource Provided|Remote Access/Local Machine|Remote Access/Remote File|Remote Access/User Application Requests|Remote Machine/Resource Provided|Remote Machine/Remote Application|Remote Machine/Remote File|Isolation Environment/Request for the Resource|Isolation Environment/Local Machine|Isolation Environment/Remote User|User Profile,10/20/2006,2006,8/17/2029,Methods and systems for accessing remote user files associated with local resources,A system for accessing by a resource a setting in a virtualized user profile includes an isolation environment a resource and a filter driver. The resource executes outside an isolation environment on a local machine and requests access to a setting in a user profile. The filter driver intercepts the request for access and identifies one of the isolation environment and a remote machine responsive to an application of a rule to the request. The filter driver redirects the request to the one of the isolation environment and the remote machine. A method includes intercepting an instruction from a resource to modify a setting on a local machine the resource provided by a local machine and executing outside of an isolation environment. The method includes identifying the isolation environment responsive to an application of a rule to the instruction. The method includes redirecting the instruction to the isolation environment.,214,87,,
8780718,PC,"Citrix Systems, Inc.",42173179,Virtual Server/Backup Virtual Server|Intermediary Devices/Present Disclosure,11/25/2008,2008,5/27/2031,Systems and methods for maintaining persistence by a backup virtual server,The present disclosure presents systems and methods for maintaining persistence of a backup virtual server on connections currently serviced by the backup virtual server. A virtual server operating on an intermediary network device and identified as a primary virtual server for a first connection may receive a request via the first connection. The intermediary device may forward the first request to a backup virtual server of the virtual server in response to identifying that the virtual server is unavailable. The intermediary device may later identify that the virtual server is available. The virtual server may establish a new connection responsive to receiving a connection request while the intermediary device may forward a second request received via the first connection to the backup virtual server instead of the virtual server responsive to identifying that the virtual server is configured not to preempt the backup virtual server from maintaining connections currently maintained by the backup virtual server.,320,87,,
8543805,PC,"Citrix Systems, Inc.",44816784,Directed Towards/Client Side|Directed Towards/SSL|Session Key/SSL Session|Session Key/Communication Session,4/21/2010,2010,1/1/2031,Systems and methods for split proxying of ssl via wan appliances,The present invention is directed towards systems and methods for split proxying Secure Socket Layer (SSL) communications via intermediaries deployed between a client and a server. The method includes establishing by a server-side intermediary a SSL session with a server. A client-side intermediary may establish a second SSL session with a client using SSL configuration information received from the server-side intermediary. Both intermediaries may communicate via a third SSL session. The server-side intermediary may decrypt data received from the server using the first SSL session's session key. The server-side intermediary may transmit to the client-side intermediary via the third SSL session data encrypted using the third SSL session's session key. The client-side intermediary may decrypt the encrypted data using the third SSL session's session key. The client-side intermediary may transmit to the client the data encrypted using the second SSL session's session key.,261,87,,
8065559,PC,"Citrix Systems, Inc.",40849176,Virtual Server/Backup Virtual Server,5/29/2008,2008,4/4/2029,Systems and methods for load balancing via a plurality of virtual servers upon failover using metrics from a backup virtual server,The present invention provides methods and systems for performing load balancing via a plurality of virtual servers upon a failover using metrics from a backup virtual server. The methods and systems described herein provide systems and methods for an appliance detecting that a first virtual server of a plurality of virtual servers having one or more backup virtual servers load balanced by an appliance is not available identifying at least a first backup virtual server of a one or more backup virtual servers of the first virtual server is available maintaining a status of the first virtual server as available in response to the identification obtaining one or more metrics from the first backup virtual server of a one or more backup virtual servers and determining the load across the plurality of virtual servers using the metrics obtained from the first backup virtual server associated with the first virtual server.,172,87,,
7907621,PC,"Citrix Systems, Inc.",39029116,Virtual Machine/Client Agent|Private Networks/Client Agent|Transport Layer Connection/Client Agent|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/Connection Management|Remote Machine/Client Agent|Remote Machine/Network Environment,8/3/2006,2006,3/1/2028,Systems and methods for using a client agent to manage icmp traffic in a virtual private network environment,Systems and methods are described for using a client agent executing on a client to send ICMP messages to an appliance connected via a virtual private network Methods include: establishing via a client agent executing on a client a transport layer virtual private network connection with an appliance; intercepting by the client agent at the network layer an ICMP request originating from the client; and transmitting by the client agent via a transport layer connection the ICMP request to the appliance. Addition methods describe determining by the appliance the address identified by the ICMP request corresponds to a second client the second client also connected via a virtual private network to the remote machine; and transmitting by the appliance to the second client via the virtual private network connection the ICMP request. Corresponding systems are also described.,183,87,,
8868724,PC,"Citrix Systems, Inc.",42752056,Virtual Server/Client Devices|Intermediary Devices/Network Traffic|Intermediary Devices/Present Disclosure,5/1/2009,2009,12/29/2032,Systems and methods for providing a virtual appliance in an application delivery fabric,The present disclosure is directed to systems and method for providing a virtual appliance. One or more application delivery controller appliances intermediary to a plurality of clients and a plurality of servers perform a plurality of application delivery control functions on network traffic communicated between the plurality of clients and the plurality of servers. A virtual application delivery controller is deployed on a device intermediary to the plurality of clients and the plurality of servers. The virtual application delivery controller executing on the device performs one or more of the plurality of application delivery control functions on network traffic communicated between the plurality of clients and the plurality of servers.,113,86,,
8135850,PC,"Citrix Systems, Inc.",41718389,Real Time/Media Stream|Real Time/Session Identifier,11/25/2008,2008,9/21/2029,Systems and methods for load balancing real time streaming,The present application relates to systems and methods for managing of Real Time Stream Protocol (RTSP) sessions by an intermediary located between a client and a server. An intermediary located between a client and a server receives a response from the server to a request of the client to setup a media stream. The response may include a first session identifier established by the server. The intermediary may encode a port of the server and an internet protocol address of the server into the first session identifier to form a second session identifier. The intermediary may modify the response to identify the second session identifier as the session identifier provided by the server. The intermediary may transmit the modified response to the client responsive to the request of the client to setup the media stream.,148,86,,
8296441,PC,"Citrix Systems, Inc.",41697322,Other Topics,1/14/2005,2005,9/30/2025,Methods and systems for joining a real-time session of presentation layer protocol data,Methods and systems directed to joining a real-time user session of presentation layer protocol data. The methods describe a user session receiving a presentation layer protocol data stream wherein the user session comprises a single presentation layer protocol stack. The protocol stack sending a request to a virtual channel to reinitialize. The virtual channel processing an existing request until the request to reinitialize is encountered. The protocol stack modifying the presentation layer protocol data stream to contain a marker. The systems describe a single presentation layer protocol stack. The protocol stack includes a receiver a virtual channel and a rollover agent. The receiver receives a presentation layer protocol data stream and receives a message initiating reinitialization. The virtual channel processes a request. The rollover agent sends to the virtual channel a request to reinitialize and modifies the presentation layer protocol data stream to contain a marker.,198,86,,
8244883,PC,"Citrix Systems, Inc.",38670691,Transport Layer Connection/Response to the Client|Transport Layer Connection/Response from the Server,8/3/2006,2006,10/31/2028,Systems and methods of for providing multi-mode transport layer compression,Systems and methods are disclosed for communicating compressed and uncompressed content over a transport layer connection established by an appliance between a client and a server. One method comprises the steps of: establishing by an appliance a transport layer connection between a client and a server and receiving by the appliance a first response from the server to a first client request and a second response from the server to a second client request The first response and the second response has uncompressed data. The method includes transmitting by the appliance the first response to the client. The appliance identifies first type of compression from a plurality of compression types for compressing the second response to the client compresses the second response based on the identified compression type and transmits the compressed second response to the client.,261,86,,
8407699,PC,"Citrix Systems, Inc.",41343040,Computing Devices/Computing Environment|Computing Devices/Virtualization Environment|Isolation Environment/Request for the Resource,3/10/2008,2008,1/17/2032,System and method for managing code isolation,A computing system is configured to use a trampoline to isolate sensitive code in a virtual environment and in other applications. An import table may describe the entry points of a privileged code module or driver that generates privileged code. A system and method loads a shadow kernel to facilitate isolating the linkage between drivers and the rest of the system. The shadow kernel may be a copy of the operating system kernel that does not have the same integral position in the operation of the computing device. The shadow kernel may be used as a template for creating a jump table to redirect more critical privileged resource access requests from specially loaded kernel mode drivers to the PVM. All requests may pass through the PVM which redirects non-critical functions to the original kernel. Multiple copies of a given driver or code module may be loaded in a given session.,127,86,,
7552122,PC,"Citrix Systems, Inc.",39797367,Other Topics,6/1/2004,2004,3/15/2026,Methods and apparatus facilitating access to storage among multiple computers,Multiple computers in a cluster maintain respective sets of identifiers of neighbor computers in the cluster for each of multiple named resource. A combination of the respective sets of identifiers define a respective tree formed by the respective sets of identifiers for a respective named resource in the set of named resources. Upon origination and detection of a request at a given computer in the cluster a given computer forwards the request from the given computer over a network to successive computers in the hierarchical tree leading to the computers relevant in handling the request based on use of identifiers of neighbor computers. Thus a combination of identifiers of neighbor computers identify potential paths to related computers in the tree.,495,86,,
8063799,PC,"Citrix Systems, Inc.",39762127,Compression History,3/12/2007,2007,3/12/2027,Systems and methods for sharing compression histories between multiple devices,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories and compression history indexes across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,118,85,,
8405679,PC,"Citrix Systems, Inc.",41327676,Other Topics,9/9/2008,2008,11/13/2031,Methods and systems for per pixel alpha-blending of a parent window and a portion of a background image,A system for alpha blending at least a portion of an image of a window with a background image where the image of the window is captured by an alpha blender and blended together with an image of the background also captured by the alpha blender. The resulting alpha-blended image is then displayed within the window to give at least a portion of the window the appearance of smooth anti-aliased edges.,112,85,,
8654791,PC,"Citrix Systems, Inc.",42711808,Data Packets/Packet Engine|IP Address/Packet Engine,5/5/2009,2009,10/5/2029,Systems and methods for packet steering in a multi-core architecture,Described herein is a method and system for distributing whole and fragmented requests and responses across a multi-core system. Each core executes a packet engine that further processes data packets and data packet fragments allocated to that core. A flow distributor executing within the multi-core system forwards client requests to a packet engine on a core that is selected based on a value generated when a hash is applied to a tuple comprising a client IP address a client port a server IP address and a server port identified in the request. The packet engine maintains each element of the tuple and forwards the request to the selected core. The packet engine can also process data packet fragments by assembling the fragments prior to transmitting them to the selected core or by transmitting the data packet fragments to the selected core.,147,85,,
8018961,PC,"Citrix Systems, Inc.",43354338,Data Packets/Packet Engine,6/22/2009,2009,12/5/2029,Systems and methods for receive and transmission queue processing in a multi-core architecture,Described herein is a method and system for directing outgoing data packets from packet engines to a transmit queue of a NIC in a multi-core system and a method and system for directing incoming data packets from a receive queue of the NIC to the packet engines. Packet engines store outgoing traffic in logical transmit queues in the packet engines. An interface module obtains the outgoing traffic and stores it in a transmit queue of the NIC after which the NIC transmits the traffic from the multi-core system over a network. The NIC receives incoming traffic and stores it in a NIC receive queue. The interface module obtains the incoming traffic and applies a hash to a tuple of each obtained data packet. The interface module then stores each data packet in the logical receive queue of a packet engine on the core identified by the result of the hash.,244,85,,
8943304,PC,"Citrix Systems, Inc.",39030771,Virtual Server/Virtual Private Network|Virtual Server/Intercepting|Virtual Server/HTTP Request|Private Networks/Client Agent|Private Networks/HTTP Request|Transport Layer Connection/Client Agent|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/HTTP Request,8/3/2006,2006,1/1/2030,Systems and methods for using an http-aware client agent,Systems and methods are described for using a client agent operating in a virtual private network environment to intercept HTTP communications. Methods include: intercepting at the network layer by a client agent executing on a client an HTTP request from an application executing on the client; modifying the HTTP request; and transmitting via a transport layer connection the modified HTTP request to a server. Additional methods may comprise adding removing or modifying at least one cookie in the HTTP request. Still other methods may comprise modifying at least one name-value pair contained in the HTTP request. Corresponding systems are also described.,199,85,,
8054241,PC,"Citrix Systems, Inc.",39027185,Computing Devices/Computing Environment|Computing Devices/Viewer Computing|Remote Access/Viewer Computing|Remote Access/User Interface|Graphical User Interface/Display Screen|Graphical User Interface/Viewer Computing,9/14/2006,2006,7/2/2028,Systems and methods for multiple display support in remote access software,A method of supporting multiple display configurations in a remote access environment the remote access environment having a host computing device in communication with a viewer computing device comprises: receiving from a host computing device by a viewer computing device having one or more viewer displays a list of rectangles each rectangle representing the boundaries of one of a plurality of host displays; presenting by the viewer computing device to an end-user of the viewer computing device a graphical user interface including means for selecting a configuration for displaying a window representing screen data of the plurality of host displays in the viewable area of the one or more displays of the viewer computing device; and displaying in the selected configuration by the viewer computing device the window representing the screen data of the one or more host displays. Corresponding systems are also described.,264,85,,
8615159,PC,"Citrix Systems, Inc.",47880743,Data Packets/Packet Engine|Data Packets/Client Devices,9/20/2011,2011,11/29/2031,Methods and systems for cataloging text in a recorded session,Systems and methods described herein disclose searching the content of a recorded presentation layer protocol session including the steps of storing a plurality of packets sent to a client device rendering by a protocol engine at least one stored packet in the plurality of stored packets to a local video buffer and analyzing the at least one rendered packet with wherein analyzing includes at least scanning the at least one rendered packet with an optical character recognizer executing on the server. The systems and methods described herein also disclose using the optical character recognizer to generate a word associated with the at least one packet using a post processing component to generate identification data associated with the generated word associated with the at least one packet and storing the generated word associated with the at least one packet and storing the identification data associated with the generated word.,178,85,,
8392562,PC,"Citrix Systems, Inc.",44152676,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Directed Towards/User Session|Virtual Server/Client Devices|Virtual Server/Packet Processing Engines|Intermediary Devices/Multi-core|Intermediary Devices/User Session,12/23/2009,2009,12/1/2030,Systems and methods for managing preferred client connectivity to servers via multi-core system,The present application is directed towards systems and methods for providing a cookie by an intermediary device comprising a plurality of packet processing engines executing on a corresponding plurality of cores the cookie identifying a session of a user that was redirected responsive to a service exceeding a response time limit. The cookie may be generated with identifiers based off a name of a virtual server managing a service of a server and a name of a policy associated with the virtual server. Each packet processing engine of the plurality of packet processing engines may interpret cookies generated by other packet processing engines due to the name of the virtual server and name of the policy and may provide preferred client connectivity based on cookies included in requests for access to a service.,281,85,,
7774834,PC,"Citrix Systems, Inc.",42536713,Security Gateway/Security Gateway Receives Messages|Security Gateway/Requests Rather than Malicious Attacks the Security Gateway|Security Gateway/Entry Point,2/18/2004,2004,1/25/2027,Rule generalization for web application entry point modeling,A security gateway receives messages such as URL requests rejected by a message filter based on a set of rules. The security gateway maintains frequencies with which the messages were rejected by the rules. The security gateway finds rejected messages having a high frequency of occurrence. Since messages having a high frequency of occurrences are more likely to represent legitimate requests rather than malicious attacks the security gateway generates exception rules which would allow similar messages to pass through the gateway.,265,84,,
8589575,PC,"Citrix Systems, Inc.",44513165,Data Packets/Packet Engine,8/5/2010,2010,2/25/2032,Systems and methods for iip address sharing across cores in a multi-core system,In a multi-core system multiple packet engines across corresponding cores may be working concurrently processing data packets from data flows of SSL VPN sessions. For example a first core may establish a SSL VPN session with a client. Any one of the other cores such as a second core may received packets related to the session owned by the first core. Embodiments of the systems and method described below provide management of IIP addresses for the multi-core/multi-packet engine approach to providing SSL VPN service. In some embodiments the approach to managing IIP addresses is to have one packet engine on a core act as a master or controller of the IIPs for the remaining packet engines and cores. The packet engines/cores use a protocol for communications regarding IIP management.,142,84,,
7360030,PC,"Citrix Systems, Inc.",39281712,Other Topics,6/1/2004,2004,12/11/2025,Methods and apparatus facilitating volume management,Methods facilitating management of shared volumes of logical storage residing on one or more disks in a shared storage system are accessible by multiple computers. A coherent view of the shared storage is provided by assigning unique identifiers to each managed disk physical partition partition set and volume; and by describing a volume as a logical tree of partitions; when computer needs to modify a volume configuration it temporarily disables all computers' access to the modified shared disks and performs the changes. Efficient shared volume input/output handling is provided by minimizing number of requests directed toward each storage unit using page aligned buffers and transfer offsets. Per computer and per user access control is provided by storing a security descriptor for each shared volume when user or computer access has to be enforced the security identifier of the user or machine is checked against the security descriptor for needed rights.,217,84,,
7843938,PC,"Citrix Systems, Inc.",43216731,Other Topics,2/25/2005,2005,11/24/2027,Qos optimization with compression,A method and system for optimizing network traffic settings and for providing information on projected optimization of transformed traffic for a network includes: providing a traffic descriptor for sampled traffic data of the network; transforming the traffic data and extracting information on the transformed traffic data; and providing the traffic descriptor and the information on the transformed traffic data for analysis. The information can be a transformation traffic descriptor or a delta between untransformed and transformed network traffic. The traffic data and the transformed traffic data can then be modeled based the traffic descriptor and the information respectively. Bandwidth requirements and quality of service settings for optimizing network performance for a service level can be provided based upon the traffic data model. Information on projected optimization of transformed network traffic can also be provided for the service level based upon the transformed traffic data model.,175,84,,
7886050,PC,Citrix Systems Inc Silicon Valley,40877313,Remote Access/User Application Requests|Server Farm,10/5/2007,2007,3/26/2029,Systems and methods for monitoring components of a remote access server farm,The present application is related methods to monitor a state of one or more components of a remote access server farm by an intermediary to distinguish between operating and functional components and improve farm availability for user application requests. The intermediary may be deployed between a client and the remote access server farm and forwards client requests to functional components of the remote access server farm.,241,84,,
7970923,PC,"Citrix Systems, Inc.",38595542,Directed Towards/Computing Environment,4/12/2006,2006,4/11/2027,Systems and methods for accelerating delivery of a computing environment to a remote user,The present invention is directed towards a method and system for accelerating delivery of a computing environment to a remote client. The computing environment may include a plurality of files comprising an application program and may be streamed to a remote client from a server. Responsive to a determination of whether transmission of the application may be accelerated an appliance intercepting the plurality of files may accelerate transmission of the application program by applying one or more transport layer transmission acceleration techniques to the plurality of files.,174,84,,
8433783,PC,"Citrix Systems, Inc.",44741733,Directed Towards/Other Topics,9/29/2010,2010,7/29/2031,Systems and methods for providing quality of service via a flow controlled tunnel,The present invention is directed towards systems and methods for providing Quality of Service (QoS) via a flow controlled tunnel. Traffic from a plurality of applications may be directed into a single connection or flow-controlled tunnel and QoS policies may be applied across the plurality of applications without configuration of individual link speeds enabling QoS scheduling to dynamically adjust traffic transmission and reception rates to ensure priority management of applications regardless of a final endpoint of the application communications. Accordingly traffic of different types including VPN HTTP Voice-over-IP (VoIP) remote desktop protocol traffic or other traffic may be easily balanced and prioritized. In many embodiments the tunnel may be transparent to applications such that without any application configuration application traffic may still be prioritized by QoS requirements.,222,84,,
8301839,PC,"Citrix Systems, Inc.",38226025,Directed Towards/Network Packets|Directed Towards/Packet Processing Engines|Directed Towards/Dynamically Generated Objects|Data Packets/Packet Engine|Data Packets/Communications Network|Data Packets/Dynamic Data,12/30/2005,2005,6/24/2026,System and method for performing granular invalidation of cached dynamically generated objects in a data communication network,The present invention is directed towards a method and system for providing granular timed invalidation of dynamically generated objects stored in a cache. The techniques of the present invention incorporates the ability to configure the expiration time of objects stored by the cache to fine granular time intervals such as the granularity of time intervals provided by a packet processing timer of a packet processing engine. As such the present invention can cache objects with expiry times down to very small intervals of time. This characteristic is referred to as invalidation granularity. By providing this fine granularity in expiry time the cache of the present invention can cache and serve objects that frequently change sometimes even many times within a second. One technique is to leverage the packet processing timers used by the device of the present invention that are able operate at time increments on the order of milliseconds to permit invalidation or expiry granularity down to 10 ms or less.,171,83,,
8310928,PC,"Citrix Systems, Inc.",46302426,Other Topics,7/29/2003,2003,8/1/2024,Flow control system architecture,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,175,83,,
8429652,PC,"Citrix Systems, Inc.",43355250,Directed Towards/Multi-core,6/22/2009,2009,6/10/2031,Systems and methods for spillover in a multi-core system,The present invention is directed towards systems and methods for spillover threshold management in a multi-core system. A pool manager divides the spillover threshold limit of connections for vServers into an exclusive quota pool and a shared quota pool. Each vServer operating on a core is allocated an exclusive number of connections from the exclusive quota pool. If a vServer wishes to create connections beyond its exclusive number the vServer can borrow from the shared quota pool. When the vServers are using at least a first predetermined threshold of their exclusive number of connections and the number of available connections in the shared quota pool has reached a second predetermined threshold the multi-core system establishes a backup vServer.,154,83,,
8631147,PC,"Citrix Systems, Inc.",39762541,Data Packets/Data Streams|Data Packets/Data Structures|Data Packets/Payload Portion,3/12/2007,2007,4/22/2030,Systems and methods for configuring policy bank invocations,Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing VPNs SSL offloading content switching application security acceleration and caching.,201,83,,
8549516,PC,"Citrix Systems, Inc.",41719330,Computing Devices/Other Topics|Virtual Machine/Hypervisor|Virtual Machine/Virtual Disk,12/23/2008,2008,3/11/2031,"Systems and methods for controlling, by a hypervisor, access to physical resources",A system for controlling by a hypervisor access to physical resources during execution of a virtual machine includes a physical disk and a hypervisor. The physical disk is provided by a computing device and stores at least a portion of a virtual disk. The hypervisor executes on the computing device. The hypervisor allocates to the virtual disk an amount of access to the physical disk. The hypervisor determines that a level of utilization of the physical disk has exceeded a threshold. The hypervisor limits in response to the determination access by the virtual disk to the physical disk.,153,83,,
8219676,PC,"Citrix Systems, Inc.",42931800,Data Packets/Packet Engine,6/22/2009,2009,12/5/2030,Systems and methods for web logging of trace data in a multi-core system,A method and system for generating a web log that includes transaction entries from transaction queues of one or more cores of a multi-core system. A transaction queue is maintained for each core so that either a packet engine or web logging client executing on the core can write transaction entries to the transaction queue. In some embodiments a timestamp value obtained from a synchronized timestamp variable can be assigned to the transaction entries. When a new transaction entry is added to the transaction queue the earliest transaction entry is removed from the transaction queue and added to a heap. Periodically the earliest entry in the heap is removed from the heap and written to a web log. When an entry is removed from the heap the earliest entry in a transaction queue corresponding to the removed entry is removed from the transaction queue and added to the heap.,178,83,,
8713474,PC,"Citrix Systems, Inc.",45890910,Computing Devices/Computing Environment|Local Computing/Computing Environment,10/5/2010,2010,2/8/2032,Providing user interfaces and window previews for hosted applications,A local computing device may use a remote computing device to host various resources on behalf of the local computing device. The local computing device may receive data related to a graphical window of the remotely hosted resource and generate a graphical window on the local desktop environment for the remotely hosted resource. The local computing device may also update a taskbar to include the remote hosted resource. Window previews may also be generated by the local computing device and the window previews may include snapshots or dynamic images of the graphical window for the remotely hosted resource. In some instances the snapshots may be provided to the local computing device from the remote computing device.,597,83,,
9021140,PC,"Citrix Systems, Inc.",39763987,Computing Devices/Other Topics,3/12/2007,2007,10/1/2031,Systems and methods for error detection,The method can include receiving at a computing device of an end-user a web page including a script embedded by a network appliance the script having instructions that when executed by the computing device registers for notification of a browser error event executing the script at the computing device of the end-user and recording the occurrence of an error during the rendering of the web page when an error occurs.,222,83,,
8387143,PC,"Citrix Systems, Inc.",44067262,Directed Towards/Client Side|Transport Layer Connection/Client Side|Transport Layer Connection/Response to the Client,11/30/2009,2009,4/22/2031,Systems and methods for aggressive window probing,The present application is directed towards systems and methods for aggressively probing a client side connection to determine and counteract a malicious window size attack or similar behavior from a malfunctioning client. The solution described herein detects when a connection may be under malicious attach via improper or unusual window size settings. Responsive to the detection the solution described herein will setup probes that determine whether or not the client is malicious and does so within an aggressive time period to avoid the tying up of processing cycles transport layer sockets and buffers and other resources of the sender.,197,83,,
8775665,PC,Bytemobile Inc,42035984,Mobile Devices/Media Stream,2/9/2009,2009,1/26/2030,Method for controlling download rate of real-time streaming as needed by media player,A computer-implemented method including receiving streaming media wherein the streaming media is requested by a media player at a mobile device; retrieving timing information from the streaming media wherein the timing information corresponds to real-time playback rate on the media player; framing the streaming media based on the real-time playback rate on the media player; scheduling transmission of the framed streaming media based on the framing; and transmitting the framed streaming media to the media player according to the schedule.,143,83,,
8412832,PC,"Citrix Systems, Inc.",44152689,Virtual Server/GSLB Virtual Server|Intermediary Devices/Multi-core|Intermediary Devices/Present Disclosure|Intermediary Devices/GSLB Virtual Server|Intermediary Devices/DNS|Transport Layer Connection/Intermediary|Transport Layer Connection/Present Disclosure|Transport Layer Connection/Connection Management,12/23/2009,2009,1/13/2030,Systems and methods for gslb mep connection management across multiple core appliances,The present disclosure presents systems and methods for obtaining metric information by a multi-core GSLB intermediary device and providing global server load balancing services using the obtained information. A first core of a multi-core GSLB appliance establishes a transport layer connection to a remote load balancer at a site of a plurality of sites. The first core transmits a message to each of the other cores of the multi-core GSLB appliance that that the first core is a master core for receiving metric information from the load balancer. The first core receives metric information of the remote site from the load balancer. The first core propagates the metric information to each of the other cores of the GSLB appliance. A GSLB virtual server on a slave core receives a DNS request. The GSLB virtual server determines a DNS resolution for the DNS request based on the metric information.,296,82,,
8009682,PC,"Citrix Systems, Inc.",42711808,Data Packets/Packet Engine|IP Address/Packet Engine,5/5/2009,2009,2/27/2030,Systems and methods for packet steering in a multi-core architecture,Described herein is a method and system for distributing whole and fragmented requests and responses across a multi-core system. Each core executes a packet engine that further processes data packets and data packet fragments allocated to that core. A flow distributor executing within the multi-core system forwards client requests to a packet engine on a core that is selected based on a value generated when a hash is applied to a tuple comprising a client IP address a client port a server IP address and a server port identified in the request. The packet engine maintains each element of the tuple and forwards the request to the selected core. The packet engine can also process data packet fragments by assembling the fragments prior to transmitting them to the selected core or by transmitting the data packet fragments to the selected core.,230,82,,
8786473,PC,"Citrix Systems, Inc.",39762127,Compression History,3/12/2007,2007,8/5/2027,Systems and methods for sharing compression histories between multiple devices,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories and compression history indexes across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,108,82,,
8730269,PC,"Citrix Systems, Inc.",45065448,Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing|Mobile Devices/User Interface|Mobile Devices/Present Disclosure,5/14/2010,2010,9/14/2031,Interpreting a gesture-based instruction to selectively display a frame of an application user interface on a mobile computing device,In general overview the present disclosure is directed to a system and method for selectively displaying a frame of an application user interface on a mobile computing device. A user interface analyzer on a mobile computing device analyzes a user interface for an application executing on a remote server. The user interface analyzer identifies frames in the user interface the positions of the frames relationships between frames and horizontal and vertical panning offsets to move between adjacent frames. The mobile computing device receives a user input requesting the display of an adjacent frame. Based on the information the user interface analyzer obtained the mobile computing device displays an adjacent frame of the user interface.,204,82,,
8908700,PC,"Citrix Systems, Inc.",40431760,Security Gateway/Data Communication Network,9/7/2007,2007,4/3/2031,Systems and methods for bridging a wan accelerator with a security gateway,The solution described herein provides systems and methods for the interoperability of network processing programs that process network packets at different levels of the network stack. This solution bridges the communications of a network packet between a first network processing program operating at a first level of a network stack in an intermediary and a second network processing program operating at a second level of the network stack of the intermediary. The first network processing program may modify an incoming network packet so that the packet may traverse the network stack to an upper level of the stack to the second network processing program. After processing the network packet at the upper layers of the stack or by the second network processing program the first network processing program modifies the network pack in order to transmit the packet to the intended destination while traversing the intermediary.,305,82,,
8230054,PC,"Citrix Systems, Inc.",44152614,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Intermediary Devices/Multi-core|Intermediary Devices/Internet Protocol Address|IP Address/Packet Engine|IP Address/Source IP,12/23/2009,2009,1/14/2030,Systems and methods for managing dynamic proximity in multi-core gslb appliance,The present invention is directed towards systems and methods for providing dynamic proximity load balancing via a multi-core intermediary device. An intermediary device providing global server load balancing (GSLB) identifies a local domain name service (LDNS) entries database and assigns each LDNS entry in the LDNS entries database to one of the plurality of packet processing engine base on a source internet protocol (IP) address of each LDNS entry. The first packet processing engine on the appliance receives a LDNS request for an IP address determines that the LDNS entry for the IP address is assigned to a second packet processing engine of the plurality of packet processing engines transmits a request to the second packet processing engine for the LDNS entry for the IP address and determines a response to the LDNS request based on the LDNS entry for the IP address received from the second packet processing engine.,255,82,,
8356101,PC,"Citrix Systems, Inc.",38776235,Private Networks/Network Session,8/3/2006,2006,8/3/2026,Systems and methods for managing a plurality of user sessions in a virtual private network environment,Methods for establishing an SSL/VPN session on behalf of a user of a client where the user has a previously existing session are described. Methods include receiving by an appliance a request from a first client operated by a user to establish a virtual private network session; creating by the appliance a temporary virtual private network session with the client; identifying by the appliance an existing virtual private network session previously established on behalf of the user; terminating the previous session; and creating a new virtual private network session with the client using the temporary session. Other methods may further include transmitting a request to a user corresponding to whether to terminate one or more previous sessions and transferring session data from a previously existing session to a current session. Corresponding systems are also described.,216,82,,
8717916,PC,"Citrix Systems, Inc.",46927160,Virtual Server/Client Devices|Intermediary Devices/Other Topics,3/28/2011,2011,12/29/2031,Systems and methods for learning mss of services,The virtual Server (vServer) of an intermediary device deployed between a plurality of clients and services supports parameters for setting maximum segment size (MSS) on a per vServer/service basis and for automatically learning the MSS among the back-end services. In case of vServer/service setting all vServers will use the MSS value set through the parameter for the MSS value set in TCP SYN+ACK to clients. In the case of learning mode the backend service MSS will be learnt through monitor probing. The vServer will monitor and learn the MSS that is being frequently used by the services. When the learning is active the intermediary device may keep statistics of the MSS of backend services picked up during load balancing decisions and once an interval timer expires the MSS value may be picked by a majority and set on the vServer. If there is no majority then the highest MSS is picked up to be set on the vServer.,152,82,,
8769019,PC,"Citrix Systems, Inc.",38662364,Computing Devices/Other Topics,5/4/2006,2006,4/19/2030,Methods and systems for managing shared state within a distributed system with varying consistency and consensus semantics,Methods and systems for managing shared state within a distributed system with varying consistency and consensus semantics are described. In one configuration a computing device receives a first plurality of objects representing the state of a first item and a second plurality of objects representing the state of a second item. The computing device generates a composed view of the state of each of the first item and the second item. The resulting composed views are transmitted using a reliable multicast protocol.,517,82,,
8701010,PC,"Citrix Systems, Inc.",39763835,Intermediary Devices/Network Traffic,3/12/2007,2007,11/17/2029,Systems and methods of using the refresh button to determine freshness policy,The present solution provides a variety of techniques for accelerating and optimizing network traffic such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching protocol acceleration domain name resolution acceleration as well as compression improvements. In some cases the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching such as HTTP proxy caching. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser as well as on any type and form of intermediary device such as an appliance proxying device or any type of interception caching and/or proxying device.,205,81,,
8910241,PC,"Citrix Systems, Inc.",41449333,Computing Devices/Client Devices|Computing Devices/Network Packets|Session Key/Client Devices,4/25/2002,2002,7/8/2027,Computer security system,A method of packet management for restricting access to a resource of a computer system. The method includes identifying client parameters and network parameters as a packet management information used to determine access to the resource negotiating a session key between client and server devices generating a session ID based on at least the negotiated session key inserting the packet management information and the session ID into each information packet sent from the client device to the server device monitoring packet management information in each information packet from the client device and filtering out respective information packets sent to the server device from the client device when the monitored packet management information indicates that access to the resource is restricted.,158,81,,
8127017,PC,"Citrix Systems, Inc.",40011033,Other Topics,6/22/2007,2007,11/3/2029,Methods and servers for displaying and activating disconnected sessions,A method for displaying and activating disconnected sessions includes the step of receiving information associated with a user. At least one disconnected session already associated with the user is identified in response to the information. A graphical representation of the at least one disconnected session associated with the user is displayed to the user. A request to connect to the at least one disconnected session is received from the user. A connection is established between a client computer operated by the user and the requested at least one disconnected session.,189,81,,
8392497,PC,"Citrix Systems, Inc.",44063000,Computing Devices/Client Devices|Computing Devices/Network Packets|Data Packets/Client Devices|Data Packets/Network Connection|Virtual Machine/Hypervisor|Virtual Machine/Image Processor Algorithm|Remote Access/Network Packets|Remote Access/Client Devices|Remote Machine/Image Processor Algorithm|Remote Machine/Access Control,11/25/2009,2009,6/28/2031,Systems and algorithm for interfacing with a virtualized computing service over a network using a lightweight client,Systems and algorithm for controlling a virtualized computer service remotely through a client includes defining a virtual infrastructure in which a plurality of virtual machines are running on a hypervisor with at least one of the virtual machine executing an image processor algorithm. The image processor algorithm is configured to receive a connection request from the client for controlling the virtualized computer service (or simply virtual service) available at a specific virtual machine. The request includes a plurality of connection parameters that describe the connection requirements of the client and is received at the virtual machine that is equipped with the image processor algorithm. The connection parameters are interrogated using the image processor algorithm to identify a specific virtual machine that provides the requested virtualized computer service. A framebuffer data for the identified virtual machine located in virtual memory is accessed and read directly through a hypervisor. The framebuffer data is processed into a plurality of image data packets using the image processor algorithm and transmitted to the client for presenting on a display device associated with the client. The image data packet grammar is tailored to the client and represents an image of the virtual machine display for the identified virtual machine.,250,81,,
8677007,PC,"Citrix Systems, Inc.",39030576,Transport Layer Connection/Client Agent|Transport Layer Connection/Intermediary,8/3/2006,2006,10/10/2029,Systems and methods for bypassing an appliance,Methods for redirecting on a client a communication of the client to a server to upon determining the server is not useable to communicate to the client include the steps of: establishing by an client agent on a client a transport layer connection between the client and an intermediary appliance the intermediary appliance providing access to one or more servers; receiving by the client agent from the intermediary appliance address information identifying at least one of the one or more servers available to communicate; determining by the client agent the transport layer connection is unusable to communicate; establishing by the client agent a second transport layer connection between the client and one of the identified available servers to bypass the appliance. Corresponding systems are also described.,408,81,,
8700763,PC,"Citrix Systems, Inc.",40810485,Other Topics,5/19/2008,2008,12/22/2030,Systems and methods for automatically testing an application,Systems and methods for performing automated load and usability testing via an application delivery appliance can include methods where a browser having a unique identifier is detected and a script is injected into the HTML response generated by the page displayed within the browser. The injected script renders the page and the links on the page and then selects a link within the rendered page. Upon selecting a link the script then waits for a period of time before calling a function associated with the selected link. In situations where the browser is a control browser the calling of a function associated with the link is followed by the spawning of one or more slave browsers where each slave browser further executes the above-listed steps beginning with the execution of the injected script and ending with the calling of the function associated with the selected link.,171,81,,
8891939,PC,"Citrix Systems, Inc.",44151251,Computing Devices/Other Topics,12/22/2009,2009,8/25/2032,Systems and methods for video-aware screen capture and compression,A new approach is proposed that contemplates systems and methods to support video-aware screen capture and compression. More specifically the video-aware approach first detects whether or when video content is being actively played back on a screen of a hosting device. If the video content is actively being rendered the approach separates (segments) the screen content into static (non-video) content and video content The approach then applies video-specific capture and compression methods to the video content of the screen and other suitable compression methods to the non-video content of the screen. The compressed static and video content of the screen are separately and independently transmitted across the network to remote computing devices and are then decompressed and processed to reconstruct screen of its original content for display at the screens of the remote computing devices.,264,81,,
8924571,PC,"Citrix Systems, Inc.",44142394,Computing Devices/Other Topics|Virtual Machine/Hypervisor|Local Computing/Network Connection|Local Computing/Request Data,12/14/2009,2009,7/17/2032,"Methods and systems for providing to virtual machines, via a designated wireless local area network driver, access to data associated with a connection to a wireless local area network",The methods and systems described herein are directed to providing to virtual machines access to data associated with a connection to a wireless local area network in a computing device executing a hypervisor hosting a first virtual machine and a second virtual machine. A first driver executed by a first virtual machine of the first physical computing device establishes a network connection to a second physical computing device via a wireless local area network interface of the first physical computing device. The first driver receives from a second driver executed by a second virtual machine of the first physical computing device a request for a characteristic of the network connection. The first driver provides responsive to the request data comprising the requested characteristic to the second driver.,294,81,,
7895639,PC,"Citrix Systems, Inc.",38662639,Computing Devices/Computing Environment,5/4/2006,2006,2/11/2029,Methods and systems for specifying and enforcing access control in a distributed system,Methods and systems for controlling access to objects of a distributed computing environment are described. In one configuration a computing device receives a request from a principal to access a protected object and evaluating the transitive closure of the list of group identifiers. The protected object is associated with an access control list and has a time-invariant list of group identifiers. The list of group identifiers includes the access list is associated with the protected object to identify at least one principal authorized to access the protected object.,264,81,,
8271610,PC,"Citrix Systems, Inc.",42709961,Data Packets/Data Streams|Data Packets/Communications Network|Data Packets/Intercepting|Mobile Devices/User Interface|Mobile Devices/Communications Network|Mobile Devices/Request Data,8/28/2008,2008,9/7/2029,Distributed content caching solution for a mobile wireless network,A method in an electronic device provides local content to a user device in a communication network. The communication network includes an access network and a core network. In the access network a content request is intercepted from the user device which may be formatted according to a network interface. The content request may include a request for data content. Protocol layers associated with an active data session may be terminated so that an edge gateway device may extract and inject packets into the data stream without involving the core network. A cache may be maintained in the access network.,194,81,,
8560826,PC,"Citrix Systems, Inc.",44167925,Computing Devices/Client Devices|Computing Devices/Computing Environment|Computing Devices/Virtualization Environment|Computing Devices/External Media,12/14/2009,2009,6/28/2031,Secure virtualization environment bootable from an external media device,Methods and systems for creating a secure virtualization environment on a host device without modifying the host device the secure virtualization environment bootable from an external media device. A host computing device loads and boots a common operating system image stored on an external media device. A client agent stored on the external media device and executing in the common operating system image creates an adapted operating system image by copying the operating system of the host computing device eliminating all unnecessary files and data and storing the adapted operating system image to the external media device. The host computing device provides a secure virtualized environment by booting the adapted operating system image.,135,81,,
8650565,PC,"Citrix Systems, Inc.",44142394,Computing Devices/Other Topics|Virtual Machine/Other Topics,12/14/2009,2009,5/26/2032,"Servicing interrupts generated responsive to actuation of hardware, via dynamic incorporation of acpi functionality into virtual firmware",The methods and systems described herein describe methods and systems for forwarding an interrupt that is generated by hardware to virtual firmware executing on a virtual machine. A control program receives an interrupt generated by hardware connected to the computing device. The control program forwards the interrupt to virtual firmware executed by a virtual machine executed by the processor of the computing device. The virtual machine receives the interrupt from the virtual firmware and requests of the virtual firmware by the virtual machine and responsive to receiving the interrupt objects and methods associated with the interrupt. The control program receives from the virtual firmware the request for objects and methods associated with the interrupt. The control program extracts from an ACPI of firmware of the computing device objects and methods associated with the interrupt and forwards the extracted objects and methods to the virtual machine.,219,81,,
8732290,PC,"Citrix Systems, Inc.",45925964,Virtual Server/Desktop,10/5/2010,2010,3/14/2032,Virtual workplace software based on organization characteristics,Virtual workplace server software may be selected for and/or provided to an organization server based on various characteristics of the organization. One or more inputs may be received corresponding to organization characteristics for example organization type and size along with other potential organization characteristics and additional relevant information. Based on the organization characteristics and/or other relevant information virtual workplace software may be selected for an organization server. The selection of the virtual workplace software may be output and/or the corresponding software may be downloaded and installed to provide desktop virtualization at the organization server. After the virtual workplace software is installed at a desktop virtualization server the software may be used to provide virtual desktops to authorized end users and management functionality to authorized administrators.,229,81,,
8117608,PC,"Citrix Systems, Inc.",45561618,Computing Devices/Client Devices|Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing|Mobile Devices/User Interface|Mobile Devices/Mobile Clients|Software Application/Client Devices|Software Application/User Interface,9/3/2005,2005,3/19/2030,System and method of providing mobility to personal computers,A user-centric computing system that includes a mobile storage device (“MSD”) capable of interfacing with a client personal computer (“PC”) for the purpose of using certain resources available through the client PC to access user programs applications data and settings stored on the MSD. The user-centric computing system may also include a software management program configured to select the user programs applications data and settings to be stored on the MSD from the user programs applications data and settings installed on a user's PC and to interface with the client PC. A method of providing mobility to a user PC by selecting programs installed on the user PC and storing the selected programs on an MSD and interfacing the MSD with a client PC is also provided.,433,80,,
8327181,PC,"Citrix Systems, Inc.",43355341,Other Topics,6/22/2009,2009,2/24/2030,Systems and methods for failover between multi-core appliances,The present disclosure presents systems and methods for maintaining operation of a first multi-core appliance 200 by a second multi-core appliance upon failover of the first multi-core appliance. A secondary appliance may receive information about configuration settings and operations of a plurality of packet processing engines (PPEs) each of the PPEs operating on one of a plurality of cores of the primary multi-core appliance. Status of operation of the plurality of PPEs of the primary appliance may be monitored by exchanging communication between the primary and secondary appliances. Configuration settings for each of a PPEs operating on the cores of the secondary appliance may be established responsive to detection that one or more of the PPEs of the primary appliance is unavailable. Configuration information for each of the PPEs of the secondary appliance may be propagated to the plurality of the PPEs of the secondary appliance.,169,80,,
8132168,PC,"Citrix Systems, Inc.",41581039,Other Topics,12/23/2008,2008,1/4/2031,Systems and methods for optimizing a process of determining a location of data identified by a virtual hard drive address,A system for optimizing a process of determining a location of data identified by a virtual hard drive address includes a virtual hard drive a hypervisor a plurality of chained files and a table. The plurality of chained files includes a first file comprising a delta of a master file and each subsequent file comprising a delta of a previous file in the plurality of chained files. The table enumerates associations between each of a plurality of virtual hard drive addresses with one of the master file and a file in the plurality of chained files. The virtual hard drive stores the master file the plurality of chained files and the table. The hypervisor intercepts a request to access data at a virtual hard drive address and identifies based on the table a file containing the requested data and responds to the request with access to the requested data.,204,80,,
8769141,PC,Bytemobile Inc,42666360,Data Packets/Data Streams,7/10/2007,2007,7/9/2028,Adaptive bitrate management for streaming media over packet networks,A method including providing pseudo-streaming media data to a terminal; receiving a transport control protocol (TCP) acknowledgement from the terminal; estimating one or more network conditions of a network based at least in part on the TCP acknowledgement; determining an optimal session bitrate based on the estimated one or more network conditions; and providing pseudo-streaming media data to the terminal based on the optimal session bitrate.,198,80,,
8200752,PC,"Citrix Systems, Inc.",44152613,Intermediary Devices/Present Disclosure|Intermediary Devices/Intermediary Receives a Request from a Client|IP Address/Source IP|IP Address/Network Layer|Transport Layer Connection/Intermediary|Transport Layer Connection/Present Disclosure|Transport Layer Connection/Cache Server,12/23/2009,2009,1/6/2030,Systems and methods for policy based transparent client ip insertion,The present disclosure presents systems and methods for maintaining an original source IP address of a request by an intermediary network device despite the source IP address being modified by a cache server during an unfulfilled cache request. An intermediary receives a request from a client to access a destination server via a first transport layer connection. The client request identifies the client's IP address as a source IP address. The intermediary transmits to a cache server via a second transport layer connection the client request as a second request modified to include the client IP address of the first request in a header. The intermediary device receives via a third connection the second request as a third request from the cache server. The intermediary device obtains the client IP address from the header of the third request and transmits to the server identified in the first request the third request as a fourth request identifying the client IP address as the source IP address.,285,80,,
8484718,PC,"Citrix Systems, Inc.",38997856,Private Networks/Other Topics|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/Response to the Client,8/3/2006,2006,5/9/2030,Systems and methods for enabling assured records using fine grained auditing of virtual private network traffic,Methods for enabling assured records using fine grained auditing of virtual private network traffic include establishing by an appliance a transport layer virtual private network connection with a client operated by a user; receiving by the appliance via the connection a request from the client identifying a resource; determining by the appliance the request meets at least one security condition; transmitting by the appliance to an audit log a record of the request; receiving by the appliance from the audit log a confirmation that the record was logged; and granting responsive to the received confirmation access to the identified resource. Security conditions may identify at least one user at least one application a network or group of networks and one or more resources. Corresponding systems are also described.,160,80,,
8418243,PC,"Citrix Systems, Inc.",39102874,Private Networks/Client Agent|Private Networks/Network Session|Private Networks/VPN User|IP Address/Virtual Private Network|IP Address/SSL VPN Session,8/21/2006,2006,4/16/2029,Systems and methods of providing an intranet internet protocol address to a client on a virtual private network,The intranet IP address management solution of the appliance and/or client described herein provides an environment for efficiently assigning managing and querying virtual private network addresses referred to as intranet IP (IIP) addresses of virtual private network users such as a multitude of SSL VPN users on an enterprise network. The appliance provides techniques and policies for assigning previously assigned virtual private network addresses of a user to subsequent sessions of the user as the user logs in multiple times or roams between access points. This technique is referred to IIP stickiness as the appliance attempts to provide the same IIP address to a roaming VPN user. The appliance also provides a configurable user domain naming policy so that one can ping or query the virtual private network address of a user by an easily referenceable host name identifying the user. The appliance and/or client agent also provide techniques to allow applications to seamlessly and transparently communicate on the virtual private network using the virtual private network address of the user or client on the private network.,140,80,,
8484290,PC,"Citrix Systems, Inc.",40433032,Remote Access/Resource Provided|Remote Access/Local Machine|Remote Machine/Resource Provided|Remote Machine/Graphical Data,9/12/2007,2007,6/20/2029,"Methods and systems for providing, by a remote machine, access to a desk band associated with a resource executing on a local machine",A method for providing by a remote machine access to a desk band associated with a resource on a local machine includes receiving by a first agent on the remote machine an identification of a desk band associated with a resource on a local machine. The first agent in communication with a shell on the remote machine maintains a taskbar window in a remote desktop environment. The taskbar window includes at least one window associated with a resource provided by the remote machine and a window region representing the desk band by using graphical data stored on the remote machine. The first agent transmits to a second agent on the local machine window attribute data and output data associated with the taskbar window in the remote desktop environment. The second agent displays at least a portion of the received output data in a local window on a local desktop environment.,278,80,,
8429169,PC,Bytemobile Inc,44511537,IP Address/Other Topics,7/30/2010,2010,7/29/2031,Systems and methods for video cache indexing,Methods and systems for indexing content in a cache data structure within a content cache are disclosed. The methods and systems identify at least one characterization data associated with a received content request and input the at least one characterization data into a hash function to generate an index that is used for identifying an entry associated with the requested content in the cache data structure. The at least one characterization data may include a portion of content associated with the received content request a portion of a Uniform Resource Locator (URL) associated with the received content request an IP address associated with the received content request the length of the content associated with the received content request and one or more parameters parsed from the URL associated with the received content request.,139,80,,
8560695,PC,"Citrix Systems, Inc.",41716550,Virtual Server/Spillover|Virtual Server/Backup Virtual Server,11/25/2008,2008,7/27/2029,Systems and methods for health based spillover,The present solution provides a spillover management technique for virtual servers of an appliance based on health. Using a health based spillover technique a network appliance may direct requests to a backup or second virtual server upon determining that a predetermined percentage of services being load balanced are down. In this manner the spillover will occur based on a user controlled determination of a level of services being down to the number of services enabled. Instead of waiting for a last service of a virtual server to be marked down to spillover to another virtual server the spillover may occur based on a user specified percentage. For example the appliance may spillover from one virtual server to another virtual server when the number of services marked down relative to the number of enabled services falls below a specified percentage.,301,80,,
8718400,PC,"Citrix Systems, Inc.",42121406,Local Computing/Virtual Channel,4/7/2009,2009,3/22/2030,Methods and systems for prioritizing dirty regions within an image,A method for identifying modified sections of a drawing region and selecting at least one modified drawing region section to transmit to a remote computer. A local computer can execute a prioritization module that can identify a first modified drawing region section and a second modified drawing region section. Each of the first and second modified drawing region section can have a corresponding priority. The prioritization module can determine whether the first priority of the first section is greater than the second priority of the second section and can select the greater priority. The local computer can then transmit the selected modified drawing region section that has the greatest priority to a remote computer that communicates with the local computer over a virtual channel.,188,80,,
8990910,PC,"Citrix Systems, Inc.",40643393,Other Topics,11/13/2007,2007,5/25/2032,System and method using globally unique identities,Systems and methods are described for creating a globally unique identity for a user or user-container by performing an iterative join where each participating back-end data source. The systems and methods include an ID-Unify (IDU) that performs identity virtualization and creates or generates a globally unique identifier for a user in operational environments in which there is a pre-existing conflict caused by the existence of different identities for a user in different authentication data sources.,100,80,,
8195617,PC,Citrix Systems International Gmbh,41693466,Other Topics,12/30/2008,2008,3/23/2030,Managing data across a plurality of data storage devices based upon collaboration relevance,A computer-implemented method of managing data storage according to collaborative activity can include determining collaborative activity for each of a plurality of data items associated with a first user and stored within a first data storage device. The method can include calculating a measure of relevancy for each of the plurality of data items according to the collaborative activity and comparing the measure of relevancy of each of the plurality of data items to at least one relevancy threshold. Different ones of the plurality of data items can be selectively migrated from the first data storage device to a second data storage device according to the comparison of the measure of relevancy of each of the plurality of data items.,174,79,,
8626946,PC,"Citrix Systems, Inc.",38834980,Other Topics,8/3/2006,2006,2/17/2029,Systems and methods for hierarchical global load balancing,Systems and methods are disclosed for providing a hierarchy of appliances to access resources across branch offices. A method comprises: establishing by a first aggregator appliance connections with a first plurality of branch office appliances; establishing by a second aggregator appliance connections with a second plurality of branch office appliances the first plurality not having information identifying the second plurality; receiving by the first aggregator appliance from a first branch office appliance a request from a client for access to a resource; identifying by the first aggregator appliance via the second aggregator appliance a second branch office appliance from the second plurality to service the request; transmitting by the first aggregator appliance to the first branch office appliance information identifying the second branch office appliance; and establishing by the first branch office appliance a connection with the second branch office appliance. Corresponding systems are also described.,309,79,,
8205035,PC,"Citrix Systems, Inc.",43355286,Directed Towards/Various Embodiments|Directed Towards/User Session|Intermediary Devices/User Session|Intermediary Devices/HTTP Response|Intermediary Devices/Subsequent Request,6/22/2009,2009,8/13/2030,Systems and methods for integration between application firewall and caching,The present invention is directed towards systems and methods for integrating cache managing and application firewall processing in a networked system. In various embodiments an integrated cache/firewall system comprises an application firewall operating in conjunction with a cache managing system in operation on an intermediary device. In various embodiments the application firewall processes a received HTTP response to a request by a networked entity serviced by the intermediary device. The application firewall generates metadata from the HTTP response and stores the metadata in cache with the HTTP response. When a subsequent request hits in the cache the metadata is identified to a user session associated with the subsequent request. In various embodiments the application firewall can modify a cache-control header of the received HTTP response and can alter the cookie-setting header of the cached HTTP response. The system and methods can significantly reduce processing time associated with application firewall processing of web content exchanged over a network.,147,79,,
8650299,PC,"Citrix Systems, Inc.",50032873,Virtual Server/Cloud Infrastructure,2/3/2010,2010,9/6/2031,Scalable cloud computing,A scalable cloud infrastructure serves two or more customers where each customer is associated with at least one unit of virtual resources. The virtual resources are established by apportioning physical resources in the cloud infrastructure that are partitioned into pods within one or more zones in a scalable manner. Each pod comprises a strongly connected discrete set of physical resources in a zone. Additionally the cloud infrastructure establishes one or more management server clusters each comprising one or more management servers. Each management server is configured for allocating the units of virtual resources to an account associated with each customer. The traffic from two or more customer accounts within the scalable cloud infrastructure is isolated and segmented.,367,79,,
8392977,PC,"Citrix Systems, Inc.",39030769,Private Networks/Client Agent|Private Networks/HTTP Request|Transport Layer Connection/Client Agent|Transport Layer Connection/Virtual Private Network|Transport Layer Connection/HTTP Request|Transport Layer Connection/Connection Management,8/3/2006,2006,3/26/2030,Systems and methods for using a client agent to manage http authentication cookies,Systems and methods are described for using a client agent to manage HTTP authentication cookies. One method includes intercepting by a client agent executing on a client a connection request from the client; establishing by the client agent a transport layer virtual private network connection with a network appliance; transmitting by the client agent via the established connection an HTTP request comprising an authentication cookie; and transmitting by the client agent via the connection the connection request. A second method includes intercepting by a client agent executing on a client an HTTP communication comprising a cookie from an appliance on a virtual private network to the client; removing by the client agent the cookie from the HTTP communication; storing by the client agent the received cookie; transmitting by the client agent the modified HTTP communication to an application executing on the client; intercepting by the client agent an HTTP request from the client; inserting by the client agent in the HTTP request the received cookie; and transmitting the modified HTTP request to the appliance. Corresponding systems are also described.,203,79,,
8627456,PC,"Citrix Systems, Inc.",44142394,Virtual Machine/Trusted Virtual Machine,12/14/2009,2009,9/2/2031,Methods and systems for preventing access to display graphics generated by a trusted virtual machine,The methods and systems provide for preventing a non-trusted virtual machine from reading the graphical output of a trusted virtual machine. A graphics manager receives a request from a trusted virtual machine to render graphical data using a graphics processing unit. The graphics manager assigns to the trusted virtual machine a secure section of a memory of the graphics processing unit. The graphics manager renders graphics from the trusted virtual machine graphical data to the secure section of the graphics processing unit memory. The graphics manager receives a request from a non-trusted virtual machine to read graphics rendered from the trusted virtual machine graphical data and stored in the secure section of the graphics processing unit memory and prevents the non-trusted virtual machine from reading the trusted virtual machine rendered graphics stored in the secure section of the graphics processing unit memory.,267,79,,
8971323,PC,"Citrix Systems, Inc.",48700740,Directed Towards/Other Topics|MAC Address,6/15/2012,2012,11/29/2032,Systems and methods for dynamic routing in a cluster,The present application is directed towards distributing multicast routing packets in a cluster environment utilizing link aggregation. In a cluster environment a plurality of devices may be connected to an upstream router or switch as a single virtual device having a plurality of connections as part of a link aggregation group allowing the router to easily and efficiently distribute packets among the connections. Multicast routing packets may be sent via only a single connection of the link aggregation group and accordingly a recipient device may distribute the multicast routing packet to other devices. To distinguish between a newly received routing packet from the router and an internally distributed routing packet from a first device the first device may insert a predetermined identifier into a MAC address of the routing packet.,198,79,,
8689213,PC,"Citrix Systems, Inc.",44142394,Computing Devices/Trusted Virtual Machine|Virtual Machine/Hypervisor|Virtual Machine/Trusted Virtual Machine,12/14/2009,2009,10/10/2031,Methods and systems for communicating between trusted and non-trusted virtual machines,The methods and systems described herein provide for establishing a secure communication channel between a non-trusted virtual machine and a trusted virtual machine in a computing device executing a hypervisor hosting the trusted virtual machine the non-trusted virtual machine and a third virtual machine. The method includes writing by a non-trusted virtual machine a first string of data to a region of memory of the computing device. The method also includes detecting by a trusted virtual machine the first string of data written to the region of memory. The method further includes establishing a communication channel between the trusted virtual machine and the non-trusted virtual machine by locking by the trusted virtual machine and responsive to the detection the region of memory for the duration of the communication to prevent a third virtual machine from accessing the region of memory.,178,78,,
8924592,PC,"Citrix Systems, Inc.",43569332,Other Topics,9/29/2009,2009,5/28/2032,Synchronization of server-side cookies with client-side cookies,Described are methods and systems for synchronizing client-side cookies with server-side cookies. A control that executes on a client computer within the context of a remote application receives control input that is generated by a remote control that executes on a server within the remote application. In response to receiving the control input the control generates a content request and forwards the content request to a synchronization agent that executes on the client computer. In many instances the content request is a request for a cookie. Upon receiving the content request the synchronization agent determines the type of content requested and responsively issues a synchronization request to a remote synchronization agent that executes on the server. The remote synchronization agent retrieves the requested content from the server and transmits the requested content to the synchronization agent. Upon receiving the requested content the synchronization agent returns the content to the control.,274,78,,
8572160,PC,"Citrix Systems, Inc.",39763771,Computing Devices/Other Topics|Transmitted Page,3/12/2007,2007,10/25/2029,Systems and methods for script injection,Systems and methods for script injection are shown and described. The method can include intercepting by a network appliance a request for a web page from a computing device transmitting by the network appliance the request for a web page to a web server and intercepting by the network appliance a response from the web server the response including at least a portion of the requested web page. The method can also include injecting by the network appliance a script having instructions that when executed by the computing device registers to be notified of the occurrence of a web page event thereby creating a modified response and transmitting the modified response to the computing device that requested the web page.,282,78,,
8572721,PC,"Citrix Systems, Inc.",39030770,Private Networks/Other Topics,8/3/2006,2006,11/14/2030,Methods and systems for routing packets in a vpn-client-to-vpn-client connection via an ssl/vpn network appliance,In a method and system for routing packets between clients a packet is received from a first client connected to a secure sockets layer virtual private network (an SSL/VPN) network appliance. An identification is made responsive to an inspection of the received packet of i) a type of connection required for transmission of the received packet to a destination address identified by the received packet and ii) a second client connected via an SSL/VPN connection to the SSL/VPN network appliance and associated with the identified destination address. A request is made for establishment by the second client of a connection of the identified type within the SSL/VPN connection. The received packet is transmitted to the second client via the established connection of the identified type.,213,78,,
8295617,PC,"Citrix Systems, Inc.",41228752,Other Topics,5/19/2008,2008,5/25/2031,Systems and methods for enhanced image encoding,An encoder executing on a first computing machine can receive image data generated by applications executing on the first computing machine. This encoder can divide at least a first image into at least two overlapping image sections according to a grid size and an overlap margin. The encoder computes an index for one overlapping image section and compares the index with indexes associated with stored image blocks. The results of the comparison can then be used by the encoder to identify at least one stored image that has an index which is substantially the same as the index computed for the at least one overlapping image section. The location of that stored image is associated with a pointer that is further associated with the overlapping image section. The resultant pointer is then transferred to a second computing machine in lieu of the overlapping image section.,215,78,,
8990573,PC,"Citrix Systems, Inc.",40677167,Other Topics,11/9/2007,2007,1/16/2032,System and method for using variable security tag location in network communications,A method of packet security management to ensure a secure connection from one network node to another. The method includes creating a security tag for each packet in a network session selecting one of a number of possible tag locations within the packet inserting the security tag at that location transmitting the tagged packets from a sending node to the receiving node authenticating the packets' security tags at the receiving node and dropping non-authenticated packets. The method also includes determining best possible tag locations when sending a packet and locating a security tag when receiving a packet.,278,78,,
8532437,PC,"Citrix Systems, Inc.",42357797,Other Topics,5/18/2009,2009,12/25/2030,Systems and methods for block recomposition for compound image compression,"A new approach is proposed that contemplates systems and methods to support block-based compression of a compound image by skipping ""don't care"" blocks in the layers of the image while neither introducing significant overhead nor requiring changes to the compression method used. The block-based compression approach first segments a compound image into multiple layers and then recomposes a new set of image layers possibly with new dimensions from only the non-""don't care"" blocks in the layers of the original image. The approach may later decompress the compressed image layers and restore the image by copying the decompressed blocks to their respective positions in the original image.",155,77,,
8613070,PC,"Citrix Systems, Inc.",49725950,Other Topics,10/12/2012,2012,8/9/2033,Single sign-on access in an orchestration framework for connected devices,Aspects described herein allow multiple devices to function as a coherent whole allowing each device to take on distinct functions that are complementary to one another. Aspects described herein also allow the devices function as a coherent whole when interconnected devices and their respective applications are configured to operate in various operation modes when management policies are employed to control the operation of the interconnected devices and their respective applications when transferring content between the interconnected devices and storing the content at those devices when obtaining access credentials for the interconnected devices that enable the devices to access enterprise resources when a policy agent applies management policies to control operation of and interaction between the interconnected devices and when the interconnected devices are used to access an enterprise application store.,106,76,,
8667146,PC,"Citrix Systems, Inc.",40548586,Other Topics,1/26/2008,2008,11/6/2031,Systems and methods for configuration driven rewrite of ssl vpn clientless sessions,The present disclosure provides solutions for an enterprise providing services to a variety of clients to enable the client to use the resources provided by the enterprise by modifying URLs received and the URLs from the responses from the servers to the client's requests before forwarding the requests and the responses to the intended destinations. An intermediary may identify an access profile for a clients' request to access a server via a clientless SSL VPN session. The intermediary may detect one or more URLs in content served by the server in response to the request using one or more regular expressions of the access profile. The intermediary may rewrite or modify responsive to detecting the one or more detected URLs in accordance with a URL transformation specified by one or more rewrite policies of the access profile. The response with modified URLs may be forwarded to the client.,266,76,,
8943575,PC,"Citrix Systems, Inc.",41257667,Other Topics,4/30/2008,2008,3/27/2032,Method and system for policy simulation,A method and system for managing access to resources on a secured network is disclosed. The method includes reading packet information in respective packets of a packet communication received at a security node and applying one of the plurality of access rules. The method also includes determining whether the security node is to block the respective packets and/or the packet communication from reaching a resource on the secured network based on the applied access rule. If the security node is to block the respective packets and/or the packet communication it is determined whether the applied access rule is a simulated access rule. Responsive to the applied access rule being a simulated access rule the respective packets and/or the packet communication are passed towards the resource on the secured network and a log event is generated that indicates the security node blocked the respective packets and/or the packet communication.,217,76,,
8281378,PC,"Citrix Systems, Inc.",39873554,Authentication Credentials,10/20/2006,2006,10/27/2030,"Methods and systems for completing, by a single sign-on component, an authentication process in a federated environment to a resource not supporting federation",A system for distributed authentication includes a client machine in a first domain in a federation that receives from a user a first set of authentication credentials. The system also includes an intermediate machine in a second domain in the federation a server also in the second domain a password management program executing on the server and a non-federated resource. The intermediate machine authenticates the user responsive to receiving the first set of authentication credentials and identifies a second set of authentication credentials. The server in the second domain authenticates the user responsive to the second set of authentication credentials. The password management program executing on the server retrieves a third set of authentication credentials associated with the user. The non-federated resource authenticates the user responsive to receiving from the password management program the third set of authentication credentials.,250,76,,
8938743,PC,"Citrix Systems, Inc.",40394279,Other Topics,12/21/2007,2007,5/19/2032,"Methods and systems for providing, to a first application executed by a first operating system, an interface for communicating with at least one application executed by a second operating system",A method for providing to a first application executed by a first operating system an interface for communicating with at least one application executed by a second operating system includes providing by a first interface object executed by the first operating system a mechanism for external communication with a first application executed by the first operating system. A second interface object executed by the second operating system provides a mechanism for external communication with a window handler executed by the second operating system. The first interface object receives an identification of a window displayed by the first operating system and generated by a second application executed by the second operating system and requests from the second interface object analysis of the identified window. The first interface object receives from the second interface object an identification of contact information displayed by the window resulting from the analysis by the window handler.,361,76,,
7791559,PC,"Citrix Systems, Inc.",39181995,Computing Devices/Computing Environment|Computing Devices/Viewer Computing|Remote Access/Viewer Computing|Remote Access/User Interface|Graphical User Interface/Display Screen|Graphical User Interface/Viewer Computing,9/14/2006,2006,6/6/2028,System and method for multiple display support in remote access software,A method of supporting multiple display configurations in a remote access environment the remote access environment having a host computing device in communication with a viewer computing device comprises: receiving from a host computing device by a viewer computing device having one or more viewer displays a list of rectangles each rectangle representing the boundaries of one of a plurality of host displays; presenting by the viewer computing device to an end-user of the viewer computing device a graphical user interface including means for selecting a configuration for displaying a window representing screen data of the plurality of host displays in the viewable area of the one or more displays of the viewer computing device; and displaying in the selected configuration by the viewer computing device the window representing the screen data of the one or more host displays. Corresponding systems are also described.,194,76,,
8255528,PC,"Citrix Systems, Inc.",44152669,Directed Towards/GSLB Virtual Server|Virtual Server/Spillover|Virtual Server/GSLB Virtual Server|Intermediary Devices/GSLB Virtual Server|Intermediary Devices/DNS,12/23/2009,2009,11/16/2030,Systems and methods for gslb spillover,The present invention is directed towards systems and methods for global server load balancing spillover. An intermediary device providing global server load balancing (GSLB) identifies a spillover threshold for a first GSLB virtual server of the intermediary device. The first GSLB virtual server resolving DNS requests to a remote site of a plurality of remote sites. The intermediary device monitors spillover related statistics of each of a plurality of services at the plurality of remote sites establishes a first spillover aggregate statistic for the plurality of services determines that the first spillover aggregate statistic exceeds the spillover threshold for the first GSLB virtual server and receives a DNS request and directing the DNS request to a second GSLB virtual server of the intermediary device responsive to the determination.,231,75,,
8255551,PC,Bytemobile Inc,42666360,Data Packets/Data Streams,7/10/2007,2007,7/9/2028,Adaptive bitrate management for streaming media over packet networks,A method including providing pseudo-streaming media data to a terminal; receiving a transport control protocol (TCP) acknowledgement from the terminal; estimating one or more network conditions of a network based at least in part on the TCP acknowledgement; determining an optimal session bitrate based on the estimated one or more network conditions; and providing pseudo-streaming media data to the terminal based on the optimal session bitrate.,154,75,,
8543726,PC,"Citrix Systems, Inc.",49181589,Other Topics,4/8/2005,2005,9/24/2029,Web relay,A method system and apparatus are presented in which a web relay/client proxy module is downloaded to a client browser from a Network Security Appliance (NSA). The web relay module intercepts requests from the browser for network resources and redefines the addresses within those requests so that the NSA can access protected resources on behalf of the client.,240,75,,
8638336,PC,"Citrix Systems, Inc.",40291142,Remote Machine/Local Computing Machine|Remote Machine/Graphical Data|Remote Machine/Remote Application|Remote Machine/Response to a Determination|Local Computing/Remote Computing Machine,10/20/2007,2007,6/12/2031,Methods and systems for remoting three dimensional graphical data,Systems and methods for remotely displaying three dimensional graphical data include a local computing machine that communicates with a remote computing machine via a connection. An application executing on the local computing machine generates three dimensional graphics commands which are intercepted and transferred to either the remote computing machine or a computing element on the local computing machine. Determining where to transfer the three dimensional graphics commands requires: an analysis of the application to obtain application specific characteristics; an analysis of the remote computing machine to obtain the capabilities of the remote computing machine; an analysis of the local computing machine to obtain the capabilities of the local computing machine; and an analysis of the connection to determine characteristics of the connection. A determination is made in response to obtaining the application characteristics the remote computing machine capabilities the local computing machine capabilities and the connection characteristics.,314,75,,
9009327,PC,"Citrix Systems, Inc.",40339279,IP Address/SSL VPN Session,8/3/2007,2007,1/9/2032,Systems and methods for providing iip address stickiness in an ssl vpn session failover environment,The SSL VPN session failover solution of the appliance and/or client agent described herein provides an environment for handling IP address assignment and end point re-authorization upon failover. The appliances may be deployed to provide a session failover environment in which a second appliance is a backup to a first appliance when a failover condition is detected such as failure in operation of the first appliance. The backup appliance takes over responsibility for SSL VPN sessions provided by the first appliance. In the failover environment the first appliance propagates SSL VPN session information including user IP address assignment and end point authorization information to the backup appliance. The backup appliance maintains this information. Upon detection of failover of the first appliance the backup appliance activates the transferred SSL VPN session and maintains the user assigned IP addresses. The backup appliance may also re-authorize the client for the transferred SSL VPN session.,220,75,,
8745266,PC,"Citrix Systems, Inc.",47391794,Intermediary Devices/Intermediary Receives a Request from a Client|MAC Address,6/30/2011,2011,9/6/2031,Transparent layer 2 redirection of request to single sign in service based on applying policy to content of request,The present solution is directed to providing transparently and seamlessly to any client or server layer 2 redirection of client requests to any services of a device deployed in parallel to an intermediary device An intermediary device deployed between the client and the server may intercept a client request and check if the request is to be processed by a service provided by one of the devices deployed in parallel with the intermediary device. The service may be any type and form of service or feature for processing checking or modifying the request including a firewall a cache server a encryption/decryption engine a security device an authentication device an authorization device or any other type and form of service or device described herein. The intermediary device may select the machine to process the request and use layer 2 redirection to the machine. The intermediary device may change a Media Access Control (MAC) address of a destination of the request to a MAC address of the selected machine. Once the selected machine processes the request the intermediary device may receive from this machine a response to processing the request. The intermediary device may then continue processing the request of the client responsive to the response from the machine or in response to identifying that the response to the request is from that particular selected machine. The forwarding to and processing by the parallel deployed machine may be performed seamlessly and transparently to the server and/or client.,227,74,,
8850070,PC,"Citrix Systems, Inc.",41064222,Directed Towards/Other Topics,3/7/2008,2008,11/22/2030,Systems and methods for content injection,The present solution is directed towards a policy-based intermediary that dynamically and flexibly injects content in responses between a client and a server based on one or more policies. The present solution addresses the challenges of injecting content in a client-server transaction. The intermediary determines when and what content to inject into a response of a client-server transaction based on a request and/or response policy. The injected content may include timestamp and/or variable tracking of different events in a client-server transaction. For example when an intermediary appliance is deployed in a system to accelerate system performance and improve user experience the appliance may inject content based on policy to monitor the acceleration performance of the deployed appliance.,242,74,,
8325896,PC,"Citrix Systems, Inc.",42172087,Other Topics,11/20/2008,2008,8/5/2031,System and method for dynamic audio conference call configuration and management,A new approach is proposed that contemplates audio conference systems and methods to expand the capacity a conference call by utilizing both a mixing engine that enables a first group participants to be able to both listen to and speak at the conference call and a broadcast engine that broadcasts the conference call to a second group of participants who are only interested in listening to but not speaking at the conference call. During the conference call participants at the mixing engine and the broadcast engine can be dynamically adjusted.,168,74,,
8516539,PC,"Citrix Systems, Inc.",40670880,Security Gateway/Access Gateway,11/9/2007,2007,2/24/2030,System and method for inferring access policies from access event records,A method of security gateway policy definition to quickly infer a new policy based on event data extracted and analyzed using business logic and workflow from a gateway event log or behavior log. The method includes reading the components of a log record translating the components into acceptable policy attributes creating a new policy based on those attributes and presenting the new policy to a system administrator for editing and approval.,222,74,,
8275871,PC,"Citrix Systems, Inc.",39760770,Virtual Server/Spillover,8/22/2006,2006,8/7/2027,Systems and methods for providing dynamic spillover of virtual servers based on bandwidth,The present solution provides a spillover management technique for virtual servers of an appliance based on bandwidth. A network administrator may configure a bandwidth threshold for one or more virtual servers such as virtual servers providing acceleration or load balancing for one or more services. The bandwidth threshold may be specified as a number of bytes transferred via the virtual server. The bandwidth threshold may also be specified as a round trip time or derivative thereof. A user may specify the bandwidth threshold via a configuration interface. Otherwise the appliance may establish the bandwidth threshold. The appliance monitors the bandwidth used by a first virtual server. In response to detecting the bandwidth reaching or exceeding the bandwidth threshold the appliance dynamically directs client requests to a second virtual server.,116,74,,
8312308,PC,"Citrix Systems, Inc.",43355316,Directed Towards/Multi-core|Directed Towards/SSL,6/22/2009,2009,12/24/2030,"Systems and methods for ssl session cloning—transfer and regeneration of ssl security parameters across cores, homogenous system or heterogeneous systems",The present invention is directed towards systems and methods for managing SSL session persistence and reuse in a multi-core system. A first core may indicate that an SSL session established by the first core is non-resumable. Responsive to the indication the core may set an indicator at a location in memory accessible by each core of the multi-core system the indicator indicating that the SSL session is non-resumable. A second core of the multi-core system may receive a request to reuse the SSL session. The request may include a session identifier of the SSL session. In addition the session identifier may identify the first core as an establisher of the SSL session. The second core can identify from encoding of the session identifier whether the second core is not the establisher of the SSL session. Responsive to the identification the second core may determine whether to resume the SSL session.,122,74,,
8438626,PC,"Citrix Systems, Inc.",44153114,Directed Towards/Multi-core|Directed Towards/User Session|Intermediary Devices/Multi-core|Intermediary Devices/User Session,12/23/2009,2009,7/3/2031,Systems and methods for processing application firewall session information on owner core in multiple core system,The present invention is directed towards systems and methods for sharing session data among cores in a multi-core system. A first application firewall module executes on a core of a multi-core intermediary device which establishes a user session. The first application firewall module stores application firewall session data to memory accessible by the first core. A second application firewall module executes on a second core of the multi-core intermediary device. The second application firewall module receives a request from the user via the established user session. The request includes a session identifier identifying that the user session was established by the first core. The second application firewall module determines to perform one or more security checks on the request and communicates a portion of the request the first core. The second application firewall module receives and processes the security check results and instructions from the first core.,180,74,,
8707457,PC,"Citrix Systems, Inc.",44902868,Other Topics,5/9/2010,2010,2/5/2032,Methods and systems for forcing an application to store data in a secure storage location,The present application is directed to methods and systems for redirecting write requests issued by trusted applications to a secure storage. Upon redirecting the write requests the data included in those requests can be stored in the secure storage area of a client computer. In some embodiments the methods and systems can include determining whether an application issuing the request is a trusted application that requires data to be stored in a secure storage repository. Upon making this determination a filter driver can identify a secure storage area on a client computer and can redirect the write request to this secure storage. In other embodiments the filter driver may deny requests of trusted applications to write to unsecure storage areas.,297,74,,
8788570,PC,"Citrix Systems, Inc.",42537639,Data Packets/Packet Engine|IP Address/Packet Engine|IP Address/Source IP,6/22/2009,2009,2/7/2031,Systems and methods for retaining source ip in a load balancing multi-core environment,Described herein is a method and system for distributing requests and responses across a multi-core system. Each core executes a packet engine that further processes data packets allocated to that core. A flow distributor executing within the multi-core system forwards client requests to a packet engine on a core that is selected based on a value generated when a hash is applied to a tuple comprising a client IP address a client port a server IP address and a server port identified in the request. The packet engine maintains the client IP address selects a first port of the core and determines whether a hash of a tuple comprising those values identifies the selected core. A modification is then made to the client request so that the client request includes a tuple comprising the client IP address the server IP address the first port and the server port.,295,74,,
8844040,PC,"Citrix Systems, Inc.",42738799,Virtual Server/Authentication Virtual Server,3/20/2009,2009,7/20/2032,Systems and methods for using end point auditing in connection with traffic management,The present invention provides a system and method of managing traffic traversing an intermediary based on a result of end point auditing. An authentication virtual server of an intermediary may determine a result of an end point analysis scan of a client. Responsive to the determination the traffic management virtual server can obtain the result from the authentication virtual server. Further the traffic management virtual server may apply the result in one or more traffic management policies to manage network traffic of a connection of the client traversing the intermediary. In some embodiments the authentication virtual server may receive one or more expressions evaluated by the client. The one or more expressions identifies one or more attributes of the client. The traffic management virtual server can also determine a type of compression or encryption for the connection based on applying the one or more traffic management policies using the result.,152,74,,
8289975,PC,"Citrix Systems, Inc.",43085959,Directed Towards/Multi-core,6/22/2009,2009,2/27/2031,Systems and methods for handling a multi-connection protocol between a client and server traversing a multi-core system,The present application is directed towards systems and methods for handling a multi-connection protocol communication between a client and a server traversing a multi-core system. The multi-connection protocol comprises a first connection and a second connection which may be used respectively for control communications and data communications. Because different cores in the multi-core system may handle the first connection and second connection the present invention provides systems and methods for efficiently coordinating protocol management between a plurality of cores.,263,73,,
7734777,PC,"Citrix Systems, Inc.",40877313,Remote Access/User Application Requests|Server Farm,10/5/2007,2007,9/23/2028,Systems and methods for monitoring components of a remote access server farm,The present application is related methods to monitor a state of one or more components of a remote access server farm by an intermediary to distinguish between operating and functional components and improve farm availability for user application requests. The intermediary may be deployed between a client and the remote access server farm and forwards client requests to functional components of the remote access server farm.,246,73,,
8458783,PC,"Citrix Systems, Inc.",40589514,Security Gateway/Client Application|Security Gateway/Security Gateway Receives Messages,6/30/2004,2004,9/26/2025,Using application gateways to protect unauthorized transmission of confidential data via web applications,A security gateway receives messages transmitted between a server and a client device on a network and parses the messages into a plurality of data objects such as strings and name-value pairs. The data objects may represent user personal identification information such as user name social security number credit card number patient code driver's license number and other personal identification information. The security gateway uses rules to recognize data objects and validate the data objects to determine whether the recognized data objects are appropriately included within the context. The security gateway may also perform an action on the data objects. Data objects that are not appropriately included in the context may be transformed suppressed or disallowed.,171,73,,
8769660,PC,"Citrix Systems, Inc.",40530860,Other Topics,1/26/2008,2008,7/18/2031,Systems and methods for proxying cookies for ssl vpn clientless sessions,The present application enables the enterprise to configure various policies to address various subsets of the traffic based on various information relating the client the server or the details and nature of the interactions between the client and the server. An intermediary deployed between clients and servers may establish an SSL VPN session between a client and a server. The intermediary may receiving a response from a server to a request of a client via the clientless SSL VPN session. The response may comprise one or more cookies. The intermediary may identify an access profile for the clientless SSL VPN session. The access profile may identify one or more policies for proxying cookies. The intermediary may determine responsive to the one or more policies of the access profile whether to proxy or bypass proxying for the client the one or more cookies.,187,73,,
7877369,PC,"Citrix Systems, Inc.",40589209,Private Networks/Multiple Devices|Private Networks/Local Area Network,11/2/2007,2007,3/25/2029,Hosted searching of private local area network information,Hosted searching of different local area network (LAN) information is described. The apparatus for hosted searching of different private LAN information includes a LAN crawler to automatically and repeatedly crawl a LAN having multiple devices and a hosted on-demand search system including a set of one or more centralized-search servers to create and synchronize a separate private search database for each of the private LANs based on received reports from of different instances of the LAN crawler deployed on the multiple private LANs at least some of which are operated by different entities.,482,73,,
8744238,PC,"Citrix Systems, Inc.",40083342,Other Topics,8/22/2007,2007,11/16/2031,Method and apparatus for automated content marking,Methods and apparatus for automatic content marking. In one embodiment display information is recorded a change in the computing environment is detected and the recorded display information is marked in response to the detected change. A human-readable description of the change associated with the mark may also be stored. A change in the computing environment may be detected by detecting an event that reflects a change in the computing environment.,132,73,M?,textually annotating recorded content. Relates to xray on video?
8601556,PC,"Citrix Systems, Inc.",43355318,Directed Towards/Multi-core|Directed Towards/SSL,6/22/2009,2009,10/3/2032,Systems and methods for handling ssl session not reusable across multiple cores,The present invention is directed towards systems and methods for managing SSL session persistence and reuse in a multi-core system. A first core may indicate that an SSL session established by the first core is non-resumable. Responsive to the indication the core may set an indicator at a location in memory accessible by each core of the multi-core system the indicator indicating that the SSL session is non-resumable. A second core of the multi-core system may receive a request to reuse the SSL session. The request may include a session identifier of the SSL session. In addition the session identifier may identify the first core as an establisher of the SSL session. The second core can identify from encoding of the session identifier whether the second core is not the establisher of the SSL session. Responsive to the identification the second core may determine whether to resume the SSL session.,131,73,,
8223943,PC,"Citrix Systems, Inc.",42321058,Computing Devices/Viewer Computing|Computing Devices/Audio Stream,4/14/2009,2009,4/17/2031,Systems and methods for computer and voice conference audio transmission during conference call via pstn phone,A new approach is proposed that contemplates systems and methods to support canceling audio streams leaked from a speaker to a PSTN so that only the audio stream of a presenter or viewer speaking at a conference call is transmitted. Here the audio streams being canceled includes the audio stream of an application being run or a material being presented online during a web conference. The voice audio stream of a presenter or viewer is then transmitted in addition to the computer audio stream clean from any other audio stream of echoes or feedbacks captured by the hosting device during the conference call.,144,73,,
8866701,PC,"Citrix Systems, Inc.",46753973,Virtual Machine/Computing Environment|Virtual Machine/Redirection|Remote Machine/Local Computing Machine|Remote Machine/Computing Environment|Remote Machine/Remote Application|Remote Machine/Remote File|Local Computing/Remote Computing Machine|Local Computing/Computing Environment|Local Computing/Remote File,3/3/2011,2011,7/17/2032,Transparent user interface integration between local and remote computing environments,Methods and systems for transparent user interface integration between remote (published) applications and their local counterparts are described providing a seamless unified user experience and allowing integration of a start menu dock taskbar desktop shortcuts windows window and application switching system tray elements client-to-host and host-to-client file type association URL redirection browser cookie redirection token redirection status message interception and redirection and other elements. These methods and systems further enhance theme-integration between a client and remote desktop or virtual machine by remoting all UI elements to a recipient for generation including text controls buttons progress bars radio buttons list boxes or other elements; presenting them with the receiver's product and OS-specific UI; and returning status back to the sender. This may achieve a more unified and transparent UI integration. Furthermore international text may be correctly received in cross-language environments or translated into the language of the presenting environment.,118,73,,
8453225,PC,"Citrix Systems, Inc.",44153108,Directed Towards/Various Embodiments|Intermediary Devices/Network Traffic,12/23/2009,2009,6/1/2031,Systems and methods for intercepting and automatically filling in forms by the appliance for single-sign on,The present invention is directed towards systems and methods for form-based single sign-on by a user desiring access to one or more protected resources e.g. protected web pages protected web-served applications etc. In various embodiments a single sign-on (SSO) module is in operation on an intermediary device which is disposed in a network to manage internet traffic between a plurality of clients and a plurality of servers. The intermediary device can identify an authentication response from a server and forward the authentication response to the SSO module. The SSO module can complete a login form in the authentication response with a client's authentication data return the completed login form to the server and forward cookies associated with the authentication response to the client. In various embodiments multiple login forms can be completed transparently to the client by the SSO module on a client's behalf and reduce time expended by a client in obtaining access to protected resources.,203,73,,
8140618,PC,"Citrix Systems, Inc.",38626561,Computing Devices/Other Topics,5/4/2006,2006,6/23/2029,Methods and systems for bandwidth adaptive n-to-n communication in a distributed system,Methods and systems for bandwidth adaptive computing device to computing device communication are described. Bandwidth adaptive communication includes receiving a communication from a first participant storing the payload data of the communication in a channel memory element associated with the first participant and transmitting the payload data to a second participant.,431,72,,
8315362,PC,"Citrix Systems, Inc.",40320407,Other Topics,8/22/2007,2007,1/19/2031,Systems and methods for voicemail avoidance,Systems and methods for voicemail avoidance are shown and described. The method can include issuing an invitation to an audio communications session to a first one of the end-points receiving in response to the invitation to a first one the end-points an indication that the first end-point is available for the audio communication session and that the invitation to the first one of the end-points did not terminate with a voicemail service associated with the first one of the end-points and issuing in response to the indication an invitation to join the audio communications session to a second one of the end-points.,177,72,,
8458331,PC,"Citrix Systems, Inc.",41692047,Other Topics,10/8/2008,2008,11/19/2030,Systems and methods for connection management for asynchronous messaging over http,Described are methods and systems for managing the connections between a client an intermediary appliance and a server so that asynchronous messages can be transmitted over HTTP from the server to a client. When a connection is established between a client and an intermediary and the intermediary and a server to establish a logical client-server connection that logical client-server connection is labeled and not maintained while the connection between the client and the intermediary is maintained. Messages generated by the server and destined for the client are transmitted to the intermediary along with the connection label. The intermediary can then use the connection label to determine which client should receive the message.,235,72,,
8935316,PC,"Citrix Systems, Inc.",41697463,Computing Devices/Data Streams|Local Computing/Local Agent|Real Time/Other Topics,1/14/2005,2005,4/24/2024,Methods and systems for in-session playback on a local machine of remotely-stored and real time presentation layer protocol data,Methods and systems for reviewing previously recorded and real-time user session data of presentation layer protocol data. Methods describing a shadowing tool receiving a streaming real-time presentation layer protocol data stream from a shadowing agent service executing on a server; receiving a recorded presentation layer protocol data stream from the shadowing agent service; and combining the streaming real-time presentation layer protocol data stream and the recorded presentation layer protocol data stream producing a single output stream. Systems describing a shadowing tool executing on a computing device receiving a streaming real-time presentation layer protocol data stream from a shadowing agent service executing on a server; the shadowing tool receiving a recorded presentation layer protocol data stream from the shadowing agent service; and the shadowing tool combining the streaming real-time presentation layer protocol data stream and the recorded presentation layer protocol data stream producing a single output stream.,242,72,,
8782755,PC,"Citrix Systems, Inc.",42738799,Virtual Server/Authentication Virtual Server,3/20/2009,2009,9/21/2030,Systems and methods for selecting an authentication virtual server from a plurality of virtual servers,The present invention provides a system and method for dynamically selecting an authentication virtual server from a plurality of authentication virtual servers. A traffic management virtual server may determine from a request received from a client to access content of a server that the client has not been authenticated. The traffic management virtual server can identify a policy for selecting an authentication virtual server to provide authentication of the client. Responsive to the identification the traffic management virtual server can select via the policy an authentication virtual server of the plurality of authentication virtual servers to authenticate the client. Responsive to the request the traffic management virtual server may transmit a response to the client The response includes an instruction to redirect to the selected authentication virtual server.,202,72,,
8261340,PC,"Citrix Systems, Inc.",42197614,Security Gateway/Security Gateway Receives Messages|Security Gateway/Requests Rather than Malicious Attacks the Security Gateway,2/18/2004,2004,9/4/2024,Using statistical analysis to generate exception rules that allow legitimate messages to pass through application proxies and gateways,A security gateway receives messages rejected by a message filter based on a set of rules. The security gateway also receives attributes of the rejected messages that triggered the rules. The security gateway maintains frequencies with which the messages with a particular attribute were rejected by the rules. The security gateway finds rejected messages or attributes having a high frequency of occurrence. Since messages or attributes having a high frequency of occurrences are more likely to represent legitimate requests rather than malicious attacks the security gateway generates exception rules which would allow messages that have similar attributes to pass through the gateway.,188,72,,
8484287,PC,"Citrix Systems, Inc.",44630328,Directed Towards/Multi-core|Directed Towards/User Session|Intermediary Devices/Multi-core|Intermediary Devices/User Session|Intermediary Devices/Intermediary Receives a Request from a Client,8/5/2010,2010,7/20/2031,Systems and methods for cookie proxy jar management across cores in a multi-core system,The present solution is directed towards systems and methods for managing cookies by a multi-core device. The device is intermediary to a client and one or more servers. A first core of a multi-core device receives a response from a server to a request of the client through a user session. The response comprises a cookie. The first core removes the cookie from the response and stores the cookie in a corresponding storage for the session. The first core forwards the response without the cookie to the client. A second core then receives via a session a second request from the client. The second core determines the identification of the first core as owner of the session from the second request. The second core then communicates to the first core a third request for cookie information for the session.,159,72,,
7577686,PC,"Citrix Systems, Inc.",40942733,Virtual Machine/Guest,2/10/2006,2006,9/27/2027,Dynamic table configuration in a virtual machine,A system method and software product provides for managing resources in a virtual machine. The system comprises a guest memory and a processor. The guest memory stores a file exception table and a file inclusion table. The file exception table indicates at least one first name of a host resource. The file exclusion table indicates at least one second name of a guest resource. The processor receives a resource query processes the resource query to determine a host weight value using a weighting operation and the file exception table. The processor also processes the resource query to determine a guest weight value using the weighting operation and the file inclusion table. Additionally the processor compares the host weight value to the guest weight value to determine whether the resource query is associated with the host resource or the guest resource.,204,71,,
8244852,PC,"Citrix Systems, Inc.",39763782,Compression History,3/12/2007,2007,3/12/2027,Systems and methods for identifying long matches of data in a compression history,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,206,71,,
8812714,PC,"Citrix Systems, Inc.",41794678,Directed Towards/Other Topics,11/12/2008,2008,11/12/2029,Systems and methods for application fluency policies,The present solution is directed towards embodiments of a feature generally referred to as Application Templates or AppTemplates which allows a administrator of an intermediary such as an appliance to configure and manage settings per application on a basis of a subset of application network traffic. Once configured the application settings can be exported in a file called the Application Template and imported into other intermediary systems. The Application Template includes the settings for the application as configured via the intermediary.,148,71,,
8954505,PC,"Citrix Systems, Inc.",42315411,Computing Devices/Viewer Computing|Computing Devices/Audio Stream,4/14/2009,2009,4/14/2029,Systems and methods for computer and voice conference audio transmission during conference call via voip device,A new approach is proposed that contemplates systems and methods to support canceling audio streams leaked from a speaker to a microphone so that a clean audio stream of a presenter or viewer speaking at a conference call is transmitted. Here the audio streams being canceled includes the computer audio stream of an application being run or a material being presented online during a web conference and/or the audio stream received from the rest of the group of participants at the conference call. The computer audio stream is then transmitted in addition to the presenter or viewer audio stream and separate from any other audio stream captured by the hosting device during the conference call.,168,71,,
8621061,PC,Bytemobile Inc,39769194,Data Packets/Data Streams,7/10/2007,2007,7/9/2028,Adaptive bitrate management for streaming media over packet networks,A method including receiving a receiver report from a terminal; estimating one or more network conditions of a media network based at least in part on the receiver report; determining an optimal session bitrate based on the estimated one or more network conditions; and providing media data to the terminal based on the optimal session bitrate.,110,70,,
8667207,PC,"Citrix Systems, Inc.",43447788,Virtual Machine/Computing Environment,9/30/2009,2009,4/29/2031,Dynamic reallocation of physical memory responsive to virtual machine events,Described are methods and systems for dynamically reallocating memory amongst virtual machines executing within a virtualization environment. A computer can execute a virtualization environment that can include one or more virtual machines and that can include a memory manager. The memory manager can dynamically reallocate memory by identifying a maximum and minimum memory value for each virtual machine determining a target memory value for each virtual machine using the maximum and minimum memory value and identifying one or more virtual machines that have an actual memory usage value that is less than the target memory value calculated for those virtual machines. To re-allocate the memory the memory manager can allocate additional memory to the identified virtual machines by inflating a balloon driver then de-allocate the additional memory and reallocate the de-allocated additional memory to other virtual machines within the virtualization environment.,242,70,,
8285704,PC,"Citrix Systems, Inc.",40589226,Private Networks/Multiple Devices|Private Networks/Local Area Network,11/2/2007,2007,11/2/2027,Hosted searching of private local area network information with support for add-on application,Hosted searching of private LAN information is described. The apparatus includes a LAN crawler to automatically and repeatedly crawl a LAN having multiple devices using a discovery module to discover the devices a generic-probing module to attempt to collect the descriptive information according to a first set of probing requirements and multiple specific-probing plug-ins each of which attempt to collect the descriptive information according to a second set of specific probing requirements. In another embodiment the apparatus also includes a hosted on-demand search system including a centralized-search server to create and synchronize a private search database. The centralized-search server includes an application interface to receive a request to access the private search database from a third-party add-on application to provide the accessed information to the third-party add-on application and to receive from the third-party add-on application an application rendered component to be displayed on the user interface.,339,70,,
8886925,PC,"Citrix Systems, Inc.",49779221,Mobile Devices/Enterprise Applications|Mobile Devices/Secure Container,10/11/2011,2011,1/16/2033,Protecting enterprise data through policy-based encryption of message attachments,A system is disclosed that includes components and features for enabling enterprise users to securely access enterprise resources (documents data application servers etc.) using their mobile devices. An enterprise can use some or all components of the system to for example securely but flexibly implement a BYOD (bring your own device) policy in which users can run both personal applications and secure enterprise applications on their mobile devices. The system may for example implement policies for controlling mobile device accesses to enterprise resources based on device attributes (e.g. what mobile applications are installed) user attributes (e.g. the user's position or department) behavioral attributes and other criteria. Client-side code installed on the mobile devices may further enhance security by for example creating a secure container for locally storing enterprise data creating a secure execution environment for running enterprise applications and/or creating secure application tunnels for communicating with the enterprise system.,123,70,,
8073881,PC,"Citrix Systems, Inc.",39797367,Other Topics,6/1/2004,2004,4/26/2025,Methods and apparatus facilitating access to storage among multiple computers,Multiple computers in a cluster maintain respective sets of identifiers of neighbor computers in the cluster for each of multiple named resource. A combination of the respective sets of identifiers define a respective tree formed by the respective sets of identifiers for a respective named resource in the set of named resources. Upon origination and detection of a request at a given computer in the cluster a given computer forwards the request from the given computer over a network to successive computers in the hierarchical tree leading to the computers relevant in handling the request based on use of identifiers of neighbor computers. Thus a combination of identifiers of neighbor computers identify potential paths to related computers in the tree.,401,69,,
8869235,PC,"Citrix Systems, Inc.",49779221,Mobile Devices/Enterprise Applications|Mobile Devices/Secure Container,10/11/2011,2011,10/10/2032,Secure mobile browser for protecting enterprise data,A system is disclosed that includes components and features for enabling enterprise users to securely access enterprise resources (documents data application servers etc.) using their mobile devices. An enterprise can use some or all components of the system to for example securely but flexibly implement a BYOD (bring your own device) policy in which users can run both personal applications and secure enterprise applications on their mobile devices. The system may for example implement policies for controlling mobile device accesses to enterprise resources based on device attributes (e.g. what mobile applications are installed) user attributes (e.g. the user's position or department) behavioral attributes and other criteria. Client-side code installed on the mobile devices may further enhance security by for example creating a secure container for locally storing enterprise data creating a secure execution environment for running enterprise applications and/or creating secure application tunnels for communicating with the enterprise system.,222,69,,
8181019,PC,"Citrix Systems, Inc.",42799588,Directed Towards/Multi-core,6/22/2009,2009,7/3/2030,Systems and methods for managing crls for a multi-core system,The present invention is directed towards systems and methods for maintaining Certificate Revocation Lists (CRLs) for client access in a multi-core system. A first core may generate a secondary CRL corresponding to a master CRL maintained by the first core. The CRLs may identify certificates to revoke. The first core can store the secondary CRL to a memory element accessible by the cores. A second core may receive a request to validate a certificate. The second core can provisionally determine via access to the secondary CRL whether the certificate is revoked. The second core may also determine not to revoke the certificate. Responsive to the determination the second core may request the first core to validate the certificate. The first core can determine whether to revoke the certificate based on the master CRL. The first core may send a message to the second core based on the determination.,143,69,,
8638795,PC,"Citrix Systems, Inc.",44584645,Directed Towards/Network Packets,8/12/2010,2010,11/10/2030,Systems and methods for quality of service of encrypted network traffic,The present invention is directed towards systems and methods for providing classification of an encrypted network packet for performing QoS and acceleration techniques. Encrypted packets may be classified by a first classifier at a first portion of a network stack of a device as corresponding to a first predetermined application and an application identifier may be included with the packet. In some embodiments the packets may be decrypted in an order dependent on a first classification of the encrypted network packet. After decryption packets may be reclassified as corresponding to a second predetermined application by a second classifier operating at a second portion of a network stack of the device above the first portion. Thus network performance may be enhanced and optimized by providing QoS and acceleration engines with packet- or data-specific information corresponding to the application while avoiding inefficiencies due to a lack of prioritization of decryption.,177,69,,
8353012,PC,Citrix Systems,42268099,User Profile,2/26/2008,2008,8/12/2031,Internet-based group website technology for content management and exchange (system and methods),System and Methods for implementing a Internet-Based Group Cloud Management System (GCMS) comprised by several Cloud Management System sites (CMS sites) where providing institutions means for: A) The Creation of the Educational Group comprised by: A1) Community CMS sites for Campuses and/or Groups of Users A2) Personal CMS Sites for each Faculty Staff Student and Alumnus A3) Project CMS sites for each Project Team. B) Communication within the Educational Group: B1) Among CMS Sites B2) to e-mail and text-messaging devices. The CMS sites are reachable by their own domain names or sub-domain from the GCMS and by any search engine. Each CMS site is multi-user and includes its own security system user-defined and predefined pages for among others Professional Profile Web Apps Virtual Desktop/Apps and Web/Cloud Services. Each CMS site is connected to the GCMS allowing the Exchange of Information among CMS sites within the GCMS and among GCMS sites.,279,69,,
8671213,PC,"Citrix Systems, Inc.",48655649,Other Topics,3/14/2002,2002,3/30/2022,Methods and apparatus for generating graphical and media displays at a client,The invention generally relates to generating a display having graphical and/or media components at a client. In one aspect a method for generating a graphical display at a client includes transmitting output from an application program executing on a server to the client identifying a non-textual element within the application output retrieving a compressed data format associated with the non-textual element and transmitting to the client the compressed data format in place of the non-textual element. In another aspect a method for generating a media presentation at a client includes transmitting output from an application program executing on a server to the client identifying a media stream within the application output intercepting an original compressed data set representing at least a portion of the media stream before processing by the application program and transmitting the original compressed data set to the client.,108,68,,
8922617,PC,"Citrix Systems, Inc.",46316177,Other Topics,12/23/2010,2010,6/2/2032,"Systems, methods, and devices for time-shifting playback of a live online meeting",In various embodiments an attendee of a live online meeting selects screen data from an earlier point in time in the online meeting for playback while the meeting is still ongoing. Automatically generated image thumbnails of the screen data for the online meeting may be employed to navigate to the earlier point in time. Attendees may annotate screenshots associated with the thumbnails and a summary document may be generated that includes the screenshots and the annotations.,391,68,,
8977684,PC,"Citrix Systems, Inc.",42315411,Computing Devices/Viewer Computing|Computing Devices/Audio Stream,4/14/2009,2009,11/5/2029,Systems and methods for computer and voice conference audio transmission during conference call via voip device,A new approach is proposed that contemplates systems and methods to support canceling audio streams leaked from a speaker to a microphone so that a clean audio stream of a presenter or viewer speaking at a conference call is transmitted. Here the audio streams being canceled includes the computer audio stream of an application being run or a material being presented online during a web conference and/or the audio stream received from the rest of the group of participants at the conference call. The computer audio stream is then transmitted in addition to the presenter or viewer audio stream and separate from any other audio stream captured by the hosting device during the conference call.,369,68,,
8463887,PC,"Citrix Systems, Inc.",44152688,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Intermediary Devices/Multi-core|Intermediary Devices/Intermediary Receives a Request from a Client,12/23/2009,2009,6/11/2031,Systems and methods for server surge protection in a multi-core system,The present application is directed towards systems and methods for providing connection surge protection to one or more servers by an intermediary multi-core system. A packet processing engine of a multi-core device deployed as an intermediary between a plurality of clients and one or more servers determines an estimated number of total pending requests received by all packet processing engines based on a value of a local counter of received requests the total number of pending requests received by all other packet processing engines at a last predetermined interval and a rate of change of the total number of pending requests received by all other packet processing engines multiplied by the time since the last predetermined interval. The packet processing engine applies a surge protection policy to received pending requests responsive to the determined estimated number of total pending requests.,318,68,,
8774043,PC,"Citrix Systems, Inc.",47293142,Data Packets/Quality of Service|Mobile Devices/Services Based on One|Mobile Devices/Transmitted Data|Mobile Devices/Data Type,6/8/2011,2011,12/28/2032,Methods and apparatus for using a layered gear to analyze and manage real-time network quality of service transmission for mobile devices on public networks,Methods and apparatus for providing layered gear mechanism to analyze network loss and latency conditions includes bundling data into data packets of varying depths at a source with data packets of each depth belonging to a particular data type. The data packets of varying depths are transmitted in layers over a network to a destination. Information for the transmitted data packets for each layer is collected constantly and analyzed as the data progresses along the network to identify corresponding network transmission characteristics. The transmission of subsequent data packets for anyone of the layers is adjusted based on the network transmission characteristics. The adjusting is repeated one or more times based on the analyzed information for the transmitted data packets. The transition metrics for each layer is utilized for relative analysis of transmission metrics across the layers to set the adjusting.,169,68,,
8161472,PC,"Citrix Systems, Inc.",39182358,Client Node/Network Communication|Client Node/Portions of the Page|Client Node/Transmitting the same Data to more than One|Transmitted Page,11/2/2000,2000,3/9/2021,Methods and apparatus for incorporating a partial page on a client,The invention relates to a method and apparatus for regenerating portions of the page that have changed and transmitting only those portions to the client for display. Executing only the necessary parts of the page generation code and transmitting only changes to the client improves the efficiency of using the resources of the network communication channel the client node and the server node. Performing these operations only when required when the data has changed improves the efficiency of use even further. The invention also takes advantage of any portions of the page that are already on the client by reusing them and thus eliminates the need to regenerate or transmit those reusable portions. In one aspect the invention relates to a method for incorporating a partial page into a transmitted page displayed on a client. The method includes displaying the transmitted page on a client receiving by the client a regenerated portion of the transmitted page from a server and incorporating by the client the regenerated portion into the transmitted page displayed on the client. In one embodiment the method includes receiving by the client a modification list from the server instructing the client on the incorporation of the regenerated page portion into the transmitted page. In another embodiment the method includes receiving by the client additional code instructing the client on how to interpret commands contained in the modification list.,225,68,,
8856783,PC,"Citrix Systems, Inc.",44503493,Virtual Machine/User Session|User Profile,10/12/2010,2010,5/15/2032,Allocating virtual machines according to user-specific virtual machine metrics,The performance monitoring system allocates virtual machines to users or user sessions according to a user categorization that is determine using user session information and virtual machine metrics. A session monitor of the performance monitoring system is notified that a user session terminated where the user session accessed a virtual machine. The session monitor responsively records the user session information and obtains virtual machine metrics for the virtual machine from a virtual machine performance monitor. The performance monitoring system updates a user workload profile using the user session information and the virtual machine metrics and categorizes the user of the user session according to the user workload profile. Upon receiving a request from a user for a virtual machine a virtual desktop infrastructure requests a virtual machine from a virtual machine manager. The virtual machine manager responsively allocates a virtual machine to the user according to the user's categorization.,193,68,,
8521901,PC,Bytemobile Inc,40433760,Other Topics,12/28/2007,2007,5/31/2030,Tcp burst avoidance,A computer-implemented method including providing at a first device a packet scheduler layer between a network layer and a transport layer; receiving at the packet scheduler layer one or more transmission control protocol (TCP) packets from a sending layer on the first device wherein the sending layer is one of the network layer or the transport layer; smoothing delivery of at least one of the one or more TCP packets by delaying the delivery; and sending the one or more TCP packets to a receiving layer wherein the receiving layer is one of the network layer or the transport layer that is not the sending layer.,204,67,,
8352952,PC,"Citrix Systems, Inc.",41663306,Virtual Machine/Hypervisor,12/1/2008,2008,11/8/2031,Systems and methods for facilitating virtualization of a heterogeneous processor pool,A system for facilitating virtualization of a heterogeneous processor pool includes a processor allocation component and a hypervisor each executing on a host computer. The processor allocation component identifies a plurality of physical processors available for computing and determines a set of flags each of the set of flags identifying a type of functionality provided by each of a subset of the plurality of physical processors. The hypervisor in communication with the processor allocation component allocates to at least one virtual machine access to one of the subset of the plurality of physical processors.,138,67,,
8046353,PC,"Citrix Systems, Inc.",40589210,Other Topics,11/2/2007,2007,7/25/2029,Method and apparatus for searching a hierarchical database and an unstructured database with a single search query,Techniques for searching a hierarchical database and an unstructured database with a single search query are described herein. In one embodiment a single search query is received that has syntax identifying an unstructured search string within a structured search query to automatically cause a search of the inverted index and use of the result to automatically search the hierarchical database. The unstructured search string is extracted from the single search query and an inverted index is searched according to the unstructured search string wherein the inverted index includes virtual documents created from data stored in the hierarchical database wherein each virtual document includes a unique identifier from the hierarchical database used to designate the data in the hierarchical database from which that virtual document was created wherein a result of the inverted index search includes the unique identifiers of the virtual documents that meet the search. For each of the unique identifiers in the result a separate search query is generated from the single search query by replacing the unstructured search string in the structured search query with that unique identifier and the hierarchical database is searched according to the separate search query. Other methods and apparatuses are also described.,300,67,,
8350863,PC,"Citrix Systems, Inc.",40591947,Computing Devices/Other Topics|Remote Machine/Local Computing Machine|Remote Machine/Remote Application|Local Computing/Remote Computing Machine|Local Computing/Local Agent,1/27/2008,2008,1/28/2031,Methods and systems for improving resource utilization by delaying rendering of three dimensional graphics,Methods and systems for improving resource utilization when remoting three dimensional graphics commands that are generated by an application executing on a local computing machine. An agent that executes on a local computing machine intercepts a first call to a drawing library. The application generates this first call to request information from the drawing library. The agent further transmits a first frame that is generated by the application to a remote computing machine and prevents a return of the first call to the requesting application until the agent receives a notification indicating either the first frame was transmitted to the remote computing device or the first frame was rendered. Upon receiving such a notification the agent permits the return of the first call to the requesting application.,132,67,,
8380994,PC,"Citrix Systems, Inc.",44153129,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines,12/23/2009,2009,3/20/2031,Systems and methods for generating and managing cookie signatures for prevention of http denial of service in multi-core system,The present application is directed towards systems and methods for generating and maintaining cookie consistency for security protection across a plurality of cores in a multi-core system. A packet processing engine executing on one core designated as a primary packet processing engine generates and maintains a global random seed. The global random seed may be used as an initial seed for creation of cookie signatures by each of a plurality of packet processing engines executing on a plurality of cores of the multi-core system using a deterministic pseudo-random number generation function such that each core creates an identical set of cookie signatures.,240,67,,
8902967,PC,"Citrix Systems, Inc.",44711001,Mobile Devices/Communications Network|Mobile Devices/Media Stream|Real Time/Media Stream,3/31/2010,2010,10/12/2032,Systems and methods for distributed media stream transcoding and sharing,A new approach is proposed that contemplates systems and methods to support distributed stream media transcoding and sharing in real time. Under the approach a host associated with a sender generates a high quality stream of media content that is to be shared with a plurality of viewers over a communication network. The hosting devices associated with the plurality of viewers are evaluated for their capability to process and/or transcode the high quality media stream. Based on the evaluation the host of the sender encodes and transmits the high quality media stream to at least one selected host associated a viewer. Besides decoding the received high quality media stream and displaying it for its own consumption the selected host of the sender further transcodes the media stream by re-encoding the high quality media steam into a different probably lower quality media stream and transmits the re-encoded media stream to a mobile device associated with another viewer which then decodes and displays the lower quality media stream on the mobile device.,486,66,,
7792934,PC,Citrix Systems International Gmbh,40799932,User Profile,1/2/2008,2008,8/24/2028,Loading of server-stored user profile data,One or more computer-implemented methods provided by computer-readable media for providing and loading user profile data from a server computer system to a client computer system may be used together with the server and client computer systems. The client computer system may be caused to initiate a login process for a user on the client computer system and to send login information to the server during the login process. After reception of the login information from the client the server evaluates the received login information to obtain user information corresponding to a user identified in the login information. Based on the obtained user information the server finds user profile data stored on the server computer system. Finally metadata relating to the user profile data may be determined by the client computer system by pulling corresponding data from the server computer system.,180,66,,
8695083,PC,"Citrix Systems, Inc.",42536713,Security Gateway/Security Gateway Receives Messages|Security Gateway/Requests Rather than Malicious Attacks the Security Gateway|Security Gateway/Entry Point,2/18/2004,2004,3/10/2025,Rule generalization for web application entry point modeling,A security gateway receives messages such as URL requests rejected by a message filter based on a set of rules. The security gateway maintains frequencies with which the messages were rejected by the rules. The security gateway finds rejected messages having a high frequency of occurrence. Since messages having a high frequency of occurrences are more likely to represent legitimate requests rather than malicious attacks the security gateway generates exception rules which would allow similar messages to pass through the gateway.,163,66,,
8001244,PC,"Citrix Systems, Inc.",42398613,Data Packets/Payload Portion,8/24/2000,2000,9/20/2020,Deep packet scan hacker identification,Securing an accessible computer system typically includes receiving a data packet that includes a payload portion and an attribute portion where the data packet is communicated between at least one access requestor and at least one access provider. At least the payload portion of the received data packet typically is monitored where monitoring includes scanning the payload portion for at least one predetermined pattern. When the payload portion is determined to include at least one predetermined pattern access by the access requestor to the access provider may be controlled . Monitoring the data packet may include scanning the payload portion while handling the data packet with a switch. Controlling access may include denying access by the access requestor to the access provider.,137,66,,
8559733,PC,"Citrix Systems, Inc.",42289188,Local Computing/Original Image,3/31/2009,2009,8/7/2032,Methods and systems for approximating progressive image encoding using image partitioning,An image partitioner that executes on a local computer to vertically partition pixels of an original image into one or more non-overlapping vertical rows of image pixels and horizontally partition the original image pixels into one or more non-overlapping horizontal rows of image pixels. The image partitioner can then separate the original image into a first sub-image that includes pixels of a first horizontal row and pixels of a first vertical row. The image partitioner can then separate the original image into a second sub-image that includes pixels of either the first horizontal row and a second vertical row or a second horizontal row and the first vertical row. The first sub-image and second sub-image are then transmitted to a remote computer that interlaces the first sub-image with the second sub-image to create a first combined image which approximates the original image on the local computer.,215,65,,
8881229,PC,"Citrix Systems, Inc.",50031074,Mobile Devices/Enterprise Applications|Software Application/Enterprise Applications,10/11/2011,2011,5/3/2033,Policy-based application management,Improved techniques for managing enterprise applications on mobile devices are described herein. Each enterprise mobile application running on the mobile device has an associated policy through which it interacts with its environment. The policy selectively blocks or allows activities involving the enterprise application in accordance with rules established by the enterprise. Together the enterprise applications running on the mobile device form a set of managed applications. Managed applications are typically allowed to exchange data with other managed applications but are blocked from exchanging data with other applications such as the user's own personal applications. Policies may be defined to manage data sharing mobile resource management application specific information networking and data access solutions device cloud and transfer dual mode application software enterprise app store access and virtualized application and resources among other things.,326,65,,
7926116,PC,"Citrix Systems, Inc.",39101266,Other Topics,8/21/2006,2006,8/21/2026,Systems and methods for dynamic decentralized load balancing across multiple sites,A method for enabling decentralized dynamic load balancing among a plurality of appliances providing access to a plurality of sites each site comprising a local area network and at least one server includes: determining by a first appliance a first number of services currently available for access via a local area network connected to the first appliance; receiving by the first appliance from a second appliance a communication indicating a second number of services currently available for access via a local area network connected to the second appliance; receiving by the first appliance a plurality of requests to connect to a service; determining by the first appliance a weight to be assigned to the second appliance wherein the determination is responsive to the second number; and forwarding by the first appliance to the second appliance a subset of the plurality of requests wherein the number of requests comprising the subset is determined in response to the determined weight. Corresponding systems are also described.,224,64,,
8583920,PC,"Citrix Systems, Inc.",49478563,Virtual Server/Other Topics|Virtual Machine/Cloud,4/25/2012,2012,4/25/2032,Secure administration of virtual machines,Methods and systems for performing secure administration of virtual domain resource allocation are provided herein. A cloud service provider (CSP) may provide instances of virtual machines to one or more contracting user entities. The cloud service provider may store an authorization database identifying one or more resources (e.g. storage CPU etc.) that each of the different contracting user entities is authorized to use on a virtual machine server device. The CSP may subsequently receive a request from an unverified entity to instantiate a virtual machine with access to one or more resources. The request may include security information. The CSP validates the request by verifying the unverified entity using the first security information (e.g. checking a PKI certificate requiring a login/password etc.) and when the request is validated provides access to the verified entity to a subset of the requested one or more resources based on the authorization database.,163,64,,
8838630,PC,"Citrix Systems, Inc.",38878037,Other Topics,6/30/2006,2006,7/17/2026,Method and systems for efficient delivery of previously stored content,Systems and methods for reducing file sizes for files delivered over a network are disclosed. A method comprises receiving a first file comprising sequences of data; creating a hash table having entries corresponding to overlapping sequences of data; receiving a second file comprising sequences of data; comparing each of the sequences of data in the second file to the sequences of data in the hash table to determine sequences of data present in both the first and second files; and creating a third file comprising sequences of data from the second file and representations of locations and lengths of said sequences of data present in both the first and second files.,209,64,,
8667050,PC,"Citrix Systems, Inc.",44083066,Computing Devices/Client Devices|Virtual Machine/Client Agent|Virtual Machine/User Session|Remote Machine/Client Agent,12/9/2009,2009,7/28/2032,"Methods and systems for displaying, on a first machine, data associated with a drive of a second machine, without mapping the drive",Methods and systems for displaying data associated with a client drive of a client computing device in a virtualized desktop executing on a remote computing device without explicitly mapping the client drive onto the remote computing device are described. A first client agent executing on a client computing device establishes a user session with a remote computing device. The first client agent transmits data identifying the client drive of the client computing device to a second client agent executing on the remote computing device. The second client agent receives data associated with the client drive and generates a shell link using the received data associated with the client drive in the context of the user session. The second client agent displays the data associated with the client drive of the client computing device in a virtualized desktop executing on the remote computing device.,247,64,,
9043391,PC,"Citrix Systems, Inc.",48224478,Virtual Server/Other Topics|Virtual Machine/Other Topics,2/15/2007,2007,8/13/2028,Capturing and restoring session state of a machine without using memory images,System and method for capturing and/or restoring session state of a machine without using image files. Session state information for a first computer system may be captured in a structured state capture file (SSCF) using metadata to represent the session state and steps or actions which produced the session state and does not include a memory image or memory dump of the first computer system. The SSCF may be stored and subsequently provided for restoration of the session state on the first computer system or a different computer system. A server computer system may store the SSCF (with other SSCFs) and may provide the SSCF to the first computer system or a different computer system over a network for session state restoration e.g. in response to a request over the network. The first computer system may implement a virtual machine (VM). The session state may be that of the VM.,286,64,,
8452835,PC,"Citrix Systems, Inc.",44152615,Directed Towards/Multi-core|Intermediary Devices/Multi-core|Intermediary Devices/Intermediary Receives a Request from a Client,12/23/2009,2009,3/28/2030,Systems and methods for object rate limiting in multi-core system,The present invention is directed towards systems and methods for managing a rate of request for an object transmitted between a server and one or more clients via a multi-core intermediary device. A first core of the intermediary device can receive a request for an object and assume ownership of the object. The first core can store the object in shared memory along with a rate-related counter for the object and generate a hash to the object and counter. Other cores can obtain the hash from the first core and access the object and counter in shared memory. Policy engines and throttlers in operation on each core can control the rate of access to the stored object.,285,64,,
8869144,PC,"Citrix Systems, Inc.",44142394,Computing Devices/Computing Environment|Computing Devices/Virtualization Environment|Computing Devices/Trusted Virtual Machine|Virtual Machine/Computing Environment|Virtual Machine/Hypervisor|Virtual Machine/Guest|Virtual Machine/Trusted Virtual Machine,12/14/2009,2009,4/14/2033,Managing forwarding of input events in a virtualization environment to prevent keylogging attacks,The methods and systems described herein provide functionality for managing injection of input events to one virtual machine of a plurality of guest virtual machines in a computing device executing a hypervisor hosting a trusted virtual machine and a non-trusted virtual machine. An input manager receives a first item of input data from an input device communicating with the computing device. The input manager identifies whether the first item of input data includes a predetermined string. The input manager forwards responsive to the identification the first item of input data to one of (i) a first virtual machine of a plurality of guest virtual machines executed by the processor of the computing device and (ii) an application executed by the control virtual machine wherein at least one virtual machine of the plurality of guest virtual machines is a trusted virtual machine.,275,64,,
9015714,PC,Citrix Systems Inc,49681173,Virtual Machine/Cloud,11/27/2012,2012,10/14/2033,Diagnostic virtual machine created to monitor cluster of hypervisors based on user requesting assistance from cluster administrator,A diagnostic virtual machine having access to resources of an infrastructure as a service cloud may be created. A user device may be provided access to the diagnostic virtual machine. In some embodiments the diagnostic virtual machine may be configured to monitor a cluster of hypervisors and the resources of the infrastructure as a service cloud which the diagnostic virtual machine has access to may include physical resources of the infrastructure as a service cloud that are associated with the cluster of hypervisors.,118,64,,
8621105,PC,"Citrix Systems, Inc.",39030600,Transport Layer Connection/Client Agent,8/3/2006,2006,2/26/2027,Systems and methods for routing vpn traffic around network distribution,Methods for using a client agent to route client requests among a plurality of appliances using transport layer information include the steps of: establishing by a client agent executing on a client a first transport layer connection with a first appliance of a plurality of appliances the first appliance providing access to one or more servers; establishing by a client agent executing on the client a second transport layer connection with a second appliance of a plurality of appliances the second appliance providing access to one or more servers; intercepting by the client agent a packet transmitted by the client; selecting by the client agent one of the connections to transmit the intercepted packet based on a characteristic of at least one of: the transport layer connections the plurality of appliances or the servers; and transmitting the intercepted packet via the selected connection.,145,63,,
8694137,PC,"Citrix Systems, Inc.",39262008,Computing Devices/Other Topics|Remote Access/Other Topics,10/2/2006,2006,1/1/2030,"Systems, devices, and methods for remote access",A first computer is remotely accessed by a second computer. Sound output is generated at the first computer but is selectively muted at the first computer and transmitted to and output at the second computer.,112,63,,
8984407,PC,"Citrix Systems, Inc.",39189988,Computing Devices/Performance Data|Remote Access/Performance Data|Remote Access/User Interface|Graphical User Interface/User Interface Element|Graphical User Interface/Performance Data,9/15/2006,2006,5/30/2028,Methods and interfaces for displaying performance data related to a current remote access session,A graphical user interface displays performance data related to a communication session between a first computing device and a second computing device. The graphical user interface comprises a first graphical element and a second graphical element. The first graphical element has a number of sections that represent respective physical portions of a connection between the first computing device and the second computing device. Each of the sections displays the performance data of a current session for that respective physical section. The second graphical element displays corresponding performance data for a predetermined number of previous sessions between the first computing device and the second computing device.,227,63,,
8230055,PC,"Citrix Systems, Inc.",38825193,Intermediary Devices/Predetermined Threshold,8/3/2006,2006,11/6/2026,Method and appliance for using a dynamic response time to determine responsiveness of network services,In a method and appliance for determining responsiveness of a service via a particular protocol a device intermediary to a plurality of clients and a plurality of services determines response times from each of a plurality of services to respond to requests via a first type of protocol of a plurality of protocols. The device calculates an average response time for the first type of protocol from each of the response times of the plurality of services. The device establishes a predetermined threshold for which a response time of a service for the first type of protocol may deviate from the average response time. The device identifies a service as available responsive to determining that a deviation of the response time of the service from the average response falls within the predetermined threshold.,142,63,,
8874749,PC,"Citrix Systems, Inc.",50032873,Virtual Server/Cloud Infrastructure|Virtual Machine/Computing Environment|Virtual Machine/Cloud,2/3/2010,2010,10/23/2031,Network fragmentation and virtual machine migration in a scalable cloud computing environment,A scalable cloud infrastructure serves two or more customers where each customer is associated with at least one unit of virtual resources. The virtual resources are established by apportioning physical resources in the cloud infrastructure that are partitioned into pods within one or more zones in a scalable manner. Additionally the cloud infrastructure establishes one or more management server clusters each comprising one or more management servers. The two or more customers create a number of virtual machines within pods in a zone. Due to the scalability of the cloud infrastructure customer virtual machines may exist in non optimal locations within the zone. A method to migrate virtual machines and defragment customer networks is devised to optimally manage network traffic and data communication in a scaled cloud infrastructure.,275,63,,
8855418,PC,"Citrix Systems, Inc.",42357797,Other Topics,5/18/2009,2009,5/18/2029,Systems and methods for block recomposition for compound image compression,A new approach is proposed that contemplates systems and methods to support block-based compression of a compound image by skipping don't care blocks in the layers of the image while neither introducing significant overhead nor requiring changes to the compression method used. The block-based compression approach first segments a compound image into multiple layers and then recomposes a new set of image layers possibly with new dimensions from only the non-don't care blocks in the layers of the original image. The approach may later decompress the compressed image layers and restore the image by copying the decompressed blocks to their respective positions in the original image.,138,63,,
9054943,PC,"Citrix Systems, Inc.",44152680,Directed Towards/Various Embodiments|Virtual Server/Internet Protocol Address|IP Address/Network Traffic|IP Address/Network Layer,12/23/2009,2009,4/15/2032,Systems and methods for mixed mode handling of ipv6 and ipv4 traffic by a virtual server,The present invention is directed towards systems and methods for mixed-mode load balancing by a virtual server in a network supporting a plurality of internet protocols. In various embodiments a mixed-mode virtual server receives service requests based on two or more internet layer protocols. The mixed-mode virtual server is configured to detect an IP address type of the client issuing the service request and identify the internet protocol of the service request based on the detected IP address type. The mixed-mode virtual server can then forward the request to a server supporting the identified internet protocol. In this manner the mixed-mode virtual server can bind load balance servers supporting a plurality of internet protocols.,254,63,,
8949414,PC,"Citrix Systems, Inc.",45529210,Computing Devices/Client Devices|Directed Towards/Multi-core|Intermediary Devices/Multi-core,12/29/2010,2010,1/5/2033,Systems and methods for scalable n-core stats aggregation,The present invention is directed towards systems and methods for aggregating and providing statistics from cores of a multi-core system intermediary between one or more clients and servers. The system may maintain in shared memory a global device number for each core of the multi-core system. The system may provide a thread for each core of the multi-core system to gather data from the corresponding core. A first thread may generate aggregated statistics from a corresponding core by parsing the gathered data from the corresponding core. The first thread may transfer the generated statistics to a statistics log according to a schedule. The system may adaptively reschedule the transfer by monitoring the operation of each computing thread. Responsive to a request from a client an agent of the client may obtain statistics from the statistics log.,178,62,,
8578026,PC,"Citrix Systems, Inc.",42989628,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Directed Towards/Shared Resource,6/22/2009,2009,8/9/2030,Systems and methods for handling limit parameters for a multi-core system,The present invention is directed towards systems and methods for handling limit parameters for multi-core systems. A pool manager divides the limited number of uses of a resource into an exclusive quota pool and a shared quota pool. Each packet processing engine operating on a core is allocated an exclusive number of uses of the resource from the exclusive quota pool. If a packet processing engine wishes to use the resource beyond its exclusive number the packet processing engine must borrow from the shared quota pool.,173,62,,
7966524,PC,"Citrix Systems, Inc.",40139275,Other Topics,10/19/2007,2007,8/14/2029,Systems and methods for gathering and selectively synchronizing state information of at least one machine,A method for gathering and selectively synchronizing state information of at least one machine includes generating by a first machine a query identifying a plurality of metrics characterizing a state of a second machine and at least one criterion identifying a circumstance in which to respond to the query. The method includes determining by the second machine whether to respond to the query responsive to the criterion in the query. The method includes transmitting by the second machine to the first machine a response including a subset of the plurality of metrics responsive to the determination. A system for gathering and selectively synchronizing state information of at least one machine includes a first machine generating a query. The system includes an agent on the second machine determining whether to respond to the query and transmitting a response including a subset of the plurality of metrics responsive to the determination.,170,62,,
8405654,PC,"Citrix Systems, Inc.",40591947,Remote Machine/Local Computing Machine|Remote Machine/Remote Application|Local Computing/Remote Computing Machine|Local Computing/Local Agent,1/27/2008,2008,1/27/2029,Methods and systems for remoting three dimensional graphics,Methods and systems for providing three dimensional graphics to remote computing machines and appliances that include an agent executing on a local computing machine to intercept a plurality of graphics commands generated by a three dimensional application executing on a local computing machine. A first portion of the plurality of graphics commands are encoded by the agent using a first codec while a second portion of the plurality of graphics commands are encoded by the agent using a second codec. The agent creates a frame comprising the first portion and the second portion of the plurality of graphics commands compresses the frame and transmits the frame to a remote computing machine.,184,62,,
9037712,PC,"Citrix Systems, Inc.",44584650,Directed Towards/Other Topics,9/8/2010,2010,5/17/2033,Systems and methods for self-loading balancing access gateways,The present invention is directed towards systems and methods for self-load balancing access gateways. The systems and methods include a master access gateway that receives load metrics and capabilities from a plurality of access gateways. The master access gateway also receives requests to determine if a request to start a new session is to be redirected to an access gateways. The master access gateways uses the load metrics and capabilities to select an access gateway to service the request.,187,62,,
8335863,PC,"Citrix Systems, Inc.",41317393,Other Topics,5/19/2008,2008,7/5/2031,Methods and systems for enabling features provided by a first presentation layer protocol in a session implemented according to a second presentation layer protocol,A method for enabling a feature provided by a first presentation layer protocol within a session established according to a second presentation layer protocol includes intercepting by a hooking component executing on a first machine a request by an operating system executing on the first machine for an indication whether the first machine established a session with a second machine according to a first presentation layer protocol. The method includes determining that the first machine established a session according to a second presentation layer protocol. The method includes identifying a type of a function within the operating system that generated the request for the indication. The method includes indicating that the first machine established the session according to the first presentation layer protocol responsive to the identification of the type. The method includes enabling functionality provided for use in sessions established according to the first presentation layer protocol.,169,61,,
8531944,PC,"Citrix Systems, Inc.",39762545,Transport Layer Connection/Quality of Service,3/12/2007,2007,6/8/2028,Systems and methods for providing virtual fair queuing of network traffic,Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments a proxy for one or more connections may allocate distribute or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate distribute or generate these indications in such a way as to provide quality of service to one or more connections or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.,133,61,,
8533312,PC,"Citrix Systems, Inc.",44533137,Directed Towards/Multi-core,8/5/2010,2010,11/10/2031,Systems and methods for server initiated connection management in a multi-core system,The present application is directed towards systems and methods for managing server initiated connections via a multi-core system that provides VPN access between clients and servers. The solution described herein provides a mechanism by which server and client communications via the multi-core system for a server initiated connection may be received on different cores and for the system to manage these communications across different cores to provide an end-to-end connectivity between the client and the server.,177,61,,
8661436,PC,"Citrix Systems, Inc.",44142394,Computing Devices/Other Topics|Virtual Machine/Hypervisor,12/14/2009,2009,6/10/2032,Dynamically controlling virtual machine access to optical disc drive by selective locking to a transacting virtual machine determined from a transaction stream of the drive,The methods and systems described herein provide for granting a virtual machine exclusive access to an optical disc drive responsive to a determination the virtual machine initiated a transaction with the optical disc drive. A drive manager maps an optical disc drive connected to the computing device to a plurality of virtual machines hosted by a hypervisor executed by the computing device. The drive manager intercepts a transaction stream generated by the optical disc drive and converts the transaction stream to a command stream. The drive manager determines based on an analysis of the command stream a first virtual machine of the plurality of virtual machines initiated a transaction with the optical disc drive. Responsive to the determination the drive manager locks the optical disc drive to grant the first virtual machine exclusive access to the optical disc drive.,260,61,,
8782021,PC,"Citrix Systems, Inc.",40427803,Remote Access/Resource Provided|Remote Access/Remote File|Remote Machine/Resource Provided|Remote Machine/Remote File,10/20/2007,2007,9/24/2030,Systems and methods for folder redirection,A method for redirecting to a second machine without user intervention a request for access to a folder on a first machine the request made by a resource executing within a remote access session on the first machine includes receiving by a component on a first machine folder mapping information associated with a folder provided by a shell namespace on a second machine. The component intercepts a request by a resource executing on the first machine for access to file system data on the first machine. The component redirects the request to the second machine responsive to the received folder mapping information.,349,61,,
8364726,PC,"Citrix Systems, Inc.",39797367,Other Topics,6/1/2004,2004,4/26/2025,Methods and apparatus facilitating access to storage among multiple computers,Multiple computers in a cluster maintain respective sets of identifiers of neighbor computers in the cluster for each of multiple named resource. A combination of the respective sets of identifiers define a respective tree formed by the respective sets of identifiers for a respective named resource in the set of named resources. Upon origination and detection of a request at a given computer in the cluster a given computer forwards the request from the given computer over a network to successive computers in the hierarchical tree leading to the computers relevant in handling the request based on use of identifiers of neighbor computers. Thus a combination of identifiers of neighbor computers identify potential paths to related computers in the tree.,161,61,,
8675674,PC,"Citrix Systems, Inc.",44152782,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Directed Towards/SSL|Directed Towards/Various Embodiments|Directed Towards/Shared Resource,12/23/2009,2009,1/10/2033,Systems and methods for queue level ssl card mapping to multi-core packet engine,The present invention is directed towards systems and methods for distributed operation of a plurality of cryptographic cards in a multi-core system. In various embodiments a plurality of cryptographic cards providing encryption/decryption resources are assigned to a plurality of packet processing engines in operation on a multi-core processing system. One or more cryptographic cards can be configured with a plurality of hardware or software queues. The plurality of queues can be assigned to plural packet processing engines so that the plural packet processing engines share cryptographic services of a cryptographic card having multiple queues. In some embodiments all cryptographic cards are configured with multiple queues which are assigned to the plurality of packet processing engines configured for encryption operation.,214,61,,
8667575,PC,"Citrix Systems, Inc.",44153096,Virtual Server/Client Devices|Virtual Server/Authentication Virtual Server|Intermediary Devices/Multi-core|Intermediary Devices/User Session|Intermediary Devices/Intermediary Receives a Request from a Client,12/23/2009,2009,10/18/2031,Systems and methods for aaa-traffic management information sharing across cores in a multi-core system,A method for propagating authentication session information to a plurality of cores of a multi-core device includes establishing by an authentication virtual server executing on a first core of a device intermediary to at least one client and server a session for a user the authentication virtual server authenticating the session. A traffic management virtual server executes on a second core of device and receives a request to access a server via the session. The traffic management virtual server may identify responsive to a determination that the session is not stored by the second core from an identifier of the session that the first core established the session. The second core may send to the first core a request for data for the session identified by the identifier. The second core may receive from the first core a response to the second request identifying whether the session is valid.,230,60,,
8462631,PC,"Citrix Systems, Inc.",39762540,Transport Layer Connection/Quality of Service,3/12/2007,2007,4/7/2028,Systems and methods for providing quality of service precedence in tcp congestion control,Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments a proxy for one or more connections may allocate distribute or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate distribute or generate these indications in such a way as to provide quality of service to one or more connections or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.,175,60,,
8695084,PC,"Citrix Systems, Inc.",41261650,Other Topics,2/18/2004,2004,9/23/2024,Inferencing data types of message components,A method of a device for filtering messages routing across a network includes extracting by a filter configured on the device a plurality of message components from messages received via a network. The plurality of message components is identified as having at least a field name in common including a first field name. A learning engine configured on the device creates a list of data types for values of the first field name. The list includes one or more data types of a value of the first field name identified for each of the plurality of message components. The learning engine determines a most restrictive data type from the list of data types for the values of the first field name of the plurality of message components.,145,60,,
9021494,PC,"Citrix Systems, Inc.",40297704,Isolation Environment/Installation Scope|Isolation Environment/Isolation Scope,10/20/2007,2007,3/25/2028,Method and system for communicating between isolation environments,A method and system for aggregating installation scopes within an isolation environment where the method includes first defining an isolation environment for encompassing an aggregation of installation scopes. Associations are created between a first application and a first installation scope. When the first application requires the presence of a second application within the isolation environment for proper execution an image of the required second application is mounted onto a second installation scope and an association between the second application and the second installation scope is created. Another association is created between the first installation scope and the second installation scope and this third association is created within a third installation scope. Each of the first second and third installation scopes are stored and the first application is launched into the defined isolation environment.,200,60,,
8204196,PC,Citrix Systems International Gmbh,41447440,Other Topics,6/25/2008,2008,4/20/2031,Notification to absent teleconference invitees,A method includes receiving an indication of an elapsed time since a scheduled teleconference meeting start and attendance of the teleconference meeting determining from the indication whether to issue a notification to an absent invitee of the teleconference meeting and selectively issuing the notification to the absent invitee.,70,60,L,notifying absent invitees after certain elapsed time in teleconf
8514697,PC,"Citrix Systems, Inc.",43638699,Data Packets/Data Streams|Data Packets/Communications Network|Data Packets/Intercepting|Mobile Devices/Communications Network|Mobile Devices/Services Based on One,1/8/2010,2010,7/7/2031,Mobile broadband packet switched traffic optimization,A method in an electronic device and a system for use in a communication network including a core network and at least one access network are described. Intermediate service platforms in an access network process data bound from a base station towards a core network and vice versa. A first data channel or stream is processed by the intermediate service platform. Exemplary embodiments bypass the intermediate service platform by intercepting a second data channel or stream bound for the intermediate service platform. The data in the second data channel or stream is processed and inserted into a data channel or stream downstream of the intermediate service platform.,158,60,,
8645537,PC,"Citrix Systems, Inc.",42398613,Data Packets/Payload Portion,8/24/2000,2000,3/1/2021,Deep packet scan hacker identification,Securing an accessible computer system typically includes receiving a data packet that includes a payload portion and an attribute portion where the data packet is communicated between at least one access requestor and at least one access provider. At least the payload portion of the received data packet typically is monitored where monitoring includes scanning the payload portion for at least one predetermined pattern. When the payload portion is determined to include at least one predetermined pattern access by the access requestor to the access provider may be controlled. Monitoring the data packet may include scanning the payload portion while handling the data packet with a switch. Controlling access may include denying access by the access requestor to the access provider.,189,60,,
8503459,PC,"Citrix Systems, Inc.",42711727,Intermediary Devices/Network Traffic|Intermediary Devices/Multi-core|Intermediary Devices/Network Packets,5/5/2009,2009,2/9/2031,Systems and methods for providing a multi-core architecture for an acceleration appliance,The present solution is related to a method for distributing flows of network traffic across a plurality of packet processing engines executing on a corresponding core of a multi-core device. The method includes receiving by a multi-core device intermediary to clients and servers a packet of a first flow of network traffic between a client and server. The method also includes assigning by a flow distributor of the multi-core device the first flow of network traffic to a first core executing a packet processing engine and distributing the packet to this core. The flow distributor may distribute packets of another or second flow of traffic between another client and server to a second core executing a second packet processing engine. When a packet for the flow of traffic assigned to the first core is received such as a third packet the flow distributor distributes this packet to the first core.,287,59,,
8789144,PC,"Citrix Systems, Inc.",45928429,Remote Access/Resource Provided|Remote Access/Client Devices|Remote Access/Access Rights|Mobile Devices/Mobile Clients,10/6/2010,2010,10/6/2031,Mediating resource access based on a physical location of a mobile device,One or more techniques are provided for causing a location of a screen image associated with a resource to be adjusted on a display device. The adjustment may be based at least in part on determining that a control element receives focus. The resource may be associated with an application such as an email application that may be hosted remotely from a client device. Access to one or more resources may be controlled or mediated. Access rights may be based at least in part on a determination of a geographic location of a client device. When the client device is located in a safe area the client device may be provided access to the resource. When the client device is not located in a safe area the client device might not be provided access to the resource or might not be provided full access to the resource.,145,59,,
8893259,PC,"Citrix Systems, Inc.",40548586,Other Topics,1/26/2008,2008,10/27/2032,Systems and methods for fine grain policy driven clientless ssl vpn access,The present disclosure provides solutions that may enable an enterprise providing services to a number of clients to determine whether to establish a client based SSL VPN session or a clientless SSL VPN session with a client based on an information associated with the client. An intermediary establishing SSL VPN sessions between clients and servers may receive a request from a client to access a server. The intermediary may identify a session policy based on the request. The session policy may indicate whether to establish a client based SSL VPN session or clientless SSL VPN session with the server. The intermediary may determine responsive to the policy to establish a clientless or client based SSL VPN session between the client and the server.,184,59,,
8082359,PC,"Citrix Systems, Inc.",44152703,Directed Towards/Multi-core,12/23/2009,2009,12/23/2029,Systems and methods for determining a good rss key,The present application is directed towards systems and methods for ensuring equal distribution of packet flows among a plurality of cores in a multi-core system by identifying a rank of a matrix created from a hash key. If the rank of the matrix is equal to or greater than a divisor of a modulo operation applied to the results of the hash function then the hash key may be used to ensure equal distribution of packet flows.,160,58,,
8200828,PC,"Citrix Systems, Inc.",41697330,Other Topics,1/14/2005,2005,4/22/2026,Systems and methods for single stack shadowing,Methods and systems directed to controlling a real-time user session of presentation layer protocol data. Methods describing a shadowing agent service receiving a connection request from a shadowing tool and initiating a rollover operation responsive to the connection request. A rollover operation including reinitializing the single protocol stack and receiving a protocol data stream from the protocol stack. The shadowing agent service receiving a second data stream from the shadowing tool and inserting data from the second protocol data stream into the protocol stack. Systems describing a controller of the shadowing agent service receiving a connection request from a shadowing tool; a recorder of the shadowing agent service initiating a rollover operation responsive to the connection request; the controller receiving a second protocol data stream from the shadowing tool; and the controller inserting data from the second protocol data stream into the protocol stack.,168,58,,
8824490,PC,"Citrix Systems, Inc.",46302427,Other Topics,7/29/2003,2003,10/29/2023,Automatic detection and window virtualization for flow control,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,253,58,,
8848710,PC,"Citrix Systems, Inc.",38225964,Directed Towards/Dynamically Generated Objects,1/24/2005,2005,3/3/2025,System and method for performing flash caching of dynamically generated objects in a data communication network,The present invention is directed towards a method and system for providing a technique referred to as flash caching to respond to requests for an object such as a dynamically generated object from multiple clients. This technique of the present invention uses a dynamically generated object stored in a buffer for transmission to a client for example in response to a request from the client to also respond to additional requests for the dynamically generated object from other clients while the object is stored in the buffer. Using this technique the present invention is able to increase cache hit rates for extremely fast changing dynamically generated objects that may not otherwise be cacheable.,177,58,,
8724654,PC,"Citrix Systems, Inc.",44309764,Data Packets/Data Streams|Data Packets/Data Structures,12/23/2009,2009,6/1/2032,Systems and methods for rewriting a stream of data via intermediary,A streaming rewrite method and system that can execute an efficient multiple pattern search method that parses a response in a data structure of an appliance. The method and system can avoid copying to a buffer by parsing data across a data structure to identify search patterns and phrases that may be identified by one or more actions and/or rules of an appliance or system. A parser can input one or more search patterns and parse a body of a response or one or more packets for the search patterns. The parser can obtain pattern information about the packets and/or the response and store this information in a database. The appliance can then perform lookups in the database for pattern information and perform rewrites in accordance with the stored pattern information. The rewritten response and/or packets can then be transmitted to a destination.,196,57,,
9064125,PC,"Citrix Systems, Inc.",--,Mobile Devices/Other Topics,5/3/2013,2013,6/28/2033,Image analysis and management,Systems methods and apparatuses are described herein that allow an enterprise to analyze and manage work product images that are stored on a mobile device. Employees of an enterprise may use a mobile device to store both work product images (e.g. images of sensitive or proprietary information) and non-work product images (e.g. personal images). An enterprise may desire to enforce security protocols on the work product images but the employee may not want the security protocols applied to the non-work product images. In some embodiments by installing and executing an image manager that is able to analyze and manage images the enterprise can enforce security protocols on only the work product images. Such security protocols may include the prevention of unauthorized viewing of the work product image (e.g. by encrypting the work product image) or deleting any work product image from the mobile device when the employee's employment has ended.,268,57,,
8943512,PC,"Citrix Systems, Inc.",41663306,Virtual Machine/Hypervisor,12/1/2008,2008,2/24/2029,Systems and methods for facilitating virtualization of a heterogeneous processor pool,A system for facilitating virtualization of a heterogeneous processor pool includes a processor allocation component and a hypervisor each executing on a host computer. The processor allocation component identifies a plurality of physical processors available for computing and determines a set of flags each of the set of flags identifying a type of functionality provided by each of a subset of the plurality of physical processors. The hypervisor in communication with the processor allocation component allocates to at least one virtual machine access to one of the subset of the plurality of physical processors.,100,57,,
8046695,PC,"Citrix Systems, Inc.",40428203,Other Topics,10/19/2007,2007,7/24/2030,Methods and systems for incorporating at least one window from a first desktop environment having a first themed graphical display into a second desktop environment having a second themed graphical display,A system for incorporating at least one window from a first desktop environment having a first themed graphical display into a second desktop environment having a second themed graphical display includes a first virtual channel a second virtual channel and a local agent. The first virtual channel conveys graphical data associated with a window in the first desktop environment comprising a client area and a window rectangle. The second virtual channel conveys window attribute data associated with the window and including screen coordinates for the client area. A local agent forms a corresponding window in the second desktop environment the corresponding window displaying the graphical data received from the first virtual channel in a local client area displayed at screen coordinates in accordance with the received window attribute data the corresponding window having a local window rectangle displayed according to a second graphical theme.,227,57,,
8832300,PC,"Citrix Systems, Inc.",39763782,Compression History,3/12/2007,2007,3/12/2027,Systems and methods for identifying long matches of data in a compression history,Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further by sharing compression histories compression history indexes and caches across multiple devices devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data synchronize the storage of previously sent data and share previously sent data among one or more other devices.,147,57,,
8949368,PC,Bytemobile Inc,38686389,Transmitted Page,5/12/2006,2006,6/2/2030,Method for cache object aggregation,A system including a first user agent configured to transmit request data corresponding to a requested web page wherein the request data includes a request data header and an optimization server configured to receive the request data to determine whether the request header data matches a classification of a grouping that identifies cached content data wherein the grouping is configured based on similarities between a first content data and a second content data; and to transmit the cached content data to the user based on the determination.,258,57,L,62 Amazon citations.
8559755,PC,"Citrix Systems, Inc.",42121406,Local Computing/Virtual Channel,4/7/2009,2009,7/22/2032,Methods and systems for prioritizing dirty regions within an image,A method for identifying modified sections of a drawing region and selecting at least one modified drawing region section to transmit to a remote computer. A local computer can execute a prioritization module that can identify a first modified drawing region section and a second modified drawing region section. Each of the first and second modified drawing region section can have a corresponding priority. The prioritization module can determine whether the first priority of the first section is greater than the second priority of the second section and can select the greater priority. The local computer can then transmit the selected modified drawing region section that has the greatest priority to a remote computer that communicates with the local computer over a virtual channel.,187,56,,
8285705,PC,"Citrix Systems, Inc.",40589209,Private Networks/Multiple Devices|Private Networks/Local Area Network,11/2/2007,2007,11/2/2027,Hosted searching of private local area network information,Hosted searching of different local area network (LAN) information is described. The apparatus for hosted searching of different private LAN information includes a LAN crawler to automatically and repeatedly crawl a LAN having multiple devices and a hosted on-demand search system including a set of one or more centralized-search servers to create and synchronize a separate private search database for each of the private LANs based on received reports from of different instances of the LAN crawler deployed on the multiple private LANs at least some of which are operated by different entities.,315,56,,
8990431,PC,"Citrix Systems, Inc.",43062991,Data Packets/Packet Engine|IP Address/Packet Engine,5/5/2009,2009,4/14/2031,Systems and methods for identifying a processor from a plurality of processors to provide symmetrical request and response processing,Described herein is a method and system for distributing request and responses across a multi-core system. Each core executes a packet engine that further processes data packets allocated to that core. A flow distributor executing within the multi-core system forwards client requests to a packet engine on a core that is selected based on a value generated when a hash is applied to a tuple comprising a client IP address a client port a server IP address and a server port identified in the request. The packet engine selects a first IP address and a first port of the core and determines whether a hash of a tuple comprising those values identifies the selected core. A modification is then made to the client request so that the client request includes a tuple comprising the first IP address the server IP address the first port and the server port.,253,56,,
8011009,PC,"Citrix Systems, Inc.",41261650,Other Topics,2/18/2004,2004,2/18/2024,Inferencing data types of message components,A method of a device for filtering messages routing across a network includes extracting by a filter configured on the device a plurality of message components from messages received via a network. The plurality of message components is identified as having at least a field name in common including a first field name. A learning engine configured on the device creates a list of data types for values of the first field name. The list includes one or more data types of a value of the first field name identified for each of the plurality of message components. The learning engine determines a most restrictive data type from the list of data types for the values of the first field name of the plurality of message components.,130,56,,
8996614,PC,"Citrix Systems, Inc.",45757198,Transport Layer Connection/Response to the Client|Transport Layer Connection/Present Disclosure|Transport Layer Connection/Destination Port|Transport Layer Connection/Transport Layer Protocol,2/9/2011,2011,6/6/2032,Systems and methods for ntier cache redirection,The present disclosure describes systems and methods for load balancing multiple application delivery controllers (ADCs) in multiple tiers. An upper layer of the tier comprises ADCs that load balance the plurality of ADCs of a lower layer of the tier. In order to appropriately share and maintain client IPs for transparent cache redirection scenarios the transport layer (Transport Control Protocol (TCP)) port range is split among the ADCs of the lower tier. The lower tier ADCs would then create a connection only using a source port assigned to them. The response from the origin will then be sent to the upper level ADC which looks at the destination port and forward the packet to the correct lower tier ADC. Hence the ADCs at two levels will work in conjunction to provide transparent cache direction.,510,56,,
9043480,PC,"Citrix Systems, Inc.",50000687,Mobile Devices/Enterprise Applications|Software Application/Enterprise Applications,10/11/2011,2011,10/10/2032,Policy-based application management,Improved techniques for managing enterprise applications on mobile devices are described herein. Each enterprise mobile application running on the mobile device has an associated policy through which it interacts with its environment. The policy selectively blocks or allows activities involving the enterprise application in accordance with rules established by the enterprise. Together the enterprise applications running on the mobile device form a set of managed applications. Managed applications are typically allowed to exchange data with other managed applications but are blocked from exchanging data with other applications such as the user's own personal applications. Policies may be defined to manage data sharing mobile resource management application specific information networking and data access solutions device cloud and transfer dual mode application software enterprise app store access and virtualized application and resources among other things.,200,56,,
9009720,PC,"Citrix Systems, Inc.",40297704,Isolation Environment/Installation Scope|Isolation Environment/Isolation Scope,10/20/2007,2007,2/8/2029,Method and system for communicating between isolation environments,A method and system for aggregating installation scopes within an isolation environment where the method includes first defining an isolation environment for encompassing an aggregation of installation scopes. Associations are created between a first application and a first installation scope. When the first application requires the presence of a second application within the isolation environment for proper execution an image of the required second application is mounted onto a second installation scope and an association between the second application and the second installation scope is created. Another association is created between the first installation scope and the second installation scope an this third association is created within a third installation scope. Each of the first second and third installation scopes are stored and the first application is launched into the defined isolation environment.,143,55,,
8443456,PC,"Citrix Systems, Inc.",47175856,Computing Devices/Other Topics,5/20/2011,2011,5/10/2032,Providing multiple layers of security to file storage by an external storage provider,A method that may include detecting by a processor of a computing device a network communication regarding transmission of a file to an external storage provider. The method may include causing encryption of the file to obtain an encrypted file and associating authorization information with the encrypted file. The authorization information may include one or more restrictions on access to the encrypted file. The method may include transmitting the encrypted file to the external storage provider and intercepting a request for access to the file. The method may include identifying requestor information regarding a requestor associated with the request and determining using the requestor information and a portion of the authorization information that the requestor is authorized to access the encrypted file. The method may include causing decryption of the encrypted file to obtain the original file and providing to the requestor by the processor access to the original file.,216,55,,
9032026,PC,"Citrix Systems, Inc.",40433032,Remote Access/Resource Provided|Remote Access/Local Machine|Remote Machine/Resource Provided|Remote Machine/Graphical Data,9/12/2007,2007,3/31/2029,"Methods and systems for providing, by a remote machine, access to a desk band associated with a resource executing on a local machine",A method for providing by a remote machine access to a desk band associated with a resource on a local machine includes receiving by a first agent on the remote machine an identification of a desk band associated with a resource on a local machine. The first agent in communication with a shell on the remote machine maintains a taskbar window in a remote desktop environment. The taskbar window includes at least one window associated with a resource provided by the remote machine and a window region representing the desk band by using graphical data stored on the remote machine. The first agent transmits to a second agent on the local machine window attribute data and output data associated with the taskbar window in the remote desktop environment. The second agent displays at least a portion of the received output data in a local window on a local desktop environment.,227,55,,
8819045,PC,"Citrix Systems, Inc.",46045103,Data Packets/Data Streams|Intermediary Devices/Network Packets,3/28/2011,2011,7/21/2032,Systems and methods of utf-8 pattern matching,Systems and methods are described for efficiently processing searching and/or rewriting variable width encoded data such as UTF-8 encoded data will be described. Embodiments of the systems and methods modify and adapt search algorithms such as the Horspool and Wu-Manber algorithms to efficiently process and manage searching of variable width encoded text in large blocks of text such as text that may be carried via a stream of packets thru a network device such as an intermediary device.,173,55,,
8965955,PC,"Citrix Systems, Inc.",44152612,Intermediary Devices/Network Traffic|Intermediary Devices/Present Disclosure|Intermediary Devices/Intermediary Receives a Request from a Client,12/23/2009,2009,1/2/2032,Systems and methods for policy based integration to horizontally deployed wan optimization appliances,The present disclosure presents systems and methods for policy based redirection of network traffic by an intermediary device to a horizontally deployed WAN device. An intermediary receives a request from a client to access a server. The request was previously modified by a first WAN device to include information in a first option field of a transport layer. The intermediary may determine responsive to a redirection policy to send the request to a second WAN optimization device deployed horizontally from the intermediary instead of the server. The intermediary transmits the request to the second WAN optimization device while maintaining the information from the first option field. The intermediary device receives the request including the information in the first option field identifying the first WAN optimization device to the second WAN optimization device. The intermediary receives a modified request from the second WAN device the modified request determined by the intermediary to be sent to the destination server.,350,55,,
8578099,PC,"Citrix Systems, Inc.",43355286,Directed Towards/User Session|Intermediary Devices/User Session|Intermediary Devices/HTTP Response|Intermediary Devices/Subsequent Request,6/22/2009,2009,6/22/2029,Systems and methods for integration between application firewall and caching,The present invention is directed towards integrating cache managing and application firewall processing in a networked system. An integrated cache/firewall system comprises an application firewall operating in conjunction with a cache managing system in operation on an intermediary device. The application firewall processes a received HTTP response to a request by a networked entity serviced by the intermediary device. The application firewall generates metadata from the HTTP response and stores the metadata in cache with the HTTP response. When a subsequent request hits in the cache the metadata is identified to a user session associated with the subsequent request. The application firewall can modify a cache-control header of the received HTTP response and can alter the cookie-setting header of the cached HTTP response.,152,54,,
8788581,PC,"Citrix Systems, Inc.",38226024,Other Topics,1/24/2005,2005,1/24/2025,Method and device for performing caching of dynamically generated objects in a data communication network,A method for maintaining a cache of dynamically generated objects. The method includes storing in the cache dynamically generated objects previously served from an originating server to a client. A communication between the client and server is intercepted by the cache. The cache parses the communication to identify an object determinant and to determine whether the object determinant indicates whether a change has occurred or will occur in an object at the originating server. The cache marks the object stored in the cache as invalid if the object determinant so indicates. If the object has been marked as invalid the cache retrieves the object from the originating server.,118,54,,
9008100,PC,"Citrix Systems, Inc.",46302424,Other Topics,10/30/2002,2002,11/12/2023,Wavefront detection and disambiguation of acknowledgments,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,356,54,,
8416935,PC,"Citrix Systems, Inc.",41302848,Other Topics,9/9/2008,2008,11/6/2030,Methods and systems for calling conference participants to establish a conference call,A conference call system comprising at least a gateway a conference reservation agent and a multiport conference unit can establish conference calls by calling conference call participants at a phone number specified by the conference call participants. When a user initiates a conference an identifier is assigned to the conference and a URL referencing this identifier is transmitted to each conference participant. Upon clicking the URL conference participants are presented with a web-form within which the participants can entered a preferred phone number and further join the conference. The multiport conference unit receives each participant phone number and calls the participants at that phone number. Upon establishing a telecommunication connection with each participant the multiport conference unit bridges the multiple call legs to establish the conference call.,219,53,,
8819809,PC,"Citrix Systems, Inc.",39190208,Private Networks/Client Side,8/21/2006,2006,8/21/2026,"Method and appliance for authenticating, by an appliance, a client to access a virtual private network connection, based on an attribute of a client-side certificate",In a method and appliance for authenticating by an appliance a client to access a virtual network connection based on an attribute of a client-side certificate a client authentication certificate is requested from a client. A value of at least one field in the client authentication certificate received from the client is identified. One of a plurality of types of access is assigned responsive to an application of a policy to the identified value of the at least one field each of the plurality of access types associated with at least one connection characteristic.,148,53,,
8904475,PC,"Citrix Systems, Inc.",39102873,Private Networks/Level of Access|Private Networks/Client Side,8/21/2006,2006,8/21/2026,"Method and system for authorizing a level of access of a client to a virtual private network connection, based on a client-side attribute",An appliance and method for authorizing a level of access of a client to a virtual private network connection based on a client-side attribute includes the step of establishing by an appliance a control connection with a client upon receiving a client request to establish a virtual private network connection with a network. The appliance transmits via the control connection a request to the client to evaluate at least one clause of a security string the at least one clause including an expression associated with a client-side attribute. The client transmits via the control connection a response to the appliance comprising a result of evaluating the at least one clause by the client. The appliance assigns the client to an authorization group based on the result of evaluation of the at least one clause.,182,53,,
8473585,PC,"Citrix Systems, Inc.",48627804,Computing Devices/Other Topics,6/26/2012,2012,6/26/2032,Multi-threaded optimization for data upload,A method may include receiving at a first computing device a command from a second computing device to upload a file to a storage region; negotiating with a third computing device a destination for the file where the destination correlates to a storage location at the storage region; monitoring upload of at least a first chunk of the file and a second chunk of the file to the destination where the first chunk is logically contiguous with the second chunk; determining that a threshold portion of the second chunk has been uploaded prior to upload of an entirety of the first chunk; initiating suspension of upload of the second chunk; determining upload of the entirety of the first chunk has completed; initiating continuation of upload of the second chunk; and reporting success of upload of the first chunk to the second computing device.,247,53,,
8862870,PC,"Citrix Systems, Inc.",45509703,Directed Towards/Present Disclosure,12/29/2010,2010,12/27/2031,Systems and methods for multi-level tagging of encrypted items for additional security and efficient encrypted item determination,The present disclosure is directed towards systems and methods for performing multi-level tagging of encrypted items for additional security and efficient encrypted item determination. A device intercepts a message from a server to a client parses the message and identifies a cookie. The device processes and encrypts the cookie. The device adds a flag to the cookie indicating the device encrypted the cookie. The device re-inserts the modified cookie into the message and transmits the message. The device intercepts a message from a client and determines whether the cookie in the message was encrypted by the device. If the message was not encrypted by the device the device transmits the message to its destination. If the message was encrypted by the device the device removes the flag decrypts the cookie removes the tag from the cookie re-inserts the cookie into the message and transmits the message to its final destination.,171,53,,
8909756,PC,"Citrix Systems, Inc.",44533137,Directed Towards/Multi-core,8/5/2010,2010,8/5/2030,Systems and methods for server initiated connection management in a multi-core system,The present application is directed towards systems and methods for managing server initiated connections via a multi-core system that provides VPN access between clients and servers. The solution described herein provides a mechanism by which server and client communications via the multi-core system for a server initiated connection may be received on different cores and for the system to manage these communications across different cores to provide an end-to-end connectivity between the client and the server.,155,52,,
8996709,PC,"Citrix Systems, Inc.",51588300,Computing Devices/Computer-readable Media|Computing Devices/Unmanaged Mode,3/29/2013,2013,9/30/2033,Providing a managed browser,Methods systems computer-readable media and apparatuses for providing a managed browser are presented. In various embodiments a computing device may load a managed browser. The managed browser may for instance be configured to provide a managed mode in which one or more policies are applied to the managed browser and an unmanaged mode in which such policies might not be applied and/or in which the browser might not be managed by at least one device manager agent running on the computing device. Based on device state information and/or one or more policies the managed browser may switch between the managed mode and the unmanaged mode and the managed browser may provide various functionalities which may include selectively providing access to enterprise resources based on such state information and/or the one or more policies.,219,52,,
8230214,PC,"Citrix Systems, Inc.",39102729,Other Topics,8/21/2006,2006,3/30/2030,Systems and methods for optimizing ssl handshake processing,A method for enabling efficient SSL handshakes through precomputing of handshake messages the method includes: receiving by an appliance a server certificate identifying a server; generating by the appliance at least one of: (i) an SSL server certificate message comprising the received server certificate (ii) an SSL client certificate request message and (iii) an SSL hello done message; storing by the appliance the generated messages; receiving by the appliance from a client an SSL client hello message identifying the server; and transmitting by the appliance to the client an SSL server hello message and at least one of the stored messages. Corresponding systems are also described.,130,52,,
8296364,PC,"Citrix Systems, Inc.",42315411,Computing Devices/Viewer Computing|Computing Devices/Audio Stream,4/14/2009,2009,4/14/2029,Systems and methods for computer and voice conference audio transmission during conference call via voip device,A new approach is proposed that contemplates systems and methods to support canceling audio streams leaked from a speaker to a microphone so that a clean audio stream of a presenter or viewer speaking at a conference call is transmitted. Here the audio streams being canceled includes the computer audio stream of an application being run or a material being presented online during a web conference and/or the audio stream received from the rest of the group of participants at the conference call. The computer audio stream is then transmitted in addition to the presenter or viewer audio stream and separate from any other audio stream captured by the hosting device during the conference call.,137,52,,
8924703,PC,"Citrix Systems, Inc.",44167925,Computing Devices/Client Devices|Computing Devices/Computing Environment|Computing Devices/Virtualization Environment|Computing Devices/External Media,12/14/2009,2009,12/14/2030,Secure virtualization environment bootable from an external media device,Methods and systems for creating a secure virtualization environment on a host device without modifying the host device the secure virtualization environment bootable from an external media device. A host computing device loads and boots a common operating system image stored on an external media device. A client agent stored on the external media device and executing in the common operating system image creates an adapted operating system image by copying the operating system of the host computing device eliminating all unnecessary files and data and storing the adapted operating system image to the external media device. The host computing device provides a secure virtualized environment by booting the adapted operating system image.,143,52,,
8266688,PC,"Citrix Systems, Inc.",40446404,Remote Machine/Other Topics,10/19/2007,2007,5/16/2030,Systems and methods for enhancing security by selectively opening a listening port when an incoming connection is expected,The present solution reduces the attack surface of a server by selectively opening a server port for listening when a client has been authenticated/authorized via another machine or process and directed to connect to the server in question. When not selectively listening on a port the server does not listen or open ports for connections or otherwise minimizes the number of open ports. By selectively listening for connections the server reduces the opportunity for hackers to attack the server process and improves the security of the server. The ability to selectively listen on a port at specific times may be combined with additional meta information—like ticketing and prior authentication information to help further secure the server. The meta information may identify and ensure that only the correct remote endpoint is allowed to connect via the port. Instead of first listening for connections and then authenticate and authorize the received connection as with typical servers the present solution first authenticates/authorizes a connection via another machine or process then listens for an expected and authorized connection.,224,52,,
8271666,PC,"Citrix Systems, Inc.",41718389,Real Time/Media Stream|Real Time/Session Identifier,11/25/2008,2008,11/25/2028,Systems and methods for load balancing real time streaming,The present application relates to systems and methods for managing of Real Time Stream Protocol (RTSP) sessions by an intermediary located between a client and a server. An intermediary located between a client and a server receives a response from the server to a request of the client to setup a media stream. The response may include a first session identifier established by the server. The intermediary may encode a port of the server and an internet protocol address of the server into the first session identifier to form a second session identifier. The intermediary may modify the response to identify the second session identifier as the session identifier provided by the server. The intermediary may transmit the modified response to the client responsive to the request of the client to setup the media stream.,245,52,,
8471782,PC,"Citrix Systems, Inc.",39027185,Computing Devices/Computing Environment|Computing Devices/Viewer Computing|Remote Access/Viewer Computing|Remote Access/User Interface|Graphical User Interface/Display Screen|Graphical User Interface/Viewer Computing,9/14/2006,2006,9/14/2026,Systems and methods for multiple display support in remote access software,A method of supporting multiple display configurations in a remote access environment the remote access environment having a host computing device in communication with a viewer computing device comprises: receiving from a host computing device by a viewer computing device having one or more viewer displays a list of rectangles each rectangle representing the boundaries of one of a plurality of host displays; presenting by the viewer computing device to an end-user of the viewer computing device a graphical user interface including means for selecting a configuration for displaying a window representing screen data of the plurality of host displays in the viewable area of the one or more displays of the viewer computing device; and displaying in the selected configuration by the viewer computing device the window representing the screen data of the one or more host displays. Corresponding systems are also described.,184,52,,
8654659,PC,"Citrix Systems, Inc.",44150894,Directed Towards/Other Topics|Virtual Server/Internet Protocol Address|Intermediary Devices/Internet Protocol Address|IP Address/Other Topics,12/23/2009,2009,4/3/2031,Systems and methods for listening policies for virtual servers of appliance,The present invention is directed towards a method for using a listening policy for a virtual server on an intermediary device. An intermediary device establishes for a first virtual server a first listening policy with an expression for evaluating packets received by the intermediary device to determine whether the packet may access the first virtual server. The intermediary device listens for packets at a first internet protocol (IP) address and a first port specified for the first virtual server. Then the intermediary device evaluates the expression of the first listening policy to a first packet received at the first IP address and first port and determines whether to provide the first packet to the first virtual server based on a result of the evaluation.,221,52,,
9053340,PC,"Citrix Systems, Inc.",49725950,Other Topics,10/12/2012,2012,8/9/2033,Enterprise application store for an orchestration framework for connected devices,Aspects described herein allow multiple devices to function as a coherent whole allowing each device to take on distinct functions that are complementary to one another. Aspects described herein also allow the devices function as a coherent whole when interconnected devices and their respective applications are configured to operate in various operation modes when management policies are employed to control the operation of the interconnected devices and their respective applications when transferring content between the interconnected devices and storing the content at those devices when obtaining access credentials for the interconnected devices that enable the devices to access enterprise resources when a policy agent applies management policies to control operation of and interaction between the interconnected devices and when the interconnected devices are used to access an enterprise application store.,189,52,,
8520821,PC,"Citrix Systems, Inc.",42813217,Computing Devices/Audio Stream,7/24/2009,2009,7/23/2031,Systems and methods for switching between computer and presenter audio transmission during conference call,A new approach is proposed that contemplates systems and methods to support switching between computer audio and presenter audio during a conference call so that one and only one not both of the two audio streams is being transmitted to the rest of the conference at any time. More specifically a switch engine is adopted which separately takes one or more audio streams captured by a sound mixing component of the hosting device of a presenter and by a microphone attached to the hosting device as its two inputs and outputs only one of the two inputs at any time. The selected audio output is then processed and transmitted to the rest of the conference with feedback from other audio sources canceled.,240,51,,
8849978,PC,"Citrix Systems, Inc.",51588294,Other Topics,3/29/2013,2013,8/30/2033,Providing an enterprise application store,Methods systems and computer-readable media for providing an application store are presented. In some embodiments a request for updated policy information for at least one application may be received at an application store from a policy agent. Based on receiving the request it may be determined at the application store whether one or more policies for the at least one application have been updated. Based on determining that the one or more policies for the at least one application have been updated at least one policy update may be provided to the policy agent.,144,51,,
8111086,PC,"Citrix Systems, Inc.",43992478,Computing Devices/Other Topics|Local Computing/Window Displaying,11/16/2009,2009,11/16/2030,Methods and systems for selective implementation of progressive display techniques,The present disclosure relates to systems and methods for selective implementation of progressive display techniques based on a number of frames displayed in a window. A first hooking component identifies for a window displaying first application data on a local computing device a number of frames to be displayed in the window. A display manager generates based on the identified number of frames to be displayed an instruction to compress an identification of an update to the application data. The data is compressed and sent and transmitted to the local device in order to be displayed on the window. A display manager may determine for another window displaying a different application data on the local device whether or not to compress a second identification of an update to the second application data. The second application data may be transmitted to the local device compressed or not compressed based on the determination.,205,51,,
8914845,PC,Citrix Systems Inc,50476702,Private Networks/VPN User|Private Networks/Multiple Devices|Mobile Devices/Enterprise Applications|Mobile Devices/Secure Container|Mobile Devices/Services Based on One|Security Gateway/Policy Controlled VPN|Security Gateway/Access Gateway,10/15/2012,2012,9/16/2033,Providing virtualized private network tunnels,Various aspects of the disclosure relate to providing a per-application policy-controlled virtual private network (VPN) tunnel. In some embodiments tickets may be used to provide access to an enterprise resource without separate authentication of the application and in some instances can be used in such a manner as to provide a seamless experience to the user when reestablishing a per-application policy controlled VPN tunnel during the lifetime of the ticket. Additional aspects relate to an access gateway providing updated policy information and tickets to a mobile device. Other aspects relate to selectively wiping the tickets from a secure container of the mobile device. Yet further aspects relate to operating applications in multiple modes such as a managed mode and an unmanaged mode and providing authentication-related services based on one or more of the above aspects.,211,51,,
8910239,PC,Citrix Systems Inc,50476703,Private Networks/VPN User|Private Networks/Multiple Devices|Mobile Devices/Enterprise Applications|Mobile Devices/Secure Container|Mobile Devices/Services Based on One|Security Gateway/Policy Controlled VPN|Security Gateway/Access Gateway,10/15/2012,2012,9/16/2033,Providing virtualized private network tunnels,Various aspects of the disclosure relate to providing a per-application policy-controlled virtual private network (VPN) tunnel. In some embodiments tickets may be used to provide access to an enterprise resource without separate authentication of the application and in some instances can be used in such a manner as to provide a seamless experience to the user when reestablishing a per-application policy controlled VPN tunnel during the lifetime of the ticket. Additional aspects relate to an access gateway providing updated policy information and tickets to a mobile device. Other aspects relate to selectively wiping the tickets from a secure container of the mobile device. Yet further aspects relate to operating applications in multiple modes such as a managed mode and an unmanaged mode and providing authentication-related services based on one or more of the above aspects.,213,51,,
8910264,PC,"Citrix Systems, Inc.",51621960,Computing Devices/Computer-readable Media|Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing|Mobile Devices/Monitor State,3/29/2013,2013,9/13/2033,Providing mobile device management functionalities,Methods systems computer-readable media and apparatuses for providing mobile device management functionalities are presented. In various embodiments a mobile device management agent may monitor state information associated with a mobile computing device. The monitored state information may be analyzed on the mobile computing device and/or by one or more policy management servers. In some instances the one or more policy management servers may provide management information to the mobile computing device and the management information may include one or more commands (which may e.g. cause the mobile computing device to enforce one or more policies) and/or one or more policy updates. Subsequently one or more policies may be enforced on the mobile computing device based on the monitored state information and/or based on the management information.,229,51,,
9059966,PC,"Citrix Systems, Inc.",40530860,Other Topics,1/26/2008,2008,1/26/2029,Systems and methods for proxying cookies for ssl vpn clientless sessions,The present application enables the enterprise to configure various policies to address various subsets of the traffic based on various information relating the client the server or the details and nature of the interactions between the client and the server. An intermediary deployed between clients and servers may establish an SSL VPN session between a client and a server. The intermediary may receiving a response from a server to a request of a client via the clientless SSL VPN session. The response may comprise one or more cookies. The intermediary may identify an access profile for the clientless SSL VPN session. The access profile may identify one or more policies for proxying cookies. The intermediary may determine responsive to the one or more policies of the access profile whether to proxy or bypass proxying for the client the one or more cookies.,140,50,,
9009721,PC,"Citrix Systems, Inc.",40297704,Isolation Environment/Installation Scope|Isolation Environment/Isolation Scope,10/20/2007,2007,8/8/2028,Method and system for communicating between isolation environments,A method and system for aggregating installation scopes within an isolation environment where the method includes first defining an isolation environment for encompassing an aggregation of installation scopes. Associations are created between a first application and a first installation scope. When the first application requires the presence of a second application within the isolation environment for proper execution an image of the required second application is mounted onto a second installation scope and an association between the second application and the second installation scope is created. Another association is created between the first installation scope and the second installation scope an this third association is created within a third installation scope. Each of the first second and third installation scopes are stored and the first application is launched into the defined isolation environment.,142,50,,
8639813,PC,"Citrix Systems, Inc.",41510492,Virtual Server/Virtual Private Network|Virtual Server/GSLB Virtual Server|Private Networks/Network Session|Private Networks/VPN User,11/25/2008,2008,8/20/2031,Systems and methods for gslb based on ssl vpn users,The present invention provides a system and a method for global server load balancing of a plurality of sites based on a number of Secure Socket Layer Virtual Private Network (SSL VPN) users. The SSL VPN users may access servers at each of the plurality of sites. A global server load balancing virtual server (GSLB) may receive a request to access a server. The GSLB virtual server may load balance a plurality of sites wherein each of the plurality of sites may further comprising a load balancing virtual server load balancing users accessing the server accessing servers via an SSL VPN session. GSLB may receive from a first load balancing virtual server at a first site a first number of current SSL VPN users accessing servers from the first site via SSL VPN sessions. The GSLB may also receive from a second load balancing virtual server at a second site a second number of current SSL VPN users of the users accessing servers from the second site via SSL VPN sessions. GSLB may determine to forward the request to one of the first load balancing virtual server of the first site or the second load balancing virtual server of the second site by load balancing SSL VPN users across the plurality of sites based on the first number of current SSL VPN users and the second number of current SSL VPN users.,405,50,,
8856369,PC,"Citrix Systems, Inc.",44513165,Data Packets/Packet Engine,8/5/2010,2010,8/5/2030,Systems and methods for iip address sharing across cores in a multi-core system,In a multi-core system multiple packet engines across corresponding cores may be working concurrently processing data packets from data flows of SSL VPN sessions. For example a first core may establish a SSL VPN session with a client. Any one of the other cores such as a second core may received packets related to the session owned by the first core. Embodiments of the systems and method described below provide management of IIP addresses for the multi-core/multi-packet engine approach to providing SSL VPN service. In some embodiments the approach to managing IIP addresses is to have one packet engine on a core act as a master or controller of the IIPs for the remaining packet engines and cores. The packet engines/cores use a protocol for communications regarding IIP management.,133,50,,
8214505,PC,"Citrix Systems, Inc.",42985416,Data Packets/Communications Network|Data Packets/Network Connection|Data Packets/Intercepting|Virtual Server/Intercepting|Virtual Server/HTTP Request|Transport Layer Connection/HTTP Request|Transport Layer Connection/Response to the Client|Transport Layer Connection/Response from the Server,6/22/2009,2009,1/4/2031,Systems and methods of handling non-http client or server push on http vserver,The present application presents systems and methods for handling by an HTTP virtual server (HTTPVS) connections via which non-HTTP data is transmitted between clients and servers. HTTPVS intercepts a request from a client to establish first transport layer connection (TLC) with a server. HTTPVS establishes second TLC with the servers in response to receiving an acknowledgment from a client to establish the first TLC. HTTPVS determines if a first network packet transmitted via first TLC comprises an HTTP payload or non-HTTP payload. If HTTPVP the first network packet includes HTTP payload HTTPVS may process all transmissions from the first TLC in accordance with connection tracking and forward the processed transmissions to the server via the second TLC. If HTTPVS determines that the first network packet does not include an HTTP payload HTTPVS may link the first TLC and the second TLC so the client and server exchange non-HTTP communication without interruption.,287,49,,
8646067,PC,"Citrix Systems, Inc.",40900604,Virtual Server/Virtual Private Network|Private Networks/Network Session|Private Networks/Present Disclosure,1/26/2008,2008,2/27/2032,Policy driven fine grain url encoding mechanism for ssl vpn clientless access,The present disclosure presents methods systems and intermediaries which determine an encoding scheme of a uniform resource location (URL) from a plurality of encoding schemes for a clientless secure socket layer virtual private network (SSL VPN) via a proxy. An intermediary may receive a response from a server comprising a URL. The response from the server may be directed to a client via a SSL VPN session and via the intermediary. The intermediary may determine responsive to an encoding policy one of a transparent opaque or encrypted encoding scheme for encoding the URL. The intermediary may rewrite the URL for transmission to the client in accordance with the determined encoding scheme.,172,49,,
8769067,PC,"Citrix Systems, Inc.",43355246,Other Topics,6/22/2009,2009,5/5/2032,Systems and methods for statistics exchange between cores for load balancing,Systems and methods for consolidating metrics and statistics used for load balancing by a plurality of cores of a multi-core intermediary are disclosed. A timer operating on each packet engine of each core in a multi-core system may expire. A consolidator may store responsive to expiration of the timer a set of counter values from each of the packet engines to a first storage location. The consolidator may send to each packet engine a message to update the set of counter values. The consolidator may upon completion of updating the set of counter values by the packet engines send a second message to the packet engines that includes a consolidated set of counter values determined based on the updated set of values from each packet engine. Each packet engine may establish settings and parameters for load balancing based on the consolidated set of counter values.,329,49,,
8612546,PC,"Citrix Systems, Inc.",40085515,Local Computing/Computing Environment|Local Computing/Data Items,10/20/2007,2007,1/16/2028,System and method for transferring data among computing environments,Systems and methods for transferring data among computing environments include a method for transferring data items among a portion of a remote computing environment and a portion of a local computing environment using a presentation layer protocol. Data items are transferred during transfer cycles and upon the release of data objects into a destination computing environment. Transfer cycles may transfer data among local and remote computing environments among more than one remote computing environment and may further transfer in parallel with other transfer cycles. A first transfer cycle transferring a first data item continues to transfer the first data item when a second transfer cycle initializes and transfers a second data item during a portion of the first transfer cycle. Data operations may be performed on data items during the transfer of a data item and data items may be compressed or segmented prior to transfer.,228,49,,
9055080,PC,"Citrix Systems, Inc.",44227117,Directed Towards/Various Embodiments|Remote Access/Local Machine|Remote Access/Various Embodiments|Remote Machine/Remote Application|Remote Machine/Network Environment|Remote Machine/Access Control|Isolation Environment/Local Machine|Isolation Environment/Remote User,12/14/2009,2009,6/11/2032,Systems and methods for service isolation,The present invention is directed towards systems and methods of streaming an application from a remote location to a local machine system and using local machine system resources in executing that application. In various embodiments services needed by a streamed application may be started with high local system privileges in their own isolation environment. These service may be started stopped and otherwise managed by a Service Control Manager. In order for an application to both access services that operate at high local system privileges and the network so that it can access remotely stored streaming information; a streaming application may rely on privileges of the user when accessing network information rather than the higher privileges of the services running in isolation.,147,49,,
8750633,PC,"Citrix Systems, Inc.",42289188,Local Computing/Original Image,3/31/2009,2009,3/22/2030,Methods and systems for approximating progressive image encoding using image partitioning,An image partitioner that executes on a local computer to vertically partition pixels of an original image into one or more non-overlapping vertical rows of image pixels and horizontally partition the original image pixels into one or more non-overlapping horizontal rows of image pixels. The image partitioner can then separate the original image into a first sub-image that includes pixels of a first horizontal row and pixels of a first vertical row. The image partitioner can then separate the original image into a second sub-image that includes pixels of either the first horizontal row and a second vertical row or a second horizontal row and the first vertical row. The first sub-image and second sub-image are then transmitted to a remote computer that interlaces the first sub-image with the second sub-image to create a first combined image which approximates the original image on the local computer.,193,49,,
8381026,PC,"Citrix Systems, Inc.",43355350,Directed Towards/Multi-core|Directed Towards/Shared Resource,6/22/2009,2009,2/16/2031,Systems and method for transaction stall detection and propagating the result in a multi-core architecture,The present invention is directed towards systems and methods for determining failure in and controlling access to a shared resource in a multi-core system. In some embodiments of a multi-core system individual cores may share the same resource. Additionally the resource may occasionally fail or need to be reset and the period during which the resource is being reset may be non-instantaneous. In an embodiment without coordination between the cores one core experiencing a failure may reset the resource. During the period in which the resource is resetting another core may interpret the reset as a failure and reset the resource. As more cores interpret the resets as failures they will trigger resets quickly resulting in the resource being constantly reset and unavailable. Thus in some embodiments a coordination system may be utilized to determine failure of a shared resource and control resets and access to the shared resource.,133,49,,
8850050,PC,"Citrix Systems, Inc.",51588300,Computing Devices/Computer-readable Media|Computing Devices/Unmanaged Mode,3/29/2013,2013,9/30/2033,Providing a managed browser,Methods systems computer-readable media and apparatuses for providing a managed browser are presented. In various embodiments a computing device may load a managed browser. The managed browser may for instance be configured to provide a managed mode in which one or more policies are applied to the managed browser and an unmanaged mode in which such policies might not be applied and/or in which the browser might not be managed by at least one device manager agent running on the computing device. Based on device state information and/or one or more policies the managed browser may switch between the managed mode and the unmanaged mode and the managed browser may provide various functionalities which may include selectively providing access to enterprise resources based on such state information and/or the one or more policies.,210,48,,
8665265,PC,"Citrix Systems, Inc.",40591947,Remote Machine/Local Computing Machine|Remote Machine/Remote Application|Local Computing/Remote Computing Machine|Local Computing/Local Agent,1/27/2008,2008,1/27/2029,Methods and systems for remoting three dimensional graphics,Methods and systems for providing three dimensional graphics to remote computing machines and appliances that include an agent executing on a local computing machine to intercept a plurality of graphics commands generated by a three dimensional application executing on a local computing machine. A first portion of the plurality of graphics commands are encoded by the agent using a first codec while a second portion of the plurality of graphics commands are encoded by the agent using a second codec. The agent creates a frame comprising the first portion and the second portion of the plurality of graphics commands compresses the frame and transmits the frame to a remote computing machine.,139,48,,
8893221,PC,"Citrix Systems, Inc.",51588300,Computing Devices/Computer-readable Media|Computing Devices/Unmanaged Mode,3/29/2013,2013,9/30/2033,Providing a managed browser,Methods systems computer-readable media and apparatuses for providing a managed browser are presented. In various embodiments a computing device may load a managed browser. The managed browser may for instance be configured to provide a managed mode in which one or more policies are applied to the managed browser and an unmanaged mode in which such policies might not be applied and/or in which the browser might not be managed by at least one device manager agent running on the computing device. Based on device state information and/or one or more policies the managed browser may switch between the managed mode and the unmanaged mode and the managed browser may provide various functionalities which may include selectively providing access to enterprise resources based on such state information and/or the one or more policies.,249,47,,
8898732,PC,"Citrix Systems, Inc.",51588300,Computing Devices/Computer-readable Media|Computing Devices/Unmanaged Mode,3/29/2013,2013,9/30/2033,Providing a managed browser,Methods systems computer-readable media and apparatuses for providing a managed browser are presented. In various embodiments a computing device may load a managed browser. The managed browser may for instance be configured to provide a managed mode in which one or more policies are applied to the managed browser and an unmanaged mode in which such policies might not be applied and/or in which the browser might not be managed by at least one device manager agent running on the computing device. Based on device state information and/or one or more policies the managed browser may switch between the managed mode and the unmanaged mode and the managed browser may provide various functionalities which may include selectively providing access to enterprise resources based on such state information and/or the one or more policies.,303,47,,
8792491,PC,"Citrix Systems, Inc.",44543838,Directed Towards/Network Packets|Virtual Server/Client Devices|Intermediary Devices/Network Traffic|Intermediary Devices/Network Packets|IP Address/Network Traffic|IP Address/Packet Engine|IP Address/Source IP|IP Address/Network Layer|IP Address/Network Packets,8/12/2010,2010,5/18/2032,Systems and methods for multi-level quality of service classification in an intermediary device,The present invention is directed towards systems and methods for providing multi-level classification of a network packet. In some embodiments network performance may be enhanced and optimized by providing QoS and acceleration engines with packet- or data-specific information. In addition to source and destination IP addresses and port numbers packet- or data-specific information can include direction of traffic (client to host or server; server or host to client; or both) Virtual LAN (VLAN) ID source or destination application or associated application service class ICA priority type of service differentiated service code point (DSCP) or other information. Some or all of this information may be used to classify the network packet at a plurality of layers of a network stack allowing for deep inspection of the packet and multiple levels of granularity of classification.,154,47,,
8732242,PC,"Citrix Systems, Inc.",38626561,Computing Devices/Other Topics,5/4/2006,2006,5/4/2026,Methods and systems for bandwidth adaptive n-to-n communication in a distributed system,Methods and systems for bandwidth adaptive computing device to computing device communication are described. Bandwidth adaptive communication includes receiving a communication from a first participant storing the payload data of the communication in a channel memory element associated with the first participant and transmitting the payload data to a second participant.,393,47,,
8955033,PC,"Citrix Systems, Inc.",41651339,Other Topics,11/25/2008,2008,4/14/2031,Systems and methods for http callouts for policies,A method of identifying an action of a policy in association with communications between a client and one or more servers includes determining by an intermediary a policy action based on using a callout based policy. In one aspect an intermediary receives communications between a client and one or more servers. The intermediary identifies a policy for the communications the policy specifying a request and a server to communicate the request. Responsive to the policy the intermediary transmits the request to the server. Based on the server response to the request the intermediary determines an action of the policy. In another aspect a system for the present method includes an intermediary and a policy engine for identifying a policy to specify a request and a destination server. Responsive to a server response to the request the intermediary determines an action of the policy.,170,47,,
8566450,PC,"Citrix Systems, Inc.",42173171,Other Topics,11/25/2008,2008,11/25/2028,Systems and methods for gslb site persistence,The present invention provides maintains site persistence in a hierarchical Global Server Load Balancing (GSLB) deployment. Via configuration of GSLB services locally and remotely on each of the GSLB appliances and LB appliances at a site a site appliance identifies and associates requests from the GSLB with the site. Furthermore the site appliance may receive a GSLB cookie with the client request and confirms the request is from the expected GSLB in the site hierarchy. When the load balancers receives a response from a server the appliance may include the GSLB cookie with the response back to the client. The appliance may also include an LB cookie to identify the server selected by the LB. When the client sends another request the request may include the GSLB and LB cookie.,202,46,,
8737407,PC,"Citrix Systems, Inc.",42537936,Directed Towards/Multi-core,6/22/2009,2009,9/19/2031,Systems and methods for distributed hash table in multi-core system,The present invention is directed towards systems and methods for using a distributed hash table to maintain the same configuration and resource persistency across a plurality of cores in a multi-core system. The distributed hash table includes a plurality of partitions each partition being owned by a respective core of the multi-core system. A core may establish resources in the partition it owns. A core may request other cores to establish resources in the partitions they own and send resource information to the core. The core may locally cache the resource information.,256,46,,
8813179,PC,"Citrix Systems, Inc.",49484480,Computing Devices/Computer-readable Media|Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing|Mobile Devices/Monitor State,3/29/2013,2013,9/13/2033,Providing mobile device management functionalities,Methods systems computer-readable media and apparatuses for providing mobile device management functionalities are presented. In various embodiments a mobile device management agent may monitor state information associated with a mobile computing device. The monitored state information may be analyzed on the mobile computing device and/or by one or more policy management servers. In some instances the one or more policy management servers may provide management information to the mobile computing device and the management information may include one or more commands (which may e.g. cause the mobile computing device to enforce one or more policies) and/or one or more policy updates. Subsequently one or more policies may be enforced on the mobile computing device based on the monitored state information and/or based on the management information.,338,46,,
8839346,PC,"Citrix Systems, Inc.",44533107,Directed Towards/Uniform Resource,7/21/2010,2010,5/20/2031,Systems and methods for providing a smart group,The present invention is directed towards systems and methods for establishing and applying a policy group to control a user's access to an identified resource. A policy group representing an aggregate of one or more access configurations for a user to access one or more identified resources may be established via a policy manager. The policy group may include a login point component representing an entry point to access the identified resource. The login point may be configured via the policy manager to specify a uniform resource locator for the entry point. One or more authentication and authorization methods may be selected for the login point component. The device may receive a request to access the uniform resource locator. The device may initiate the policy group for evaluation. The device may initiate with the user one or more authentication and authorization methods specified by the login point component.,227,46,,
8631149,PC,"Citrix Systems, Inc.",41693540,Other Topics,11/25/2008,2008,1/11/2031,Systems and methods for object rate limiting,The present application is generally directed to systems and method for throttling a rate of requests between a client and a server using user specified inputs. A rate of requests for an object may be throttled by an intermediary which receives requests transmitted between a client and a server and via the intermediary. The intermediary may receive a request from a client for an object of a server. The intermediary may identify a policy specifying a mode of throttling for the request the policy specifying a mode of throttling a rate threshold and a period of time for the rate threshold. The rate throttler of the intermediary may determine whether the request exceeds the rate threshold for the period of time based on the mode of throttling of the policy and allow or block the request responsive to the determination.,149,45,,
8769063,PC,"Citrix Systems, Inc.",50000688,Mobile Devices/Enterprise Applications|Software Application/Enterprise Applications,10/11/2011,2011,10/10/2032,Policy-based application management,Improved techniques for managing enterprise applications on mobile devices are described herein. Each enterprise mobile application running on the mobile device has an associated policy through which it interacts with its environment. The policy selectively blocks or allows activities involving the enterprise application in accordance with rules established by the enterprise. Together the enterprise applications running on the mobile device form a set of managed applications. Managed applications are typically allowed to exchange data with other managed applications but are blocked from exchanging data with other applications such as the user's own personal applications. Policies may be defined to manage data sharing mobile resource management application specific information networking and data access solutions device cloud and transfer dual mode application software enterprise app store access and virtualized application and resources among other things.,258,45,,
8811223,PC,"Citrix Systems, Inc.",43354277,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Directed Towards/Various Embodiments,6/22/2009,2009,8/28/2031,Systems and methods for distributing crypto cards to multiple cores,The present invention is directed towards systems and methods for distributed operation of a plurality of cryptographic cards in a multi-core system. In various embodiments a plurality of cryptographic cards providing encryption/decryption resources are assigned to a plurality of packet processing engines in operation on a multi-core processing system. The packet processing engines can be configured to operate in user space of a system and can access cryptographic resources via memory allocations mapped from kernel space to user space. A method for use with the multi-card/multi-core system can comprise detecting by a kernel of the multi-core system a plurality of cryptographic cards available to the system identifying by a configurator of the multi-core system a plurality of packet processing engines configured to operate in user space on a plurality of cores of the multi-core system and determining by a card distribution manager a distribution layout that identifies an assignment of the plurality of cryptographic cards to the plurality of packet processing engines.,152,45,,
8407698,PC,"Citirx Systems, Inc., Florida",40900531,Virtual Machine/Virtual Disk,1/25/2008,2008,1/27/2032,Driver installation and diskless booting of virtual and physical machines based on machine characteristic,Methods and systems are described for provisioning a common virtual disk to both a physical and a virtual computing machine. These methods and systems can include creating a virtual disk that has binding information for both a paravirtual network interface card and a physical network interface card so that either a virtual machine having a paravirtual network interface card or a physical machine having a physical network interface card may boot from the created virtual disk. Creation of the virtual disk can include exposing the paravirtual network interface card to a physical machine so that an installer program may bind to both the paravirtual network interface card and the physical network interface card.,129,44,,
8533337,PC,"Citrix Systems, Inc.",44902694,Directed Towards/Computing Environment,5/6/2010,2010,10/20/2031,Continuous upgrading of computers in a load balanced environment,The present invention is directed towards methods and systems for performing maintenance on computers included in a group of load balanced computer. A maintenance agent identifies a computers in the group as requiring maintenance and a second computer as having up-to-date maintenance and a load level below a limit. The load balancer may assign a request to the second computer responsive to the identification. Responsive to a determination that spare capacity from the plurality of computers available to receive requests is above the threshold and that the first computer is idle the maintenance agent may remove for maintenance the first computer from the plurality of computers available to receive requests. The maintenance agent may identify the first computer as having up-to-date maintenance responsive to the maintenance.,265,44,,
8745755,PC,"Citrix Systems, Inc.",49725950,Other Topics,10/12/2012,2012,8/9/2033,Controlling device access to enterprise resources in an orchestration framework for connected devices,Aspects described herein allow multiple devices to function as a coherent whole allowing each device to take on distinct functions that are complementary to one another. Aspects described herein also allow the devices function as a coherent whole when interconnected devices and their respective applications are configured to operate in various operation modes when management policies are employed to control the operation of the interconnected devices and their respective applications when transferring content between the interconnected devices and storing the content at those devices when obtaining access credentials for the interconnected devices that enable the devices to access enterprise resources when a policy agent applies management policies to control operation of and interaction between the interconnected devices and when the interconnected devices are used to access an enterprise application store.,213,44,,
8819561,PC,"Citrix Systems, Inc.",41862150,Directed Towards/Other Topics|Virtual Server/Client Devices|Intermediary Devices/Network Traffic|Graphical User Interface/Other Topics,11/12/2008,2008,2/14/2032,Tool for visualizing configuration and status of a network appliance,The present invention is directed towards systems and methods of providing management of network services provided by an intermediary device managing traffic between a plurality of clients and servers. The intermediary device may include one or more virtual servers managing a plurality of services. A user can invoke a visualizer tool of the intermediary device to identify a configuration and an operational status of the virtual servers and services managed by the virtual servers. The visualizer tool may also determine from the configuration two or more services having a common set of configuration properties and managed by a first virtual server. The visualizer tool may establish a service container comprising these services. The visualizer tool may display via an interface a graphical representation of the configuration and the operational status of the first virtual server and the service container identifying the common set of configuration properties of these services.,200,44,,
8832260,PC,"Citrix Systems, Inc.",40877313,Remote Access/User Application Requests|Server Farm,10/5/2007,2007,9/23/2028,Systems and methods for monitoring components of a remote access server farm,The present application is related methods to monitor a state of one or more components of a remote access server farm by an intermediary to distinguish between operating and functional components and improve farm availability for user application requests. The intermediary may be deployed between a client and the remote access server farm and forwards client requests to functional components of the remote access server farm.,153,44,,
8769156,PC,"Citrix Systems, Inc.",44152751,IP Address/Source IP|IP Address/Data Link Layer|Transport Layer Connection/Intermediary|Transport Layer Connection/Response to the Client|Transport Layer Connection/Response from the Server|Transport Layer Connection/Present Disclosure|Transport Layer Connection/Cache Server|MAC Address,12/23/2009,2009,12/30/2030,Systems and methods for maintaining transparent end to end cache redirection,The present disclosure presents systems and methods for maintaining original source and destination IP addresses of a request while performing intermediary cache redirection. An intermediary receives a request from a client destined to a server identifying a client IP address as a source IP address and a server IP address as a destination IP address. The intermediary transmits the request to a cache server the request maintaining original IP addresses and identifying a MAC address of the cache server as the destination MAC address. The intermediary receives the request from the cache server responsive to a cache miss the received request maintaining the original source and destination IP addresses. The intermediary identifying that the third request is coming from the cache server via one or more data link layer properties of the third transport layer connection. The intermediary transmits to the server the request identifying the client IP address as the source IP address and the server IP address as the destination IP address.,425,43,,
8549596,PC,"Citrix Systems, Inc.",40833436,Remote Access/Resource Provided|Remote Machine/Resource Provided|Authentication Credentials,2/15/2008,2008,9/29/2031,Systems and methods for secure handling of secure attention sequences,A method for authenticating by a trusted component a user of a desktop appliance to a remote machine includes executing by a desktop appliance a user interaction component responsive to receiving a secure attention sequence from a user. The user interaction component receives authentication credentials associated with the user. The desktop appliance transmits to a broker service the received authentication credentials. The broker service authenticates the user responsive to the received authentication credentials. The broker service transmits to a remote machine authentication data associated with the received authentication credentials. The remote machine authenticates the user responsive to the received authentication data. The remote machine provides to the desktop appliance access to a resource requested by the user. In another aspect a trusted component provides to a user of a desktop appliance access to secure desktop functionality provided by a remote machine.,173,43,,
7987243,PC,Bytemobile Inc,40202847,Other Topics,7/10/2007,2007,2/16/2029,Method for media discovery,A method including receiving a request for a web page; communicating with a content server by receiving content associated with the requested web page; determining whether the content includes particular content requiring plug-in support; initiating a native plug-in to handle the particular content; receiving a request for additional content from the native plug-in; retrieving the additional content for the native plug-in; monitoring the additional content to determine whether the additional content includes media content; and updating the content for the requested web page based on the monitoring.,198,43,,
8621587,PC,"Citrix Systems, Inc.",37963021,Other Topics,10/11/2005,2005,10/6/2026,Systems and methods for facilitating distributed authentication,A method for facilitating distributed authentication includes the step of requesting by a user of a client machine residing in a first domain access to a resource residing in a second domain. The client machine authenticates the user to an intermediate machine. The intermediate machine impersonates the client machine. The intermediate machine impersonating the client machine requests access to the second domain from a domain controller residing in the second domain. The domain controller authorizes the requested access responsive to a determination that the impersonated client machine is trusted for delegation. The domain controller transmits to an application server residing in the second domain authentication data associated with the impersonated client machine. The application server transmits to the intermediate machine a launch ticket uniquely identifying a logon token. The client machine provides to the application server the launch ticket to access the resource residing in the second domain.,146,42,,
8856078,PC,"Citrix Systems, Inc.",48983245,Virtual Machine/Computing Environment|Virtual Machine/Hypervisor|Virtual Machine/Virtual Disk,2/21/2012,2012,8/31/2032,Dynamic time reversal of a tree of images of a virtual hard disk,A technique manages a virtual hard disk tree in a computing system executing a hypervisor to provide a client virtualization environment. The technique involves linking by a client executing within a control virtual machine of the client virtualization environment a first delta image of a virtual hard disk generated later in time to a base image of the virtual hard disk. The technique further involves modifying contents of the first delta image the base image and a second delta image which is linked to the base image; and deleting the second delta image after modifying the contents of the first delta image the base image and the second delta image. The base image and the first delta image together with additional delta images of the virtual hard disk comprise a tree of images of the virtual hard disk.,135,41,,
8887227,PC,"Citrix Systems, Inc.",44512352,Computing Devices/Computing Environment|Computing Devices/Virtualization Environment|Virtual Machine/Computing Environment,3/23/2010,2010,12/10/2031,Network policy implementation for a multi-virtual machine appliance within a virtualization environtment,A networking policy implementation for a multi-virtual machine appliance that includes a method for selecting a network implementation by applying a network policy to existing network configurations within a virtualization environment of a computing device. A control program that executes within the virtualization environment receives an event notification generated by a virtual machine in response to a lifecycle event. The control program in response to receiving the notification invokes a policy engine that applies a network policy to existing network configurations of the virtualization environment. This network policy can correspond to the virtual machine or to a network object connected to virtual interface objects of the virtual machine. The policy engine then identifies an existing network configuration that has attributes which satisfy the network policy and selects a network implementation that satisfies the network policy and the network configuration.,159,41,,
8553699,PC,"Citrix Systems, Inc.",46302424,Other Topics,10/30/2002,2002,10/29/2023,Wavefront detection and disambiguation of acknowledgements,One or more flow control modules implemented on various types of network topologies provide a number of functionalities for controlling the flow of IP packets (such as TCP/IP packets) over a network connection. The flow control modules may be implemented within a sender and/or receiver or may be deployed into a network as a separate device without requiring significant additional resources.,203,41,,
8819707,PC,"Citrix Systems, Inc.",42543166,Computing Devices/Computing Environment|Computing Devices/Virtualization Environment|Computing Devices/External Media|Virtual Machine/Computing Environment|Virtual Machine/Guest,6/18/2009,2009,8/16/2032,Methods and systems for importing a device driver into a guest computing environment,A system for importing from a host computer a device driver into a guest computing environment provided by an external media device which does not include the device driver includes a first computing environment a second computing environment a device discovery agent a device driver discovery agent and a device driver installation agent. A device driver associated with a device available to a first computing environment is installed on a computing device. The second computing environment is executed by a virtual machine on the computing device based upon data retrieved from an external media device. The device discovery agent identifies a device available to the second computing environment. The device driver discovery agent determines that the installed device driver is associated with the device available to the second computing environment. The device driver installation agent imports the installed device driver into the second computing environment without user input.,147,41,,
8954467,PC,"Citrix Systems, Inc.",49517651,Computing Devices/Client Devices,11/29/2012,2012,12/14/2032,Systems and methods for automatically associating communication streams with a file presented during a meeting,Systems and method for sharing a file presented during a meeting are described. In some aspects an operating system of a first client computing device of a presenter in an online meeting is monitored during the online meeting. The first client computing device of the presenter is engaged in screen sharing with a second client computing device of at least one other participant in the online meeting. That one or more files accessible via the operating system are being presented in the online meeting is determined based on the monitoring. The one or more files are provided to a set of users in response to determining that the one or more files are being presented in the online meeting.,216,41,,
9059934,PC,"Citrix Systems, Inc.",47913550,Other Topics,2/24/2012,2012,4/8/2033,Window regulator for improved performance in a communications network,A window regulator for improving the performance of communications networks is described. In a communications network data is sent downstream from a sender to a receiver and acknowledgements are sent back upstream. When data is received at the receiver the data is placed in a buffer and an acknowledgement of receipt may be sent. If no acknowledgement is received by a sender after a certain period of time the sender retransmits the data. The receiver communicates how much data the receiver is willing to receive at any given time by sending an advertised window to the sender. The window regulator sets the size of the advertised window based on measurements of capacity in the network to improve the amount and rate of data sent downstream while avoiding loss of data and subsequent retransmissions.,235,41,,
8849979,PC,"Citrix Systems, Inc.",51588295,Computing Devices/Computer-readable Media|Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing|Mobile Devices/Monitor State,3/29/2013,2013,9/13/2033,Providing mobile device management functionalities,Methods systems computer-readable media and apparatuses for providing mobile device management functionalities are presented. In various embodiments a mobile device management agent may monitor state information associated with a mobile computing device. The monitored state information may be analyzed on the mobile computing device and/or by one or more policy management servers. In some instances the one or more policy management servers may provide management information to the mobile computing device and the management information may include one or more commands (which may e.g. cause the mobile computing device to enforce one or more policies) and/or one or more policy updates. Subsequently one or more policies may be enforced on the mobile computing device based on the monitored state information and/or based on the management information.,175,40,,
8477651,PC,"Citrix Systems, Inc.",39188456,Other Topics,9/15/2006,2006,9/15/2026,Methods for providing performance improvement recommendations,In a method of providing a performance improvement recommendation for a connection between a first network node in communication with a second network node information is transmitted from the first node to the second node to provide communication between the nodes via a number of transmission components. An elapsed time of transmission of the information between a subset of the transmission components is measured the aggregation of the measurements representing time elapsed for end-to-end transmission of the information that includes preparing by the first node the information for transmission and processing by the second node the information upon receipt. A determination is made that one of the measured transmission components has a performance that crosses a predetermined threshold. A recommendation is identified to improve the performance of the identified component.,216,39,,
9021475,PC,"Citrix Systems, Inc.",46086067,Virtual Machine/Other Topics|Intermediary Devices/Network Packets|Intermediary Devices/Virtualization Environment,5/4/2011,2011,11/22/2032,Systems and methods for sr-iov pass-thru via an intermediary device,This disclosure describes a system for Single Root I/O Virtualization (SR-IOV) pass-thru for network packet processing via a virtualized environment of a device. The system includes a device comprising a virtualized environment and a plurality of virtual machines having a virtual network interface for receiving and transmitting network packets. A driver for the physical network interface of the device creates a plurality of virtual devices corresponding to the physical network interface which appear as a Peripheral Component Interconnect (PCI) device to the virtualized environment. A virtual device of the plurality of virtual devices is assigned via the virtualized environment to each virtual machine of the plurality of virtual machines. The virtual machine uses the virtual device assigned to the virtual machine to receive and transmit network packets via the physical network interface of the device.,236,39,,
8914527,PC,"Citrix Systems, Inc.",43781541,Server Farm,6/30/2009,2009,7/20/2032,Methods and systems for load balancing using forecasting and overbooking techniques,Methods and systems for establishing user sessions between a client and a server or server farm can be carried out by a load balancing agent executing on a computer in communication with the client server or server farm. The load balancing agent can intercept a connection request generated by an application executing on a client and responsively select a server on which to establish a user session. Selecting the server can be based on overbooking a particular server and choosing a server with a predetermined amount of forecasted load. Forecasted load can be determined by summing the current load on a server with a current load calculated by multiplying: the average load on the user sessions hosted by the server; by the number of cached user sessions stored on the server; and by the probability that a cached user session reconnects.,227,39,,
8994781,PC,"Citrix Systems, Inc.",50280532,Other Topics,3/1/2013,2013,6/5/2033,Controlling an electronic conference based on detection of intended versus unintended sound,A technique manages an electronic conference. The technique involves receiving a set of audio signals from a set of participants of the electronic conference each audio signal being received from a respective participant. The technique further involves categorizing the set of audio signals received from the set of participants each audio signal being individually categorized as currently representing (i) intentional participant sound or (ii) unintentional participant sound. The technique further involves controlling operation of the electronic conference based on the categorized set of audio signals.,129,39,,
7864772,PC,"Citrix Systems, Inc.",40765951,Data Packets/Data Streams|Data Packets/Network Connection,12/15/2004,2004,12/15/2024,Protecting data integrity in an enhanced network connection,The integrity of a data stream transmitted over a network is protected by adjusting the sequence number the port number or another field of a data packet field for a number of data packets so that the data packets will be considered either valid or invalid by a downstream receiving device. Data packets that have such a field adjusted can be thought of as being rotated outside of a valid range or window as defined for a network connection. This field of a rotated data packet can be further adjusted through de-rotation or re-rotation for various applications. Downstream devices can thus respond to the data packets depending on the state of the rotation.,152,39,,
8997080,PC,"Citrix Systems, Inc.",50231526,Virtual Server/Virtual Disk|Virtual Server/Desktop|Virtual Machine/Virtual Disk|Software Application/Software Application Deployments|Software Application/Infrastructure,2/11/2013,2013,9/26/2033,System updates with personal virtual disks,A method and system for updating a collection of software resources in a virtual desktop infrastructure system. Virtual machines associated with sets of virtual disk elements in a hierarchy of disk layers such as basic department or user virtual disks are offered updates for one or more available software resources. Updates available for deployment in the virtual desktop infrastructure system are recorded in a database by a controller server. The controller server takes an inventory of all the virtual machines associated with each disk layer in the hierarchy of disk layers on which to apply the available updates. The controller server applies the one or more updates to the identified virtual machines and stores the update application results in a database. The controller server may apply the one or more updates to virtual machines associated with descendant disk layers in the hierarchy of disk layers in view of previous applications of the updates.,234,38,,
8990898,PC,"Citrix Systems, Inc.",47843386,Other Topics,2/16/2012,2012,1/25/2033,Connection leasing for hosted services,Aspects herein describe brokering hosted resources in a virtual desktop infrastructure (VDI) using connection leases to reduce demand on connection brokers and to allow hosted services to be maintained even in the event of a broker outage. When a client device desires to connect to a hosted resource (e.g. a hosted desktop or a hosted application) the client device may present a lease token to the session host. The lease token is a self-sustaining package of data from which a session host can determine whether the requesting client device is authorized to access one or more resources hosted by that session host. The lease token may be cryptographically signed to ensure its contents have not been altered and further that the lease token originated from a trusted source. Lease tokens may be stored independently from a connection broker thereby still being usable if the connection broker goes offline.,238,38,,
9055064,PC,"Citrix Systems, Inc.",44189149,Directed Towards/Multi-core|Directed Towards/Shared Resource|Virtual Server/Client Devices|Virtual Server/Virtual Private Network|Intermediary Devices/Multi-core|Intermediary Devices/Intermediary Receives a Request from a Client|Private Networks/Network Session,12/28/2009,2009,6/17/2032,Systems and methods for a vpn ica proxy on a multi-core system,The present invention is directed towards systems and methods for sharing licenses across resources via a multi-core intermediary device. A device intermediary to a plurality of clients and a server may grant a license for a virtual private network (VPN) session established by a first core of a plurality of cores of the device with a client. A second core of the plurality of cores may receive a first request from the client to establish an application connection between an application and a server via the VPN session. The second core may send a second request to the first core to share the license of the VPN session responsive to determining that the first core owns the VPN session. The second core may establish the application connection responsive to receiving from the first core a response accepting the second request to share the license of the VPN session.,245,38,,
9065866,PC,"Citrix Systems, Inc.",--,Intermediary Devices/Network Traffic|Intermediary Devices/Present Disclosure|Intermediary Devices/Intermediary Receives a Request from a Client,12/27/2011,2011,12/30/2032,Systems and methods for policy based integration to horizontally deployed wan optimization appliances,The present disclosure presents systems and methods for policy-based redirection of network traffic by an intermediary device to a horizontally deployed WAN device. An intermediary receives a request from a client to access a server. The request was previously modified by a first WAN device to include information in an option field of a transport layer. The intermediary may determine responsive to a redirection policy to send the request to a second WAN device deployed horizontally from the intermediary instead of the server. The intermediary transmits the request to the second WAN device while maintaining the information from the option field. The intermediary device receives the request including the information identifying the first WAN optimization device to the second WAN device. The intermediary receives a modified request from the second WAN device the modified request determined by the intermediary to be sent to the destination server.,269,38,,
8850429,PC,"Citrix Systems, Inc.",45935257,Virtual Server/Desktop,10/5/2010,2010,2/29/2032,Load balancing in multi-server virtual workplace environments,Virtual workplace server software may perform load balancing functionality in a multi-server desktop virtualization system. One or more virtualization servers may receive and maintain common state information for the desktop virtualization system and may independently execute one or more load balancing functions based on the common state information. Each server may independently analyze the common state information and determine whether it will execute a load balancing function based on the analysis thereby allowing the servers to coordinate actions using distributed load balancing algorithms.,299,38,,
8935399,PC,"Citrix Systems, Inc.",44152676,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Directed Towards/User Session|Virtual Server/Client Devices|Virtual Server/Packet Processing Engines|Intermediary Devices/Multi-core|Intermediary Devices/User Session,12/23/2009,2009,12/23/2029,Systems and methods for managing preferred client connectivity to servers via multi-core system,The present application is directed towards systems and methods for providing a cookie by an intermediary device comprising a plurality of packet processing engines executing on a corresponding plurality of cores the cookie identifying a session of a user that was redirected responsive to a service exceeding a response time limit. The cookie may be generated with identifiers based off a name of a virtual server managing a service of a server and a name of a policy associated with the virtual server. Each packet processing engine of the plurality of packet processing engines may interpret cookies generated by other packet processing engines due to the name of the virtual server and name of the policy and may provide preferred client connectivity based on cookies included in requests for access to a service.,223,37,,
8296352,PC,"Citrix Systems, Inc.",40433032,Remote Access/Resource Provided|Remote Access/Local Machine|Remote Machine/Resource Provided|Remote Machine/Graphical Data,9/12/2007,2007,9/12/2028,"Methods and systems for providing, by a remote machine, access to graphical data associated with a resource provided by a local machine",A method for providing by a remote machine access to graphical data associated with a resource provided by a local machine includes initializing by a remote agent on a remote machine a proxy icon handler. The proxy icon handler receives from an icon handler on a local machine data associated with an icon for a resource provided by the local machine. The proxy icon handler modifies a window in a remote desktop environment displaying a plurality of icons including at least one icon associated with a resource provided by the remote machine and the icon associated with the resource provided by the local machine. The remote agent transmits to the local machine window attribute data associated with the modified window and graphical data representing the window displaying the plurality of icons. The local agent displays the received graphical data in a window formed according to the received window attribute data.,155,37,,
8271645,PC,"Citrix Systems, Inc.",44062911,Directed Towards/Network Packets|Directed Towards/Present Disclosure|Intermediary Devices/Network Packets|Intermediary Devices/Present Disclosure,11/25/2009,2009,10/19/2030,Systems and methods for trace filters by association of client to vserver to services,The present disclosure is directed towards systems and methods for tracing packets via an intermediary device. The systems and methods include an intermediary device that establishes connections with clients and connections with servers. The intermediary device links a connection to a server with a connection to a client to provide a client with access to the server. When the client requests a packet trace the intermediary device applies the trace to linked connections with the client to obtain full trace information for network packets servicing the client.,235,37,,
8856486,PC,"Citrix Systems, Inc.",46653721,Other Topics,2/23/2011,2011,4/29/2033,Deploying a copy of a disk image from source storage to target storage,A technique deploys a copy of a disk image from source storage to target storage. The technique involves identifying a particular disk image to be copied from the source storage to the target storage. The technique further involves performing a comparison operation between a first disk image list which lists disk images on the source storage and a second disk image list which lists disk images on the target storage to generate a common disk image list which lists a set of common disk images on both the source and target storage. The technique further involves transferring from the source storage to the target storage a set of data portions representing differences between the particular disk image and a common disk image listed on the common disk image list. The set of data portions in combination with the common disk image form a deployed copy on the target storage.,175,37,,
8140534,PC,Citrix Systems International Gmbh,40339077,Other Topics,8/3/2007,2007,4/26/2030,System and method for sorting attachments in an integrated information management application,A system and method to sort attachments in an integrated information management application. The system includes an email agent and email repository and an attachment engine. The email agent facilitates organization of email communications within the integrated information management application. The email repository is coupled to the email agent. The email repository stores a plurality of email files and a plurality of email attachments. The email attachments are associated with at least some of the email files. The attachment engine is coupled to the email agent. The attachment engine generates a list of the email attachments within the email repository for visual communication on a display device.,123,36,,
8583662,PC,Citrix Systems International Gmbh,41693466,Other Topics,12/30/2008,2008,12/30/2028,Managing data across a plurality of data storage devices based upon collaboration relevance,A computer-implemented method of managing data storage according to collaborative activity can include determining collaborative activity for each of a plurality of data items associated with a first user and stored within a first data storage device. The method can include calculating a measure of relevancy for each of the plurality of data items according to the collaborative activity and comparing the measure of relevancy of each of the plurality of data items to at least one relevancy threshold. Different ones of the plurality of data items can be selectively migrated from the first data storage device to a second data storage device according to the comparison of the measure of relevancy of each of the plurality of data items.,120,36,,
9003203,PC,"Citrix Systems, Inc.",47846121,Virtual Machine/Storage Area,1/23/2012,2012,2/14/2033,Storage encryption,Storage associated with a virtual machine or other type of device may be migrated between locations (e.g. physical devices network locations etc.). To maintain the security of the storage a system may manage the encryption of the storage area such that a storage area is encrypted with a first encryption key that may be maintained through the migration. A header of the storage area on the other hand may be encrypted using a second encryption key and the first encryption key may be stored therein. Upon transfer the header may be re-encrypted to affect the transfer of security.,152,36,,
9032062,PC,"Citrix Systems, Inc.",47175789,Mobile Devices/User Interface|Mobile Devices/Content Server,5/20/2011,2011,3/31/2033,Shell integration on a mobile device for an application executing remotely on a server,The systems and methods described herein are directed to permit roaming of applications across devices consistently and dynamically. Other aspects include roaming of application idiosyncrasies data or content specific to each application user preferences specific to each application or content such as pinning or unpinning and user history specific to each application in a consistent and complete fashion across diverse devices to provide seamless integration with the native device user interface. Application idiosyncrasies may include different options supported by the applications groups of tasks or content dynamically changing user interface and tasks or content based on application state or user actions. In another aspect the systems and methods described herein seamlessly integrate roaming with the user interface of the native device such as a tablet or a smart phone. The systems and methods described herein make work shift in distributed and diverse device environment practical and extremely usable.,144,36,,
8423654,PC,"Citrix Systems, Inc.",42035977,Computing Devices/Other Topics|Local Computing/Local Agent|Local Computing/Request Data,4/24/2009,2009,9/26/2031,Methods and systems for preventing a local display device from displaying data generated by a remote computing device,A method and system for preventing a local display device from displaying data generated by a remote computing device is described. The system includes a local agent for facilitating a remote session; an operating system generating a request to enable a display device controlled by a display adapter; and a filter executing in a driver and in communication with the local agent the filter intercepting the request generated by the operating system. The filter transmits the request to the local agent when a remote user is active or to the display adapter when the remote user is inactive. The filter will transmits a signal to the operating system that the display adapter has enabled the display device when the filter transmits the request to at least one of the local agent and the display adapter.,103,35,,
8527641,PC,"Citrix Systems, Inc.",41721010,Intermediary Devices/Intermediary Receives a Request from a Client|Intermediary Devices/DNS|IP Address/DNS,11/25/2008,2008,10/7/2030,Systems and methods for applying transformations to ip addresses obtained by domain name service (dns),Described herein are systems and methods for improving networked communication systems by transforming IP addresses. In particular an intermediary device disposed in a network between a plurality of clients and a plurality of servers can receive a request for a service offered at a specified domain name. The appliance can also receive a DNS-resolved primary address for a server associated with the domain name and transform the primary address to a secondary address for the server. The address transformation can be done by the intermediary to prevent service interruption between a client and server due for example to server maintenance.,161,35,,
8554892,PC,"Citrix Systems, Inc.",43354272,Data Packets/Packet Engine|Data Packets/Communications Network,6/22/2009,2009,3/26/2031,Systems and methods for n-core statistics aggregation,Described herein are systems and methods for aggregating performance data or trace data for a multi-core multi-packet-engine networked appliance. A plurality of packet engines operate on the appliance and manage network traffic between a plurality of clients and a plurality of servers. In various embodiments the system comprises a plurality of packet engines and an aggregator communicating with the packet engines through shared memory allocations. Each packet engine can write performance data or trace data to the a shared memory allocation. The aggregator can obtain the performance data or trace data and consolidate the data to provide unified performance data or unified trace data representative of the appliance.,237,34,,
8869300,PC,"Citrix Systems, Inc.",44914918,Computing Devices/Other Topics|Directed Towards/Uniform Resource|Virtual Machine/Hypervisor|Virtual Machine/Redirection,5/10/2010,2010,5/9/2031,Redirection of information from secure virtual machines to unsecure virtual machines,The present invention is directed towards methods and systems for redirecting an access request to an unsecure virtual machine. A computing device may execute a hypervisor hosting a secure virtual machine and an unsecure virtual machine. A control virtual machine hosted by a hypervisor executing on the computing device may intercept a request to access an unsecure resource. The unsecure resource may include one of: a file an application and an uniform resource locator (URL). The control virtual machine may further determine that the request originates from a secure virtual machine executing on the computing device. The control virtual machine may redirect responsive to the determination the request to an unsecure virtual machine executing on the computing device whereupon the unsecure virtual machine may provide access to the requested unsecure resource.,309,34,,
8533317,PC,"Citrix Systems, Inc.",43067213,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines,6/22/2009,2009,2/3/2032,Systems and methods for monitor distribution in a multi-core system,The present invention is directed towards systems and methods for monitoring services in a multi-core system. The systems and methods distribute the monitors for a service and the ownership of a service across the cores of the multi-core device. The greater resources of the multi-core device process the workload of the monitors for the services and the workload for monitoring the states of the services more efficiently than a single packet engine on a core.,195,34,,
8813203,PC,"Citrix Systems, Inc.",39873554,Authentication Credentials,10/20/2006,2006,10/19/2027,"Methods and systems for completing, by a single-sign on component, an authentication process in a federated environment to a resource not supporting federation",A system for distributed authentication includes a client machine in a first domain in a federation that receives from a user a first set of authentication credentials. The system also includes an intermediate machine in a second domain in the federation a server also in the second domain a password management program executing on the server and a non-federated resource. The intermediate machine authenticates the user responsive to receiving the first set of authentication credentials and identifies a second set of authentication credentials. The server in the second domain authenticates the user responsive to the second set of authentication credentials. The password management program executing on the server retrieves a third set of authentication credentials associated with the user. The non-federated resource authenticates the user responsive to receiving from the password management program the third set of authentication credentials.,207,33,,
8970450,PC,"Citrix Systems, Inc.",47354772,Virtual Machine/Computing Environment|Virtual Machine/Redirection|Remote Machine/Resource Provided|Remote Machine/Local Computing Machine|Remote Machine/Computing Environment|Remote Machine/Remote Application|Remote Machine/Remote File|Local Computing/Remote Computing Machine|Local Computing/Computing Environment|Local Computing/Remote File,3/3/2011,2011,12/30/2032,Reverse seamless integration between local and remote computing environments,Methods and systems for transparent user interface integration between remote (published) applications and their local counterparts are described providing a seamless unified user experience and allowing integration of a start menu dock taskbar desktop shortcuts windows window and application switching system tray elements client-to-host and host-to-client file type association URL redirection browser cookie redirection token redirection status message interception and redirection and other elements. These methods and systems further enhance theme-integration between a client and remote desktop or virtual machine by remoting all UI elements to a recipient for generation including text controls buttons progress bars radio buttons list boxes or other elements; presenting them with the receiver's product and OS-specific UI; and returning status back to the sender. This may achieve a more unified and transparent UI integration. Furthermore storage resources printer resources and identity-based resources may be integrated using a reverse seamless user interface.,152,33,,
9015311,PC,"Citrix Systems, Inc.",46201850,Intermediary Devices/Network Traffic|Intermediary Devices/Network Packets|Intermediary Devices/Internet Protocol Address,5/24/2011,2011,6/13/2032,Systems and methods for analyzing network metrics,The present solution is directed to systems and methods for providing by a device intermediary to a plurality of clients and one or more servers analytics on a stream of network packets traversing the device. The systems and methods include the device identifying while the device manages network traffic between the plurality of clients and the one or more servers a stream of network packets from a plurality of streams of network packets of the network traffic traversing the device corresponding to a flow identifier e.g. a selected one of an internet protocol address a uniform resource locator or an application identifier. The systems and methods may include a collector of the analytics engine collecting while the device manages network traffic metrics on the identified stream of network packets and generating one or more stream objects that comprise the collected metrics.,216,33,,
8843645,PC,"Citrix Systems, Inc.",45353595,Data Packets/Client Devices|Data Packets/Data Structures|Intermediary Devices/Predetermined Threshold|Intermediary Devices/Intermediary Receives a Request from a Client|Intermediary Devices/Subsequent Request|Intermediary Devices/Detecting Transaction|Transport Layer Connection/Intermediary|Transport Layer Connection/Predetermined Threshold|Transport Layer Connection/Transport Layer Protocol,6/24/2010,2010,6/6/2031,"Systems and methods for detecting incomplete requests, tcp timeouts and application timeouts",Described herein is a method and system for preventing Denial of Service (DoS) attacks. An intermediary device is deployed between clients and servers. The device receives a first packet of an application layer transaction via a transport layer connection between the device and client. The device records a last activity time for the transport layer connection based upon the timestamp of the first packet. The device receives subsequent data packets and determines whether the data in the packets completes a protocol data structure of the application layer protocol. If the device determines that the subsequent packet completes the protocol data structure the last activity time is updated. If the device determines that the application layer protocol remains incomplete the device retains the last activity time and determines that the duration of inactivity for the transport layer connection exceeds a predetermined threshold. The device may subsequently drop the connection.,191,33,,
8892783,PC,"Citrix Systems, Inc.",43355303,Directed Towards/Multi-core|Directed Towards/Shared Resource,6/22/2009,2009,11/30/2032,Systems and methods for initialization and link management of nics in a multi-core environment,The present application is directed towards systems and methods for coordination and management of a shared resource in a multi-core system. In a multi-core system multiple cores may be utilizing a shared resource. However internal resources common to the shared resource may need to be initialized by only one core and independent and uncoordinated initialization by multiple cores may cause errors. The present invention provides systems and methods for coordinating such initialization and use through a handshaking protocol.,147,32,,
9015304,PC,"Citrix Systems, Inc.",48700739,Directed Towards/Present Disclosure|Intermediary Devices/Present Disclosure,6/15/2012,2012,10/4/2032,Systems and methods for supporting a snmp request over a cluster,The present disclosure is directed towards systems and methods for supporting Simple Network Management Protocol (SNMP) request operations over clustered networking devices. The system includes a cluster that includes a plurality of intermediary devices and an SNMP agent executing on a first intermediary device of the plurality of intermediary devices. The SNMP agent receives an SNMP GETNEXT request for an entity. Responsive to receipt of the SNMP GETNEXT request the SNMP agent requests a next entity from each intermediary device of the plurality of intermediary devices of the cluster. To respond to the SNMP request the SNMP agent selects a lexicographically minimum entity. The SNMP agent may select the lexicographically minimum entity from a plurality of next entities received via responses from each intermediary device of the plurality of intermediary devices.,139,32,,
8050271,PC,"Citrix Systems, Inc.",40765951,Data Packets/Data Streams|Data Packets/Network Connection,12/15/2004,2004,12/15/2024,Protecting data integrity in an enhanced network connection,The integrity of a data stream transmitted over a network is protected by adjusting the sequence number the port number or another field of a data packet field for a number of data packets so that the data packets will be considered either valid or invalid by a downstream receiving device. Data packets that have such a field adjusted can be thought of as being rotated outside of a valid range or window as defined for a network connection. This field of a rotated data packet can be further adjusted through de-rotation or re-rotation for various applications. Downstream devices can thus respond to the data packets depending on the state of the rotation.,124,32,,
8990901,PC,"Citrix Systems, Inc.",49513669,Data Packets/Communications Network|Data Packets/Client Devices,5/5/2012,2012,9/12/2033,Systems and methods for network filtering in vpn,Described are systems and methods for managing network packet traffic between a client device and an enterprise server. A list of enterprise-authorized applications is maintained. Data packets such as TCP and UDP data packets communicated from applications running on the device are analyzed to determine an originating application corresponding to each packet. The originating application is compared to the list of authorized applications and a VPN tunnel is created for the packet to access the enterprise server if the corresponding originating application is an authorized application.,88,32,,
9019834,PC,"Citrix Systems, Inc.",44656385,Intermediary Devices/Network Traffic|Intermediary Devices/Multi-core|Intermediary Devices/Network Packets,3/26/2010,2010,3/25/2031,Systems and methods for link load balancing on a multi-core device,Systems and methods are described for link load balancing by a multi-core intermediary device a plurality of Internet links. The method may include load balancing by a multi-core device intermediary to a plurality of devices and a plurality of Internet links network traffic across the plurality of Internet links. The multi-core device providing persistence of network traffic to a selected Internet link based on a persistence type. A first core of the multi-core device receives a packet to be transmitted via an Internet link to be selected from the plurality of Internet links. The first core sends to a second core of the multi-core device a request for persistence information responsive to identifying that the second core is an owner core of a session for persistence based on the persistence type. The first core receives the persistence information from the second core and determines to transmit the packet to the Internet link previously selected based on the persistence information received from the second core.,153,32,,
8635367,PC,"Citrix Systems, Inc.",44152752,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines|Intermediary Devices/Multi-core|Intermediary Devices/Predetermined Threshold,12/23/2009,2009,5/23/2032,Systems and methods for managing static proximity in multi-core gslb appliance,The present invention is directed towards systems and methods for providing static proximity load balancing via a multi-core intermediary device. An intermediary device providing global server load balancing identifies a size of a location database comprising static proximity information. The intermediary device stores the location database to an external storage of the intermediary device responsive to determining the size of the location database is greater than a predetermined threshold. A first packet processing engine on the device receives a domain name service request for a first location determines that proximity information for the first location is not stored in a first memory cache transmits a request to a second packet processing engine for proximity information of the first location and transmits a request to the external storage for proximity information of the first location responsive to the second packet processing engine not having the proximity information.,309,31,,
8831041,PC,"Citrix Systems, Inc.",47911197,Data Packets/Packet Engine|Data Packets/Quality of Service,6/27/2011,2011,7/5/2032,Prioritizing highly compressed traffic to provide a predetermined quality of service,A network optimization engine can be used to optimize the transmission of network traffic by employing means to prioritize highly compressed network traffic over other network traffic. The network optimization engine accomplishes network traffic optimization by calculating a compression ratio for received data packets and determining whether the calculated compression ratios exceed a compression ratio threshold. The predetermined compression ratio threshold can be a hard coded value or an empirically determined compression ratio threshold that is calculated using a sample of the received network packets. Network packets having a compression ratio that exceeds the compression ratio threshold are classified as highly compressed network traffic and transmitted according to a transmission scheme that is different than a transmission scheme used to transmit non-highly compressed network traffic.,172,31,,
9047251,PC,"Citrix Systems, Inc.",45470712,Intermediary Devices/Multi-core,12/20/2010,2010,5/25/2033,Systems and methods for implementing connection mirroring in a multi-core system,The present application is directed to systems and methods for providing failover connection mirroring between two or more multi-core devices intermediary between a client and a server. A first multi-core device may receive a hash key of a second multi-core device for mapping packets to cores of the second multi-core device. The first device may identify a core of the second device using (i) the hash key of the second device and (ii) tuple information corresponding to a connection between the client and the server via the first device. The first device may determine that the identified core is not a desired core for providing a failover connection. The first device may modify the tuple information so as to identify the desired core when used with the hash key of the second device. The first device may use the modified tuple information to establish the failover connection.,217,31,,
8644157,PC,"Citrix Systems, Inc.",46045083,Other Topics,3/28/2011,2011,11/20/2031,Systems and methods for handling nic congestion via nic aware application,The present solution is directed to a system for handling network interface card (NIC) congestion by a NIC aware application. The system may include a device having a plurality of network interface cards (NICs) a transmission queue corresponding to a NIC of the plurality of NICs; and an overflow queue for storing packets for the NIC when congested. The system may also include an application executing on the device outputting a plurality of packets to the transmission queue responsive to detecting that the NIC is identified as not congested. The device identifies the NIC as congested responsive to determining that a number of packets stored in the transmission queue has reached a predetermined threshold and responsive to detecting identification of the NIC as congested the application stores one or more packets to the overflow queue. The device transmits one or more of the plurality of packets stored in the transmission queue and transmits a predetermined number of packets from the overflow queue.,181,31,,
8856885,PC,"Citrix Systems, Inc.",49478566,Other Topics,4/30/2012,2012,7/5/2032,Managing cloud zones,Methods and systems for managing cloud zones are described herein. A management server for a cloud of computing resources may add private zones to the cloud. The private zones may contain computers owned and operated by a user of the cloud such as a cloud customer rather than the cloud operator. The management server may manage the computing resources in the private zone by sending commands to an agent which in turn relays the management server's commands to the individual computing resources. The agent may be authenticated using a token.,176,31,,
9049299,PC,"Citrix Systems, Inc.",51951998,Other Topics,10/31/2013,2013,10/31/2033,Using audio signals to identify when client devices are co-located,A technique manages an online meeting. The technique includes providing an audio output signal to a first client device currently participating in the online meeting. The audio output signal directs the first client device to play a particular sound (e.g. a unique tone or a unique series of tones). The technique further involves receiving an audio input signal from a second client device. The audio input signal includes the particular sound. The technique further involves identifying the second client device as being co-located with the first client device in response to the audio input signal which includes the particular sound. Such operation enables the electronic circuitry (e.g. a processing circuit of an online meeting server) to learn whether any client devices are co-located and accordingly associate multiple devices to a single user connected to the online meeting.,163,31,,
8997197,PC,"Citrix Systems, Inc.",49640189,Computing Devices/Other Topics,12/12/2012,2012,1/11/2033,Encryption-based data access management,Encryption-based data access management may include a variety of processes. In one example a device may transmit a user authentication request for decrypting encrypted data to a data storage server storing the encrypted data. The computing device may then receive a validation token associated with the user's authentication request the validation token indicating that the user is authenticated to a domain. Subsequently the computing device may transmit the validation token to a first key server different from the data storage server. Then in response to transmitting the validation token the computing device may receive from the first key server a key required for decrypting the encrypted data. The device may then decrypt at least a portion of the encrypted data using the key.,104,30,,
8588066,PC,"Citrix Systems, Inc.",44656385,Intermediary Devices/Network Traffic|Intermediary Devices/Multi-core|Intermediary Devices/Network Packets,3/26/2010,2010,1/27/2032,Systems and methods for link load balancing on a multi-core device,Systems and methods are described for link load balancing by a multi-core intermediary device a plurality of Internet links. The method may include load balancing by a multi-core device intermediary to a plurality of devices and a plurality of Internet links network traffic across the plurality of Internet links. The multi-core device providing persistence of network traffic to a selected Internet link based on a persistence type. A first core of the multi-core device receives a packet to be transmitted via an Internet link to be selected from the plurality of Internet links. The first core sends to a second core of the multi-core device a request for persistence information responsive to identifying that the second core is an owner core of a session for persistence based on the persistence type. The first core receives the persistence information from the second core and determines to transmit the packet to the Internet link previously selected based on the persistence information received from the second core.,172,30,,
8972984,PC,"Citrix Systems, Inc.",47175963,Computing Devices/Audio Stream|Directed Towards/Present Disclosure|Virtual Machine/Hypervisor,5/20/2011,2011,3/2/2033,Methods and systems for virtualizing audio hardware for one or more virtual machines,The present disclosure is directed towards methods and systems for virtualizing audio hardware for one or more virtual machines. A control virtual machine (VM) may translate a first stream of audio functions calls from a first VM hosted by a hypervisor. The translated first stream of audio function calls may be destined for a sound card of the computing device executing the hypervisor. The control VM may detect a second stream of audio functions calls from a second VM hosted by the hypervisor. The control VM may translate the second stream of audio functions calls from the second VM. The control VM may further merge the translated first stream of audio function calls and the translated second stream of the audio function calls in response to the detected second stream. The control VM may transmit the merged stream of audio function calls to the sound card.,220,29,,
8793486,PC,"Citrix Systems, Inc.",39102737,Computing Devices/Client Devices,8/21/2006,2006,1/26/2027,Systems and methods for optimizing ssl handshake processing,A method for buffering SSL handshake messages prior to computing a message digest for the SSL handshake includes: conducting by an appliance with a client an SSL handshake the SSL handshake comprising a plurality of SSL handshake messages; storing by the appliance the plurality of SSL handshake messages; providing by the appliance to a message digest computing device in response to receiving a client finish message corresponding to the SSL handshake the plurality of SSL handshake messages; receiving by the appliance from the message digest computing device a message digest corresponding to the provided messages; determining by the appliance the message digest matches a message digest included in the SSL client finish message; and completing by the appliance with the client the SSL handshake. Corresponding systems are also described.,145,29,,
8819090,PC,"Citrix Systems, Inc.",49381134,Virtual Server/Intercepting,4/23/2012,2012,12/11/2032,Trusted file indirection,Methods and systems for performing file transfers across different domains hosted by a virtualization server are described herein. A trusted domain (Dom 0) may indicate that one or more files directories and/or volumes are available to a second domain (guest domain) by updating share information stored in a key value store. The guest domain may enumerate the shared files to appear as if within its own file system structure. The guest domain intercepts calls to its file system determines whether the requested data is actually stored in its own file system or in trusted domain and proxies the file system call to the trusted domain when the requested data is shared by the trusted domain. Key value store information and shared data information and contents may be communicated using one or more memories shared between the trusted domain and guest domain.,130,29,,
8949591,PC,"Citrix Systems, Inc.",44816784,Directed Towards/Client Side|Directed Towards/SSL|Session Key/SSL Session|Session Key/Communication Session,4/21/2010,2010,4/21/2030,Systems and methods for split proxying of ssl via wan appliances,The present invention is directed towards systems and methods for split proxying Secure Socket Layer (SSL) communications via intermediaries deployed between a client and a server. The method includes establishing by a server-side intermediary a SSL session with a server. A client-side intermediary may establish a second SSL session with a client using SSL configuration information received from the server-side intermediary. Both intermediaries may communicate via a third SSL session. The server-side intermediary may decrypt data received from the server using the first SSL session's session key. The server-side intermediary may transmit to the client-side intermediary via the third SSL session data encrypted using the third SSL session's session key. The client-side intermediary may decrypt the encrypted data using the third SSL session's session key. The client-side intermediary may transmit to the client the data encrypted using the second SSL session's session key.,132,29,,
8910245,PC,"Citrix Systems, Inc.",45003052,Directed Towards/Other Topics|Intermediary Devices/DNS,11/5/2010,2010,4/5/2032,Systems and methods for managing domain name system security (dnssec),The present invention is directed towards systems and methods for providing multiple modes of a zone for DNSSEC by an intermediary device. The method includes providing by a device intermediary to a plurality of clients and a plurality of servers a plurality of modes of a zone for Domain Name Service. The device receives a selection of a first mode of the zone of the plurality of modes of the zone. The device receives information identifying to enable DNS Security for the selected first mode. The device establishes the zone for DNS in accordance with the selected first mode and with DNS Security enabled.,154,29,,
8838958,PC,"Citrix Systems, Inc.",39102727,Other Topics,8/21/2006,2006,8/21/2026,Systems and methods for bulk encryption and decryption of transmitted data,A method for using a network appliance to efficiently buffer and encrypt data for transmission includes: receiving by an appliance via a connection two or more SSL records comprising encrypted messages; decrypting the two or more messages; buffering by the appliance the two or more decrypted messages; determining by the appliance that a transmittal condition has been satisfied; encrypting by the appliance in response to the determination the first decrypted message and a portion of the second decrypted message to produce a third SSL record; and transmitting by the appliance via a second connection the third record. Corresponding systems are also described.,249,28,,
8996652,PC,"Citrix Systems, Inc.",48746652,Intermediary Devices/Present Disclosure,6/15/2012,2012,7/13/2032,Systems and methods for cluster lag,The present disclosure describes systems and methods for using a cluster-based actor identifier in link aggregation control protocol communications between an actor comprising an intermediary device of a cluster of intermediary devices and a non-cluster aware device. The system and methods include a cluster of intermediary devices in communication with a link aggregation control protocol enabled network device that is unaware of the cluster. A first intermediary device of the cluster generates an actor identifier based on a cluster identifier that identifies the cluster for each of the intermediary devices of the cluster to use as a system identifier for link aggregation control protocol communications and one or more intermediary devices transmit to the network device a link aggregation control protocol data unit that advertises the actor identifier as the system identifier for establishing a link aggregation between the cluster and the network device.,198,28,,
9052953,PC,"Citrix Systems, Inc.",47220009,Other Topics,5/23/2011,2011,8/24/2033,Autonomous computer session capacity estimation,Systems and methods are disclosed for estimating and updating the capacity associated with resources in a virtualized computing environment. A capacity estimation value may be stored in computer memory. The capacity estimation value may estimate how many concurrent sessions a resource in the virtualized computing environment has workload capacity to desirably handle. The system may monitor one or more resource consumption metrics of the resource on an ongoing basis. The capacity estimation value may be updated based on inter alia the monitoring. The capacity estimation value may be used when a request is received to create a new session in the resource.,192,28,,
9032496,PC,"Citrix Systems, Inc.",47913553,Remote Access/Client Devices,2/28/2012,2012,7/23/2032,Secure single sign-on,Systems and methods that provide secure single sign-on are described herein. When a user provides credentials to a client device the credentials may be intercepted and cached at a secure location such as within a trusted environment. When a client process such as a remote desktop program running on the client device requests the credentials for single sign-on to a server providing remote desktop services the credentials may be secured such as within an opaque container that may be accessed only components running in trusted environments and provided to the client process. The client process may be running in an untrusted environment such as an operating system session. The client device may forward the secured credentials to a trusted environment in the server effectuating single sign-on.,162,28,,
8812904,PC,"Citrix Systems, Inc.",40849176,Virtual Server/Backup Virtual Server,5/29/2008,2008,12/31/2028,Systems and methods for load balancing via a plurality of virtual servers upon failover using metrics from a backup virtual server,The present invention provides methods and systems for performing load balancing via a plurality of virtual servers upon a failover using metrics from a backup virtual server. The methods and systems described herein provide systems and methods for an appliance detecting that a first virtual server of a plurality of virtual servers having one or more backup virtual servers load balanced by an appliance is not available identifying at least a first backup virtual server of a one or more backup virtual servers of the first virtual server is available maintaining a status of the first virtual server as available in response to the identification obtaining one or more metrics from the first backup virtual server of a one or more backup virtual servers and determining the load across the plurality of virtual servers using the metrics obtained from the first backup virtual server associated with the first virtual server.,99,28,,
8997172,PC,"Citrix Systems, Inc.",46020907,Software Application/Intercepting,11/8/2010,2010,5/16/2032,Controlling information disclosure during application streaming and publishing,Various aspects as described herein are directed to systems method apparatuses and software for intercepting requests to copy content paste content clip content cut content or perform a print screen operation and either allowing the requested operation to occur or preventing the operation depending upon whether the content is sourced from a streamed application or a non-streamed application and/or depending upon a streamed application-based policy. This may be performed by for instance hooking an appropriate function call to the operating system.,143,27,,
8769092,PC,"Citrix Systems, Inc.",44152669,Directed Towards/Present Disclosure|Directed Towards/GSLB Virtual Server|Virtual Server/Spillover|Virtual Server/GSLB Virtual Server|Intermediary Devices/Present Disclosure|Intermediary Devices/GSLB Virtual Server|Intermediary Devices/DNS,12/23/2009,2009,12/23/2029,Systems and methods for gslb spillover,The present disclosure is directed towards systems and methods for global server load balancing spillover. An intermediary device providing global server load balancing (GSLB) identifies a spillover threshold for a first GSLB virtual server of the intermediary device. The first GSLB virtual server resolving DNS requests to a remote site of a plurality of remote sites. The intermediary device monitors spillover related statistics of each of a plurality of services at the plurality of remote sites establishes a first spillover aggregate statistic for the plurality of services determines that the first spillover aggregate statistic exceeds the spillover threshold for the first GSLB virtual server and receives a DNS request and directing the DNS request to a second GSLB virtual server of the intermediary device responsive to the determination.,301,26,,
9038083,PC,"Citrix Systems, Inc.",47891912,Virtual Machine/Computing Environment|Virtual Machine/Cloud,2/9/2012,2012,12/11/2032,Virtual machine provisioning based on tagged physical resources in a cloud computing environment,A cloud system may create physical resource tags to store relationships between cloud computing offerings such as computing service offerings storage offerings and network offerings and the specific physical resources in the cloud computing environment. Cloud computing offerings may be presented to cloud customers the offerings corresponding to various combinations of computing services storage networking and other hardware or software resources. After a customer selects one or more cloud computing offerings a cloud resource manager or other component within the cloud infrastructure may retrieve a set of tags and determine a set of physical hardware resources associated with the selected offerings. The physical hardware resources associated with the selected offerings may be subsequently used to provision and create the new virtual machine and its operating environment.,296,26,,
8352633,PC,"Citrix Systems, Inc.",43355258,Directed Towards/Multi-core,6/22/2009,2009,2/5/2031,Systems and methods of state migration in a multi-core system,The present application is directed towards systems and methods of state migration in a multi-core system. An external process on a client or server may initiate a plurality of connections with the multi-core system such that some cores have a plurality of connections and others have none. The present invention provides systems and methods for redirecting a connection or migrating the state of a connection from being associated with a first core with a plurality of connections to a second core with no connections.,186,25,,
8819115,PC,"Citrix Systems, Inc.",44152611,Data Packets/Intercepting,12/23/2009,2009,2/10/2032,Systems and methods for sampling management across multiple cores for html injection,A method for sampling management includes establishing for a multi-core intermediary comprising a plurality of packet evaluation components executing on a corresponding plurality of cores a frequency at which the multi-core intermediary intercepts a response transmitted from a server to a client and injects data into the intercepted response. For each of the plurality of packet evaluation components an offset and a frequency based on a number of packet evaluation components in the plurality of packet evaluation components is established a combination of the established frequencies substantially similar to the frequency established for the multi-core intermediary. One of the plurality of cores intercepts a response from the server to the client at a time specified by the frequency and the offset. The packet evaluation component executing on the one of the plurality of cores injects data into the intercepted response.,231,25,,
8413225,PC,"Citrix Systems, Inc.",44153107,Directed Towards/User Session|Directed Towards/Shared Resource|Directed Towards/Uniform Resource|Intermediary Devices/User Session|Session Key/Client Devices|Session Key/User Session|Session Key/Hash Key|Transmitted Page,12/23/2009,2009,7/15/2031,Systems and methods for management of common application firewall session data in a multiple core system,The present invention is directed towards systems and methods for efficiently an intermediary device processing strings in web pages across a plurality of user sessions. A device intermediary to a plurality of clients and a server identifies a plurality of strings in forms and uniform resource locators (URLs) of web pages traversing the device across a plurality of user sessions. The device stores each string of the plurality of strings to one or more allocation arenas shared among a plurality of user session. Each string is indexed using a hash key generated from the string. The device recognizes that a received string transmitted from a webpage of a session of a user is eligible to be shared among the plurality of user sessions. The device determines that a copy of the received string is stored in an allocation arena using a hash generated from the received string. The device uses the copy of the received string stored in the allocation arena in place of the string in the web page of the session of the user to process the web page.,202,23,,
8615654,PC,"Citrix Systems, Inc.",39102729,Other Topics,8/21/2006,2006,8/22/2026,Systems and methods for optimizing ssl handshake processing,A method for enabling efficient SSL handshakes through pre-computing of handshake messages the method includes: receiving by an appliance a server certificate identifying a server; generating by the appliance at least one of: (i) an SSL server certificate message comprising the received server certificate (ii) an SSL client certificate request message and (iii) an SSL hello done message; storing by the appliance the generated messages; receiving by the appliance from a client an SSL client hello message identifying the server; and transmitting by the appliance to the client an SSL server hello message and at least one of the stored messages. Corresponding systems are also described.,108,23,,
8918455,PC,"Citrix Systems, Inc.",44063000,Computing Devices/Client Devices|Computing Devices/Network Packets|Data Packets/Client Devices|Virtual Machine/Image Processor Algorithm,11/25/2009,2009,7/15/2030,Systems and algorithm for interfacing with a virtualized computing service over a network using a lightweight client,Systems and algorithm for providing a service to a client includes defining a virtual infrastructure in which a plurality of virtual machines are running on a virtualization layer with at least one of the virtual machine executing an image processor algorithm. The image processor algorithm is configured to access framebuffer data of a specific virtual machine that includes the service to be controlled process the framebuffer data to generate image data packets with contextual information by scanning the framebuffer data to discern the image of the virtual machine display evaluate the framebuffer data to identify contiguous areas of activity extract data related to the contiguous areas of activity and package the extracted data into image data packets. The image data packets are transmitted to the client for presenting on a display device of the client.,254,23,,
8875290,PC,"Citrix Systems, Inc.",44067262,Directed Towards/Client Side|Transport Layer Connection/Client Side|Transport Layer Connection/Response to the Client,11/30/2009,2009,11/30/2029,Systems and methods for aggressive window probing,The present application is directed towards systems and methods for aggressively probing a client side connection to determine and counteract a malicious window size attack or similar behavior from a malfunctioning client. The solution described herein detects when a connection may be under malicious attach via improper or unusual window size settings. Responsive to the detection the solution described herein will setup probes that determine whether or not the client is malicious and does so within an aggressive time period to avoid the tying up of processing cycles transport layer sockets and buffers and other resources of the sender.,128,22,,
8498396,PC,Citrix Systems International Gmbh,41447440,Other Topics,6/25/2008,2008,6/25/2028,Notification to absent teleconference invitees,A method includes receiving an indication of an elapsed time since a scheduled teleconference meeting start and a further indication of current attendance at the teleconference; applying at least one rule for determining based on the indications whether to issue a notification to an absent invitee of the teleconference; and in response to application of the rule selectively issuing the notification to the absent invitee.,64,22,L,notifying absent invitees after certain elapsed time in teleconf
8723887,PC,"Citrix Systems, Inc.",41327676,Other Topics,9/9/2008,2008,9/9/2029,Methods and systems for per pixel alpha-blending of a parent window and a portion of a background image,A system for alpha blending at least a portion of an image of a window with a background image where the image of the window is captured by an alpha blender and blended together with an image of the background also captured by the alpha blender. The resulting alpha-blended image is then displayed within the window to give at least a portion of the window the appearance of smooth anti-aliased edges.,173,21,,
8386762,PC,"Citrix Systems, Inc.",42827133,MAC Address,4/5/2009,2009,10/14/2031,Methods and systems for modifying disk images to provide network interface card teaming capabilities,A system for modifying a virtual disk to provide network interface card (NIC) teaming capabilities to a virtual disk. The system can include a virtual disk that has access to one or more NICs. In some instances the NICs are included in a NIC team that is also available to the virtual disk. A teaming module executing on a computer can identify the NIC team and responsively obtain a media access control (MAC) address of the NIC team. In response to obtaining the NIC team MAC address the teaming module can obtain a network boot MAC address that was used to PXE boot the virtual disk. The teaming module can then replace the NIC team MAC address of each NIC in the NIC team with the obtained network boot MAC address. The system then boots from the virtual disk that has the modified NIC team configuration.,114,21,,
8250262,PC,"Citrix Systems, Inc.",43031387,Other Topics,1/5/2009,2009,6/11/2030,Systems and methods for input/output isolation,Systems and methods for providing virtual stacks are described. A kernel driver is installed and loaded. Then a virtual stack is created the virtual stack having a virtual file system a virtual physical disk and one or more virtual mounted volume devices. The virtual file system is configured to mimic characteristics of a host file system. The virtual physical disk is configured for providing an interface of a memory storage device to which the virtual file system device binds. The one or more virtual mounted volume devices are configured for allowing the one or more virtual processes to access data in stored memory through the virtual stack.,111,21,,
8832241,PC,"Citrix Systems, Inc.",49756960,Directed Towards/Present Disclosure|Intermediary Devices/Present Disclosure,6/15/2012,2012,11/2/2032,Systems and methods for validating a configuration in a cluster,The present disclosure is directed towards systems and methods for validating a configuration across a cluster of intermediary devices. Within the cluster a configuration change is entered at one node and propagated to the remaining nodes of the cluster. Before propagation the new configuration is validated. The systems and methods include creating on a first intermediary device a configuration to be propagated to a plurality of routing daemons; executing by a validation module of the first intermediary device the configuration on a plurality of pseudo routing daemons each pseudo routing daemon of the plurality of pseudo routing daemons corresponding to the routing daemon of a corresponding intermediary device of the cluster; and determining from results of executing the second configuration whether to propagate the second configuration to each routing daemon.,143,21,,
9065854,PC,"Citrix Systems, Inc.",--,Virtual Machine/Guest,10/28/2013,2013,12/19/2033,Systems and methods for managing a guest virtual machine executing within a virtualized environment,The present disclosure relates to methods and systems for managing a guest virtual machine executing within a virtualized environment. A daemon is established on a guest virtual machine executing within a virtualized environment. The daemon is configured to communicate with a management service virtual machine executing within the virtualized environment. The daemon receives from the management service virtual machine via an application layer protocol a request identifying an action type of a plurality of predetermined action types. The daemon identifies the action type of the plurality of predetermined action types from the received request and performs an action corresponding to the identified action type. In some implementations the application layer protocol is one of Hypertext Transfer Protocol (HTTP) or Hypertext Transfer Protocol Secure (HTTPS).,140,20,,
8918456,PC,"Citrix Systems, Inc.",44063000,Computing Devices/Client Devices|Computing Devices/Network Packets|Computing Devices/Performance Data|Data Packets/Client Devices|Data Packets/Network Connection|Virtual Machine/Image Processor Algorithm,11/25/2009,2009,8/23/2030,Systems and algorithm for interfacing with a virtualized computing service over a network using a lightweight client,Systems and algorithm for providing a service to a client includes defining a virtual infrastructure in which a plurality of virtual machines are running on a virtualization layer with at least one of the virtual machine executing an image processor algorithm. The image processor algorithm is configured to access framebuffer data of a specific virtual machine that includes the service to be controlled process the framebuffer data to generate image data packets with contextual information by scanning the framebuffer data to discern the image of the virtual machine display obtaining connection parameters and client characteristics of a connection to the client analyzing the framebuffer data to balance performance of the connection and performance of the specific virtual machine and selecting a compression technique for processing the framebuffer data to generate image data packets. The image data packets are transmitted to the client for presenting on a display device.,266,20,,
8963991,PC,"Citrix Systems, Inc.",51016745,Computing Devices/Other Topics,12/28/2012,2012,1/7/2033,Systems and methods for causing a user to look into a camera,Systems and method for causing a user to look into a camera are described. In some aspects a position of a camera coupled with a computing device is determined. A computer-generated element is displayed proximate to the determined position of the camera. The computer-generated element is presented for causing a user of the computing device to reposition a face of the user toward the determined position of the camera.,161,20,,
8706885,PC,"Citrix Systems, Inc.",41716550,Virtual Server/Spillover|Virtual Server/Backup Virtual Server,11/25/2008,2008,11/25/2028,Systems and methods for health based spillover,The present solution provides a spillover management technique for virtual servers of an appliance based on health. Using a health based spillover technique a network appliance may direct requests to a backup or second virtual server upon determining that a predetermined percentage of services being load balanced are down. In this manner the spillover will occur based on a user controlled determination of a level of services being down to the number of services enabled. Instead of waiting for a last service of a virtual server to be marked down to spillover to another virtual server the spillover may occur based on a user specified percentage. For example the appliance may spillover from one virtual server to another virtual server when the number of services marked down relative to the number of enabled services falls below a specified percentage.,196,20,,
8972602,PC,"Citrix Systems, Inc.",49756985,Directed Towards/Other Topics|Virtual Server/Internet Protocol Address|Intermediary Devices/Internet Protocol Address|Intermediary Devices/Virtualization Environment|IP Address/Cluster Environment,6/15/2012,2012,4/23/2033,Systems and methods for using ecmp routes for traffic distribution,The present application is directed towards systems and methods for using equal cost multi-path routing for traffic distribution in a cluster environment. Each intermediary device of a cluster may advertise via a routing protocol to a router a corresponding internet protocol (IP) address of a virtual server and one or more connection metrics having predetermined values. Upon determining that another intermediary device of the cluster is unavailable each active device may re-advertise the IP address of the virtual server executing on the intermediary device and the one or more connection metrics with the previously advertised value reduced by a predetermined amount. In some embodiments each active device may wait a predetermined time period such as a time period for expiration of routing protocol tables and then re-advertise the IP address of the virtual server executing on the intermediary device and the one or more connection metrics with the predetermined values.,154,20,,
8583837,PC,"Citrix Systems, Inc.",43031387,Other Topics,1/5/2009,2009,1/5/2030,Systems and methods for input/output isolation,Systems and methods for providing virtual stacks are described. A kernel driver is installed and loaded. Then a virtual stack is created the virtual stack having a virtual file system a virtual physical disk and one or more virtual mounted volume devices. The virtual file system is configured to mimic characteristics of a host file system. The virtual physical disk is configured for providing an interface of a memory storage device to which the virtual file system device binds. The one or more virtual mounted volume devices are configured for allowing the one or more virtual processes to access data in stored memory through the virtual stack.,143,19,,
8761349,PC,"Citrix Systems, Inc.",49515471,Other Topics,10/31/2012,2012,10/31/2032,Systems and methods of monitoring performance of acoustic echo cancellation,Methods and systems monitoring performance of acoustic echo cancellation are described. An audio output is generated by applying a first acoustic echo cancellation algorithm to an audio input. One or more performance metrics for the first acoustic echo cancellation algorithm based on the audio output are determined via a second acoustic echo cancellation algorithm. The first acoustic echo cancellation algorithm is different from the second acoustic echo cancellation algorithm. The one or more performance metrics are provided for storage in a memory.,164,18,,
8892551,PC,Bytemobile Inc,49779267,Other Topics,6/28/2012,2012,12/12/2032,Method and system of location-based content organization and content suggestions,A method of location-based data organization is provided. The method includes obtaining a graph that includes nodes each node connected to at least one other node with an arc. The nodes include a geography nodes associated with geographical locations and activity nodes. The method also includes dynamically assigning weights to the nodes and finding for a first activity node a suggested set of one or more activity nodes.,193,18,,
8886801,PC,"Citrix Systems, Inc.",43067213,Directed Towards/Multi-core|Directed Towards/Packet Processing Engines,6/22/2009,2009,6/22/2029,Systems and methods for monitor distribution in a multi-core system,The present invention is directed towards systems and methods for monitoring services in a multi-core system. The systems and methods distribute the monitors for a service and the ownership of a service across the cores of the multi-core device. The greater resources of the multi-core device process the workload of the monitors for the services and the workload for monitoring the states of the services more efficiently than a single packet engine on a core.,134,17,,
8830093,PC,"Citrix Systems, Inc.",47226484,Directed Towards/Present Disclosure|Private Networks/Data Communication Network|Private Networks/Present Disclosure|Mobile Devices/Communications Network|Mobile Devices/Present Disclosure,11/15/2011,2011,11/14/2032,Systems and methods for load balancing and virtual private networking for sms center,The present disclosure is directed towards systems and methods for compressing messages such as Short Message Service (SMS) or text messages between fixed or mobile devices through communications networks. The data of for example SMS messages is compressed and forwarded through a communication network to an appliance having a processing unit. The appliance decompresses the message and controls its delivery through network communication devices where the decompressed SMS message is forwarded to its destination.,95,17,,
9055100,PC,"Citrix Systems, Inc.",51655459,Intermediary Devices/Present Disclosure|Intermediary Devices/Predetermined Threshold|Transport Layer Connection/Intermediary|Transport Layer Connection/Response to the Client|Transport Layer Connection/Response from the Server|Transport Layer Connection/Present Disclosure|Transport Layer Connection/Predetermined Threshold,4/6/2013,2013,6/21/2033,Systems and methods for http-body dos attack prevention with adaptive timeout,The present disclosure is directed generally to systems and methods for changing an application layer transaction timeout to prevent Denial of Service attacks. A device intermediary to a client and a server may receive via a transport layer connection between the device and the client a packet of an application layer transaction. The device may increment an attack counter for the transport layer connection by a first predetermined amount responsive to a size of the packet being less than a predetermined fraction of a maximum segment size for the transport layer connection. The device may increment the attack counter by a second predetermined amount responsive to an inter-packet-delay between the packet and a previous packet being more than a predetermined multiplier of a round trip time. The device may change a timeout for the application layer transaction responsive to comparing the attack counter to a predetermined threshold.,189,17,,
9009813,PC,"Citrix Systems, Inc.",40900604,Virtual Server/Virtual Private Network|Private Networks/Network Session|Private Networks/Present Disclosure,1/26/2008,2008,1/23/2029,Policy driven fine grain url encoding mechanism for ssl vpn clientless access,The present disclosure presents methods systems and intermediaries which determine an encoding scheme of a uniform resource location (URL) from a plurality of encoding schemes for a clientless secure socket layer virtual private network (SSL VPN) via a proxy. An intermediary may receive a response from a server comprising a URL. The response from the server may be directed to a client via a SSL VPN session and via the intermediary. The intermediary may determine responsive to an encoding policy one of a transparent opaque or encrypted encoding scheme for encoding the URL. The intermediary may rewrite the URL for transmission to the client in accordance with the determined encoding scheme.,116,17,,
8627056,PC,"Citrix Systems, Inc.",42827133,MAC Address,4/5/2009,2009,4/5/2030,Methods and systems for modifying disk images to provide network interface card teaming capabilities,A system for modifying a virtual disk to provide network interface card (NIC) teaming capabilities to a virtual disk. The system can include a virtual disk that has access to one or more NICs. In some instances the NICs are included in a NIC team that is also available to the virtual disk. A teaming module executing on a computer can identify the NIC team and responsively obtain a media access control (MAC) address of the NIC team. In response to obtaining the NIC team MAC address the teaming module can obtain a network boot MAC address that was used to PXE boot the virtual disk. The teaming module can then replace the NIC team MAC address of each NIC in the NIC team with the obtained network boot MAC address. The system then boots from the virtual disk that has the modified NIC team configuration.,81,17,,
8687814,PC,"Citrix Systems, Inc.",47175864,Other Topics,5/20/2011,2011,5/18/2032,Securing encrypted virtual hard disks,Securing encrypted virtual hard disks may include a variety of processes. In one example a virtual hard disk is created for a user and encrypted with a volume key and the volume key placed in an administrator header. The administrator header may be encrypted with a protection key the protection key created from a user identifier corresponding to the user a volume identifier corresponding to the virtual hard disk and two cryptographic secrets. The protection key may then destroyed after encrypting the administrator header and therefore might never leave the encryption engine. The two cryptographic secrets may be stored in separate storage locations one accessible to the user and the other accessible to administrators. Accordingly the protection key might never transmitted or can be intercepted and no single entity may be compromised to gain access to all of the information needed to recreate the protection key.,139,16,,
8995453,PC,"Citrix Systems, Inc.",46332087,Virtual Server/Virtual Private Network|Private Networks/Additional Target Packet Traffic,11/11/2003,2003,11/12/2024,Systems and methods for providing a vpn solution,A system apparatus and a method for implementing a secured communications link at a layer other than that at which packets are filtered are disclosed. In one embodiment a computer system is configured to form a virtual private network (VPN) and comprises an address inspection driver to identify initial target packet traffic addressed to a target server. Also the computer system includes a pseudo server module to receive rerouted initial target packet traffic from the address inspection driver. The pseudo server module is configured to convey packet regeneration instructions to a VPN gateway. The address inspection driver functions to identify additional target packet traffic addressed to the target server and routes the additional target packet traffic to the pseudo server. In one embodiment the pseudo server is configured to strip header information from the additional target packet traffic to form a payload and thereafter to route the payload to the target.,89,16,,
8966603,PC,"Citrix Systems, Inc.",44153108,Directed Towards/Various Embodiments|Intermediary Devices/Network Traffic,12/23/2009,2009,12/22/2030,Systems and methods for intercepting and automatically filling in forms by the appliance for single-sign on,The present invention is directed towards systems and methods for form-based single sign-on by a user desiring access to one or more protected resources e.g. protected web pages protected web-served applications etc. In various embodiments a single sign-on (SSO) module is in operation on an intermediary device which is disposed in a network to manage internet traffic between a plurality of clients and a plurality of servers. The intermediary device can identify an authentication response from a server and forward the authentication response to the SSO module. The SSO module can complete a login form in the authentication response with a client's authentication data return the completed login form to the server and forward cookies associated with the authentication response to the client. In various embodiments multiple login forms can be completed transparently to the client by the SSO module on a client's behalf and reduce time expended by a client in obtaining access to protected resources.,146,16,,
8804740,PC,"Citrix Systems, Inc.",48856932,Directed Towards/Network Packets|IP Address/Source IP|IP Address/Network Layer|IP Address/Network Packets|IP Address/Cluster Environment,6/15/2012,2012,10/23/2032,Systems and methods for reassembly of packets distributed across a cluster,The present application is directed towards systems and methods for handling fragmented packets in a cluster environment. Fragments received by the cluster may be hashed based on a tuple of network layer information such as source and destination IP addresses. The tuple of network layer information may be used to identify a device of the cluster as a fragment owner or node responsible for assembling the fragments of the packet. The fragment may be transmitted or steered to the fragment owner for accumulation and assembly. Once all fragments of the packet have been received by the fragment owner the packet may be assembled and a second hash may be calculated based on a four-tuple of network and transport layer information such as source and destination IP addresses and port numbers. The packet may then be steered or transmitted to the packet owner or node responsible for processing the packet.,255,15,,
8949617,PC,"Citrix Systems, Inc.",50942797,Computing Devices/Mobile Computing|Mobile Devices/Mobile Computing,5/3/2013,2013,5/19/2033,Disrupting password attack using compression,Methods and systems for disrupting password attacks using compression are described. A user password may be stored on a mobile computing device. The password may be compressed for example using a Huffman compression algorithm and may be subsequently encrypted using a short secret as a key. The user password may be stored as the compressed and encrypted key. The compressed and encrypted password may be stored such that a brute force password attack for example using every possible short secret would reveal too may possible matches to allow an attacker to select the real password.,79,14,,
9037754,PC,"Citrix Systems, Inc.",43355303,Directed Towards/Multi-core|Directed Towards/Shared Resource,6/22/2009,2009,6/18/2030,Systems and methods for initialization and link management of nics in a multi-core environment,The present application is directed towards systems and methods for coordination and management of a shared resource in a multi-core system. In a multi-core system multiple cores may be utilizing a shared resource. However internal resources common to the shared resource may need to be initialized by only one core and independent and uncoordinated initialization by multiple cores may cause errors. The present invention provides systems and methods for coordinating such initialization and use through a handshaking protocol.,159,11,,
8650303,PC,"Citrix Systems, Inc.",50032874,Mobile Devices/Data Type,3/29/2013,2013,5/3/2033,Data management for an application with multiple operation modes,A method and system for managing an application with multiple modes are described. A device manager that manages a mobile device may monitor the mobile device. The device manager may detect that a first type of application that runs in a managed mode (or in multiple managed modes) and an unmanaged mode is installed on the mobile device. When the application is executed on the device the application executes in accordance with the selected application mode e.g. based on location user role industry presence or other predefined context.,171,9,,
9009230,PC,"Citrix Systems, Inc.",52782369,Computing Devices/Other Topics,9/10/2014,2014,9/10/2034,Machine-to-machine instant messaging,Techniques and systems for interfacing Internet Things (IoT) devices using different connection protocols are provided. For example computing device a method and a computer-program product may be provided and may include one or more data processors and a receiver for receiving a communication from a first IoT device communicatively connected to the computing device using a first connection protocol. The communication is received using the first connection protocol. A non-transitory computer-readable storage medium may contain instructions which when executed on the one or more data processors cause the one or more processors to determine a second IoT device to which the communication is intended to be transmitted determine a second connection protocol used by the second IoT device and translate the communication to the second connection protocol. A transmitter may transmit the communication to the second IoT device that is communicatively connected to the computing device using the second connection protocol. The communication is transmitted using the second connection protocol.,432,7,,
8613048,PC,"Citrix Systems, Inc.",35502724,Remote Access/Resource Provided|Remote Access/User Application Requests|Client Node/Access Control|Client Node/Providing a Connection|Client Node/Client Computing,9/30/2004,2004,2/12/2028,Method and apparatus for providing authorized remote access to application sessions,A method and apparatus for providing authorized remote access to one or more application sessions includes a client node a collection agent a policy engine and a session server. The client node requests access to a resource. The collection agent gathers information about the client node. The policy engine receives the gathered information and makes an access control decision based on the received information. The session server establishes a connection between a client computer operated by the user and the one or more application sessions associated with the user of the client node identified in response to the received information.,343,94,,
8856279,PC,Bytemobile Inc,37040699,Other Topics,5/26/2005,2005,1/9/2029,Method and system for object prediction,A method including communicating with a content server wherein the communication includes transmitting request data to the content server and receiving first response data associated with the request data; identifying response object data within the first response data; determining whether the response object data is to be downloaded; querying the content server for second response data that corresponds to the response object data based on the determination; transmitting the first response data to a user agent; and storing the second response data wherein the second response data can be provided to the user agent in a subsequent request.,132,93,L,63 Amazon citations. 
8549149,PC,"Citrix Systems, Inc.",36933060,Directed Towards/Client Side|Remote Access/Client Side|Transport Layer Connection/Client Side,12/30/2004,2004,5/1/2031,Systems and methods for providing client-side accelerated access to remote applications via tcp multiplexing,The present invention is directed towards systems and methods for dynamically deploying and executing acceleration functionality on a client to improve the performance and delivery of remotely accessed applications. In one embodiment the client-side acceleration functionality is provided by an acceleration program that performs a transport layer connection multiplexing technique for improving performance of communications and delivery of a remotely-accessed application. The acceleration program establishes a transport layer connection from the client to the server that can be used by multiple applications on the client or that is otherwise shared among applications of the client. The acceleration program multiplexes requests from one or more applications via the same transport layer connection maintained by the acceleration program. As such the acceleration program can utilize the idle time of one application in using the transport layer connection to service a request of a second application through the same transport layer connection.,200,93,,
8363650,PC,"Citrix Systems, Inc.",35786547,IP Address/Routing Packets,7/23/2004,2004,9/20/2028,Method and systems for routing packets from a gateway to an endpoint,A method for routing packets from a gateway to an endpoint includes the step of associating a private internet protocol (IP) address with an endpoint having a public IP address. A packet addressed to the private IP address of the endpoint is captured. A policy is applied to the packet. The packet is transmitted to the public IP address of the endpoint responsive to the application of the policy to the packet.,272,93,,
8954595,PC,"Citrix Systems, Inc.",36933090,Directed Towards/Client Side|Remote Access/Client Side|Transport Layer Connection/Client Side|Transport Layer Connection/Response to the Client|Transport Layer Connection/Response from the Server,12/30/2004,2004,7/1/2030,Systems and methods for providing client-side accelerated access to remote applications via tcp buffering,The present invention is directed towards systems and methods for dynamically deploying and executing acceleration functionality on a client to improve the performance and delivery of remotely accessed applications. In one embodiment the client-side acceleration functionality is provided by an acceleration program that performs a transport layer connection buffering technique for improving performance of communications and delivery of a remotely-accessed application. The acceleration program establishes a transport layer connection from the client to the server and buffers requests of the client based on determining a difference between a rate of consumption of responses received by the client from a server and a rate of production of requests transmitted by the client to the server. As such the acceleration program can throttle transmissions of the client if the client's rate of consumption falls behind the rate of submission of requests.,217,93,,
7984157,PC,"Citrix Systems, Inc.",34437418,Other Topics,2/26/2002,2002,12/20/2025,Persistent and reliable session securely traversing network components using an encapsulating protocol,The invention relates to systems and methods for reestablishing client communications by securely traversing network components using an encapsulating communication protocol to provide session persistence and reliability. A first protocol that encapsulates a plurality of secondary protocols is used to communicate over a network to provide session persistence and a reliable connection between a client and a host service via a first protocol service. A ticket authority generates a first ticket and a second ticket associated with the client. The first ticket is provided to the client and the client uses the first ticket to establish a communication session with the first protocol service. The second ticket is provided to the first protocol service and the first protocol service uses the second ticket to establish a communication session with the host service.,196,93,,
8090874,PC,"Citrix Systems, Inc.",34437417,Other Topics,6/13/2001,2001,6/23/2023,Systems and methods for maintaining a client's network connection thru a change in network identifier,The invention relates to methods and systems for reconnecting a client and providing user authentication across a reliable and persistent communication session. A first protocol that encapsulates a plurality of secondary protocols is used to communicate over a network. A first protocol service using the first protocol provides session persistence and a reliable connection between a client and a host service. When there is a disruption in the network connection between a client and a host service when a client roams between networks the connection is reestablished and the client's network connection is maintained thru a change in a network identifier assigned to the client.,262,93,,
7865603,PC,"Citrix Systems, Inc.",36126795,Client Node/Access Control,9/30/2004,2004,3/19/2029,Method and apparatus for assigning access control levels in providing access to networked content files,A method and apparatus for assigning access control levels when providing access to networked content files includes a client node a collection agent and a policy engine. The client node requests access to a resource. The collection agent gathers information about the client node. The policy engine receives the gathered information and assigns one of a plurality of levels of access responsive to application of a policy to the received information.,229,93,,
8046830,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,7/13/2028,Systems and methods for network disruption shielding techniques,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,202,93,,
7853947,PC,"Citrix Systems, Inc.",36126887,Other Topics,9/30/2004,2004,7/19/2028,System for virtualizing access to named system objects using rule action associated with request,A method for virtualizing access to named system objects includes the step of receiving a request to access a system object from a process executing in the context of a user isolation scope the request including a virtual name for the system object. A rule associated with the request is determined and a literal name for the system object is formed in response to the determined rule. A request to access the system object is issued to the operating system. The issued request including the literal name for the system object.,171,93,,
7055173,PC,"Citrix Systems, Inc.",36462814,MAC Address,12/19/1997,1997,12/19/2017,Firewall pooling in a network flowswitch,A firewall fault-tolerant network interface system includes a switch circuit configured to detect when a firewall fails in a multi-firewall local network. When a failed firewall is detected the switch circuit waits for a time-out period to expire to allow convergence. The switch circuit then intervenes when traffic from a server to the failed firewall is detected. The switch circuit translates the MAC address of the failed firewall to the MAC address of a functional firewall. Traffic from a server originally directed to the failed firewall is then redirected to a functional firewall. In a further refinement the switch circuit provides the MAC address of a functional firewall in response to an ARP request from a server to the failed firewall. Thus traffic from this server will be directed to the functional firewall without further intervention reducing the overhead of the switch circuit. In still a further refinement if the failed firewall recovers the switch circuit waits for a time-out period to expire to allow convergence of external firewalls and to allow the recovered firewall to learn routes to known clients. The switch circuit then ceases all intervention for the MAC address of the now-recovered firewall.,121,93,,
7594018,PC,"Citrix Systems, Inc.",34422758,Remote Access/Other Topics,10/10/2003,2003,10/31/2025,Methods and apparatus for providing access to persistent application sessions,Methods and apparatus for providing remote access to two or more application sessions in which authentication information associated with a user is received a plurality of application sessions already associated with the user are identified in response to the information and a client computer operated by the user is connected to the plurality of application sessions.,139,92,,
7752600,PC,"Citrix Systems, Inc.",36100652,Other Topics,9/30/2004,2004,10/7/2028,Method and apparatus for providing file-type associations to multiple applications,A method for associating a file type of a file with one or more programs includes the step of receiving a request to store in a configuration store file type association information. From the request an application program is determined that is to be associated with a file type in the configuration store. An association of the file type with a chooser tool is written to the configuration store,260,92,,
7978714,PC,"Citrix Systems, Inc.",35786547,Private Networks/Other Topics|Security Gateway/Client Application|Security Gateway/Access Gateway,7/23/2004,2004,12/26/2027,Methods and systems for securing access to private networks using encryption and authentication technology built in to peripheral devices,A method for routing packets from a peripheral device to a Virtual Private Network (VPN) gateway includes the step of implementing by a peripheral device a change to a routing table. The peripheral device receives an outbound packet. The peripheral device transmits information about the outbound packet to a VPN client application. The peripheral device modifies address information on the outbound packet with address information associated with the VPN client application. The peripheral device transmits the modified outbound packet to the VPN client application.,219,92,,
7900240,PC,"Citrix Systems, Inc.",33490678,Other Topics,5/28/2003,2003,5/15/2027,Multilayer access control security system,A computer-based system provides secure configurable access to computer network resources. A human-readable language is provided for defining access policy rules. Rules in this language are converted in an automated fashion into filters applied within the various subsystems and components in a multi-layer security system. Network users are authenticated by an access control security system that obtains basic information about that user. Based on the user ID a set of abstract policies can be retrieved. The retrieved policies are associated with the user and the groups associated with that user. Based on the retrieved rules a set of rules for multiple layers of the network are generated and applied to those subsystems. Two or more of the subsystems may be placed in series with different types of processing occurring in each of the subsystems reducing the workload of subsequent subsystems.,302,92,,
8065423,PC,"Citrix Systems, Inc.",36126795,Client Node/Access Control,9/30/2004,2004,11/4/2028,Method and system for assigning access control levels in providing access to networked content files,A method and system for assigning access control levels when granting access to resources includes a client node a collection agent and a policy engine. The client node requests access to a resource. The collection agent gathers information about the client node. The policy engine receives the gathered information and assigns one of a plurality of levels of access responsive to application of a policy to the received information and transmits the information.,247,92,,
7020773,PC,"Citrix Systems, Inc.",33132030,Computing Devices/Client Devices,7/17/2000,2000,11/22/2022,Strong mutual authentication of devices,The present invention relates to a method for enabling strong mutual authentication between two computers in a communication system. A user from a client attempts to gain access to a server. The server transmits a first key encrypted by a second key to the client and a second key encrypted by a user's private key to a verifier. The verifier uses the user's login information to obtain the user's private key which the verifier uses to obtain the second key. The verifier transmits the second key to the client and the client decrypts the first key with the second key. The client then transmits the second key encrypted by the first key to the server. If the received second key is the same as the generated second key the client is authenticated to the server.,217,92,,
8443040,PC,"Citrix Systems, Inc.",37452648,Data Packets/Packet Engine|Data Packets/Dynamic Data,5/26/2005,2005,12/24/2026,Method and system for synchronizing presentation of a dynamic data set to a plurality of nodes,A method for synchronizing presentation of a dynamic data set to a plurality of nodes. The method includes the step of generating by a consumer node in a plurality of nodes a plurality of data packets representing a change to a dynamic data set. A host node in the plurality of nodes receives the plurality of data packets. The host node transmits to a synchronization engine the plurality of data packets. The synchronization engine generates metadata information representing the difference between the dynamic data set and the plurality of data packets. The synchronization engine transmits to the plurality of nodes the metadata information and the plurality of data packets.,263,92,,
7711835,PC,"Citrix Systems, Inc.",36126795,Client Node/Access Control|Server Farm,9/30/2004,2004,9/11/2027,Method and apparatus for reducing disclosure of proprietary data in a networked environment,A method and apparatus for reducing disclosure of proprietary data in a networked environment includes a client node an access control server and an application server farm. The client node transmits a request for a file. The access control server receives the request for the file and makes an access control decision. An application server farm presents the contents of the file to the client node using an application program associated with a file type of the requested file.,137,92,,
7827139,PC,"Citrix Systems, Inc.",34965323,Data Packets/Dynamic Data,4/15/2004,2004,6/8/2025,Methods and apparatus for sharing graphical screen data in a bandwidth-adaptive manner,A bandwidth-adaptive method for synchronizing a consumer node representation of a dynamic data set and the source node representation of the dynamic data includes the step of receiving from a source node metadata information identifying a plurality of data packets that represent a state of at least a portion of a changing data set at a point in time. At least one of the identified data packets is received from the source node and at least one of the received data packets is selected responsive to the received metadata information. The metadata information and the selected at least one data packet are transmitted to a consumer node.,334,92,,
7831833,PC,"Citrix Systems, Inc.",37038278,Authentication Credentials,4/22/2005,2005,4/2/2029,System and method for key recovery,A secure mechanism for transparent key recovery for a user who has changed authentication information is disclosed. A password manager agent intercepts requests by a user to access secure resources that require user credentials. Upon detecting changed authentication information for the user the password manager agent automatically regenerates the components of a cryptographic key associated with the user that was previously used to encrypt user credentials for the user and then destroyed. After regeneration of the original cryptographic key the password manager agent uses the key to decrypt the user credentials necessary for the requested application. The regenerated key is then destroyed and the user credentials are re-encrypted by the password manager agent using a new cryptographic key associated with the user made up of multiple components. Following the re-encryption of the user credentials the components used to assemble the new key are securely stored in multiple locations and the new key is destroyed.,159,92,,
7757074,PC,"Citrix Systems, Inc.",35515553,Private Networks/Network Session|Private Networks/Data Communication Network|Security Gateway/Client Application|Security Gateway/Data Communication Network,6/30/2004,2004,3/6/2028,System and method for establishing a virtual private network,A system and method for establishing a virtual private network (VPN) between a client and a private data communication network. An encrypted data communication session such as a Secure Sockets Layer (SSL) data communication session is established between a gateway and the client over a public data communication network. The gateway then sends a programming component to the client for automatic installation and execution thereon. The programming component operates to intercept communications from client applications destined for resources on the private data communication network and to send the intercepted communications to the gateway via the encrypted data communication session instead of to the resources on the private data communication network.,154,92,,
8291119,PC,"Citrix Systems, Inc.",35786547,Data Packets/Communications Network|Data Packets/Intercepting|Remote Access/Network Packets|Remote Access/Performance Data|Private Networks/Data Communication Network,7/23/2004,2004,8/18/2028,Method and systems for securing remote access to private networks,A method for securing remote access to private networks includes a receiver intercepting from a data link layer a packet in a first plurality of packets destined for a first system on a private network. A filter intercepts from the data link layer a packet in a second plurality of packets transmitted from a second system on the private network destined for an system on a second network. A transmitter in communication with the receiver and the filter performing a network address translation on at least one intercepted packet and transmitting the at least one intercepted packet to a destination.,194,92,,
8234699,PC,"Citrix Systems, Inc.",34748957,Other Topics,12/31/2003,2003,4/22/2028,Method and system for establishing the identity of an originator of computer transactions,A method of identifying the originator of a message transmitted between a client and a server system is provided. The method includes modifying a message to be transmitted between a client and a server system to include a session identification flag and/or a session identifier 500 (e.g. at an end of the message). The method optionally includes one or more of the steps of re-computing a control portion of the message to reflect the inclusion of the session identification flag and the session identifier 502 transmitting the message between the client and the server system 504 and checking the transmitted message for the session identification flag 506 reading the session identifier of the transmitted message to determine the originator of the message 508 removing the session identification flag and/or the session identifier from the transmitted message 510 and re-computing the control portion of the message to reflect the removal of the session identification flag and/or the session identifier 512.,195,92,,
6880089,PC,"Citrix Systems, Inc.",34421844,Other Topics,3/31/2000,2000,3/31/2020,Firewall clustering for multiple network servers,"A firewall clustering system connects two or more firewalls between an internal network and an external network. The plurality of two or more firewalls are combined to supply high-availability and scaling of processing capacity. Firewalls maintain client-server state information. Flow controllers are connected to the firewalls and placed on both the internal ""trusted"" side and the external ""untrusted"" side of the firewalls. Flow controllers are placed on both sides of the firewalls to ensure that traffic for a given client-server session flows through the same firewall in both inbound and outbound directions. The firewalls perform filtering operations and/or network address translation (NAT) services. In both cases the flow controllers supply high availability scalability and traffic distribution for the firewalls in the firewall cluster.",201,92,,
7870294,PC,"Citrix Systems, Inc.",36126795,Client Node/Access Control,9/30/2004,2004,7/9/2028,Method and apparatus for providing policy-based document control,A method and apparatus for providing policy-based document control includes a client node a collection agent a policy engine and a transformation server. The client node requests access to a resource. The collection agent gathers information about the client node. The policy engine receives the gathered information and makes an access control decision based on the received information. The transformation server transforms the contents of the file from a native format to a second format and presents the transformed contents of the file to the client node.,163,92,,
8145777,PC,"Citrix Systems, Inc.",36685465,Data Packets/Data Streams|Data Packets/Packet Engine,1/14/2005,2005,5/11/2029,Method and system for real-time seeking during playback of remote presentation protocols,A foreground protocol engine receives a request for rendering the contents of a packet in a recording of a protocol data stream the protocol data stream comprising a plurality of packets. The foreground protocol engine identifies a state-snapshot having an associated timestamp previous to that of the requested packet. The foreground protocol engine displays the requested packet responsive to the identified state-snapshot.,208,92,,
8171479,PC,"Citrix Systems, Inc.",36100653,Other Topics,9/30/2004,2004,4/4/2029,Method and apparatus for providing an aggregate view of enumerated system resources from various isolation layers,A method for presenting an aggregate view of native resources includes the step of enumerating a plurality of system-scoped native resources provided by a system scope. A plurality of application-scoped native resources provided by an application isolation scope are enumerated some of which correspond to some of the plurality of system-scoped resources. For one of the plurality of system-scoped resources the existence of a corresponding one of the plurality of application-scoped resources is determined and the corresponding one of the plurality of application-scoped resources is included in an aggregate view of native resources.,190,92,,
7797724,PC,"Citrix Systems, Inc.",34979427,Transport Mechanism/Client and Server,8/31/2004,2004,2/9/2029,Methods and apparatus for secure online access on a client device,A method of securely accessing at a client device content from a server without using the non-volatile memory of the client device is disclosed. The bypassing of non-volatile memory lessens the security risk of unauthorized viewing of the server originated content. An transport mechanism is initiated on a client device and creates a document container. Downloaded documents from a server are mapped into the document container and saved within the document container in volatile memory. Substitute menus are generated within the container to replace application menus. User documents are saved directly to the originating server via the substitute menus. The downloaded copies in volatile memory automatically delete when the document container is destroyed thereby reducing security concerns of unauthorized viewing of the content at the client device.,132,92,,
7810089,PC,"Citrix Systems, Inc.",36933242,Directed Towards/Client Side|Remote Access/Client Side,12/30/2004,2004,5/10/2029,Systems and methods for automatic installation and execution of a client-side acceleration program,The present invention is directed towards systems and methods for dynamically deploying and executing an acceleration program on a client to improve the performance and delivery of remotely accessed applications. The acceleration program of the present invention is automatically installed and executed on a client in a manner transparent to and seamless with the operation of the client. An appliance may intercept a request of the client to establish a communication session or connection with a server and transmit the acceleration program to the client. In some cases the appliance determines whether the application being accessed by the client can be accelerated and only provides the acceleration program if the application can be accelerated. Upon receipt of the acceleration program the client automatically performs a silent installation of the acceleration program and executes the acceleration program upon completion of the installation.,163,92,,
7676813,PC,"Citrix Systems, Inc.",36127152,Other Topics,9/30/2004,2004,10/15/2027,Method and system for accessing resources,In a method for accessing resources provided by an operating system a request for a resource is received by an application program executing inside a first environment. A first identifier associated with the resource is acquired. A second identifier referring to the requested resource and to a launch environment on which to launch the resource is determined. The request for the resource is redirected to the identified instance of the resource responsive to the second identifier. The request for the resource is responded to using the instance of the resource located inside an environment on which the resource resides.,189,92,,
7680758,PC,"Citrix Systems, Inc.",36127152,Software Application/Redirection|Isolation Environment/Request for the Resource|Isolation Environment/Isolation Scope,9/30/2004,2004,6/27/2025,Method and apparatus for isolating execution of software applications,A method for isolating access by application programs to native resources provided by an operating system redirects a request for a native resource made by an application program executing on behalf of a user to an isolation environment. The isolation environment includes a user isolation scope and an application isolation scope. An instance of the requested native resource is located in the user isolation scope corresponding to the user. The request for the native resource is fulfilled using the version of the resource located in the user isolation scope. If an instance of the requested native resource is not located in the user isolation scope the request is redirected to an application isolation scope. The request for the native resource is fulfilled using the version of the resource located in the application isolation scope. If an instance of the requested native resource is not located in the application isolation scope the request is redirected to a system scope.,175,92,,
8230096,PC,"Citrix Systems, Inc.",36685198,Computing Devices/Data Streams|Data Packets/Data Streams|Data Packets/Packet Engine|Data Packets/Data Structures,1/14/2005,2005,12/5/2029,Methods and systems for generating playback instructions for playback of a recorded computer session,A protocol engine executing on a first device receives a recorded stream comprising a plurality of packets representing display data generated by an application program executed on a second device. The protocol engine determines for a packet in the recorded stream to render the contents of the packet in a human-perceptible manner. The protocol engine stores the determination in a playback data structure.,162,92,,
6779039,PC,"Citrix Systems, Inc.",32851155,IP Address/Other Topics,3/31/2000,2000,3/31/2020,System and method for routing message traffic using a cluster of routers sharing a single logical ip address distinct from unique ip addresses of the routers,A router clustering system connects two or more routers to a one or more distinct Internet Service Providers (ISPs) in a complete high-availability arrangement. Typically the two or more routers connect to a plurality of ISPs at a site so that an outage of one ISP does not affect connectivity and availability to the site. The router clustering system typically includes a plurality of clustering units for redundancy that avoids difficulties that arise with a single point of failure. For example two clustering units may be used in an active-passive high-availability configuration. A router cluster creator creates or configures a router cluster. To create a router cluster an administrator assigns to the cluster a logical Internet protocol (IP) address IPgw and specifies routers that are members of the cluster.,130,92,,
8077632,PC,"Citrix Systems, Inc.",36683762,Other Topics,1/20/2005,2005,8/12/2027,Automatic lan/wan port detection,A system is disclosed for which a network device with two or more ports determines which of its functions should be performed on which of its ports. A method is disclosed for monitoring the traffic on each port for characteristic traffic that indicates the function that said network device should perform on said port optionally transmitting new traffic or altering or tagging existing traffic to elicit it and mapping said network device's operations to its ports accordingly. Also disclosed is a system and method for auto inhibition and auto configuration.,306,92,,
7542471,PC,"Citrix Systems, Inc.",33554959,Data Packets/Communications Network,10/30/2002,2002,4/25/2026,Method of determining path maximum transmission unit,Network endpoints using TCP/IP operate to determine the maximum transmission unit (MTU) of the path between them. This determination is done so as to avoid the expensive IP fragmentation that will occur when transitioning links with a smaller MTU size. The standard method of determining the path MTU (PMTU) has several known deficiencies including: inefficient use of bandwidth as proper operation will likely result in the loss of one or more packets and difficulty of implementation as the reverse channel communication mechanism reception of ICMP messages indicating the discarding of unfragmentable packets is frequently blocked by firewalls and other security apparatus. A method of determining the PMTU between intermediate proxies is disclosed that does not require reception of ICMP messages or the inefficient use of bandwidth due to the presumed dropping of packets with valid data.,168,92,,
7562146,PC,"Citrix Systems, Inc.",34422852,Other Topics,10/10/2003,2003,6/13/2026,Encapsulating protocol for session persistence and reliability,The invention relates to network communications. A first protocol that encapsulates a plurality of secondary protocols is used to communicate over a network. Use of the first protocol provides session persistence and a reliable connection between a client and a host service.,180,92,,
8024568,PC,"Citrix Systems, Inc.",36540206,Other Topics,1/28/2005,2005,9/16/2029,Method and system for verification of an endpoint security scan,A method of granting access to resources includes the step of receiving a request from a node to access a resource. A scanning agent is generated to gather information about the node. A key is generated and embedded in the scanning agent. The scanning agent is transmitted to the node and gathers information regarding the node. The scanning agent encrypts the gathered information using the at least one generated key. The encrypted gathered information is received from the scanning agent and decrypted.,213,92,,
7502726,PC,"Citrix Systems, Inc.",34437417,Other Topics,6/13/2001,2001,2/16/2023,Systems and methods for maintaining a session between a client and host service,The invention relates to methods and systems for reconnecting a client and providing user authentication across a reliable and persistent communication session. A first protocol that encapsulates a plurality of secondary protocols is used to communicate over a network. A first protocol service using the first protocol provides session persistence and a reliable connection between a client and a host service. When there is a disruption in the network connection between a client and a host service the connection is reestablished and the user's session with the host service is maintained through the connection being reestablished.,179,92,,
7051084,PC,"Citrix Systems, Inc.",36423972,Transmitted Page,11/2/2000,2000,12/18/2022,Methods and apparatus for regenerating and transmitting a partial page,The invention relates to a method and apparatus for regenerating portions of the page that have changed and transmitting only those portions to the client for display. In one aspect the invention relates to a method for partial page regeneration of a transmitted page by a server. The method includes receiving page generation code that generates a page transmitting the page to a client for display associating a portion of the transmitted page with a fragment of the page generation code and executing the associated fragment of the code to regenerate the portion of the transmitted page. In one embodiment the method includes transmitting the regenerated page portion to the client for incorporation into the transmitted page.,183,92,H,10 Amazon citations. Partial web page regeneration by server
6912586,PC,Citrix Systems International Gmbh,34676527,Software Application/Software Application Deployments,11/12/1999,1999,11/12/2019,Apparatus for journaling during software deployment and method therefor,A method that all-in-one allows applications to distribute asynchronously large amounts of data from a source node to multiple destination nodes to process that data on each single node and to collect the results of that processing on one or more report-to nodes. Distributions are given levels of priority that determine the order in which they are handled by repeaters. A distribution with a given priority can use the number of sessions reserved for its priority level plus any sessions allocated for lower priority levels. Distributions are enqueues in a persistent queue according to its priority for subsequent distribution and immediately returns to the caller an ID that can be used as a correlator for the results.,95,92,,
7808906,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,11/23/2027,Systems and methods for communicating a lossy protocol via a lossless protocol using false acknowledgements,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,181,92,,
7293176,PC,"Citrix Systems, Inc.",33132030,Computing Devices/Other Topics,7/17/2000,2000,3/16/2021,Strong mutual authentication of devices,A method for enabling strong mutual authentication between two computers or devices in a communication system. A user attempting to gain access to a first computer transmits login information to the first computer. The first computer transmits a first message including a first key encrypted by a second key to the second computer. The first computer then transmits a second message to a third device. The second message includes the second key needed by the second computer to decrypt the first message. The third device uses the user's login information to obtain the user's private key which the third device uses to obtain the second key. The third device transmits the second key in a third message to the second computer. The second computer then uses the second key to decrypt the first message and obtain the first key. Once the second computer obtains the first key the second computer switches the role of the keys from the first message by encrypting the second key with the first key into a fourth message. The second computer transmits the fourth message to the server and the first computer decrypts the fourth message using its first key. If the received second key is the same as the generated second key the second computer is authenticated to the first computer.,139,92,,
8171169,PC,"Citrix Systems, Inc.",36972457,Computing Devices/Computing Environment,3/14/2005,2005,6/28/2027,Method and apparatus for updating a graphical display in a distributed processing environment,A system and method for updating a display unit remotely located from a computing system are described. The method includes copying display information from a video buffer of a computing device executing an application to generate a display update calculating a size of the display update and determining an amount of available bandwidth of a network connecting the computing device and the display unit. The method also includes calculating a time period required to communicate the display update from the computing device to the display unit transmitting the display update to the display; and repeating the method after the time period has elapsed.,305,92,,
8700695,PC,"Citrix Systems, Inc.",36945526,Directed Towards/Client Side|Remote Access/Client Side|Transport Layer Connection/Client Side,12/30/2004,2004,2/23/2032,Systems and methods for providing client-side accelerated access to remote applications via tcp pooling,The present invention is directed towards systems and methods for dynamically deploying and executing acceleration functionality on a client to improve the performance and delivery of remotely accessed applications. In one embodiment the client-side acceleration functionality is provided by an acceleration program that performs a transport layer connection pooling technique for improving performance of communications and delivery of a remotely-accessed application. The acceleration program establishes a transport layer connection from the client to the server that can be used by multiple applications on the client or that is otherwise shared among applications of the client. The acceleration program maintains the transport layer connection open to reduce the number of transport layer connection requests and number of transport layer connections established with the server for an application or multiple applications running on the client.,171,92,,
7606902,PC,"Citrix Systems, Inc.",35786547,Other Topics,7/23/2004,2004,6/20/2027,Method and systems for routing packets from an endpoint to a gateway,A method for routing packets from an endpoint to a gateway includes the step of receiving a filtering table. An outbound packet is intercepted. The outbound packet is transmitted to a client application responsive to the filtering table. The client application transmits the outbound packet to a gateway responsive to an application of a policy to the outbound packet.,113,92,,
7657657,PC,"Citrix Systems, Inc.",35207556,Remote Access/Resource Provided|Remote Access/Client Devices,8/13/2004,2004,8/29/2027,Method for maintaining transaction integrity across multiple remote access servers,A system for providing failover redundancy in a remote access solution includes at least one application resource on a back-end server and multiple gateway servers. One of the gateway servers is a primary gateway server while the others are failover gateway servers. Each gateway servers hosts a session with at least one executing application instance for the same application each session on the failover gateway servers maintained in the same state as that on the primary gateway server. The primary gateway server is the only gateway servers allowed to communicate with the application resource(s). The system further includes a client device in communication over a VPN with the primary gateway server receiving output of the application instance executing on the primary gateway server and displaying the received output on a viewer of the client device. The client device also sends input to the primary gateway server.,224,92,,
7609721,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,4/26/2027,Systems and methods for adjusting the maximum transmission unit for encrypted communications,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present invention provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,170,91,,
7340772,PC,"Citrix Systems, Inc.",34437417,Other Topics,6/13/2001,2001,6/13/2021,Systems and methods for continuing an operation interrupted from a reconnection between a client and server,The invention relates to methods and systems for reconnecting a client and providing user authentication across a reliable and persistent communication session. A first protocol that encapsulates a plurality of secondary protocols is used to communicate over a network. A first protocol service using the first protocol provides session persistence and a reliable connection between a client and a server. An operation may be executed or transacted between the client and the server. When there is a disruption in the network connection between the client and the server that interrupts the operation the connection is automatically reestablished and the operation is continued.,211,91,,
7496097,PC,"Citrix Systems, Inc.",34594904,Virtual Server/Virtual Private Network|Private Networks/Additional Target Packet Traffic,11/11/2003,2003,8/9/2026,"System, apparatus and method for establishing a secured communications link to form a virtual private network at a network protocol layer other than at which packets are filtered",A system apparatus and a method for implementing a secured communications link at a layer other than that at which packets are filtered are disclosed. In one embodiment a computer system is configured to form a virtual private network (“VPN”) and comprises an address inspection driver to identify initial target packet traffic addressed to a target server. Also the computer system includes a pseudo server module to receive rerouted initial target packet traffic from the address inspection driver. The pseudo server module is configured to convey packet regeneration instructions to a VPN gateway. The address inspection driver functions to identify additional target packet traffic addressed to the target server and routes the additional target packet traffic to the pseudo server. In one embodiment the pseudo server is configured to strip header information from the additional target packet traffic to form a payload and thereafter to route the payload to the target server.,115,91,,
7562226,PC,"Citrix Systems, Inc.",36579942,Remote Access/Client Devices,1/14/2005,2005,4/15/2027,System and method for permission-based access using a shared account,A mechanism for rapidly authenticating an interactive user in an operating system logon session based on a shared account by using a credential delivery application to enable permission-based access to a user's remote session from the shared account is disclosed. The present invention provides the ability to switch local interactive users authenticate the new interactive user and switch the remote session without requiring the client to first establish a new logon session tied to the new local interactive user. The present invention also alters the normal locking mechanism found in operating system logon sessions so as to restrict access to an interactive local user's applications (both local and remote) while still allowing the rapid switching of interactive users at the client device.,243,91,,
6789112,PC,"Citrix Systems, Inc.",32927807,Graphical User Interface/Communication Channel,5/8/2000,2000,5/8/2020,Method and apparatus for administering a server having a subsystem in communication with an event channel,Methods and apparatus for administering a remote server having a subsystem in communication with an event bus. In one aspect of the present invention an administration tool for administering a server has a subsystem in communication with an event bus. The administration tool includes a graphical user interface communications channel and a graphical user interface module corresponding to the server subsystem wherein the graphical user interface module is in communication with the channel. The administration tool also includes a transport module in communication with the channel and the graphical user interface module. The graphical user interface module transmits an administration command to the corresponding server subsystem by sending the command to the transport module via the communications channel.,139,91,,
7748032,PC,"Citrix Systems, Inc.",35447847,Client Node/Other Topics,9/30/2004,2004,1/5/2029,Method and apparatus for associating tickets in a ticket hierarchy,A method and apparatus for associating session ticket includes a ticketing authority server. The ticketing authority server receives a ticket generation request and information about a client node. It identifies a master session ticket associated in a storage element with the client node. The ticketing authority server then generates a derivative session ticket for the client node and associates the derivative session ticket with the master session ticket. Finally the ticketing authority server stores information about the client node and the derivative session ticket in the storage element.,144,91,,
7680885,PC,"Citrix Systems, Inc.",35096171,Data Packets/Dynamic Data,4/15/2004,2004,5/17/2028,Methods and apparatus for synchronization of data set representations in a bandwidth-adaptive manner,A bandwidth-adaptive method for synchronizing a consumer node representation of a dynamic data set and the source node representation of the dynamic data includes the step of receiving from a source node metadata information identifying a plurality of data packets that represent a state of at least a portion of a changing data set at a point in time. At least one of the identified data packets is received from the source node and at least one of the received data packets is selected responsive to the received metadata information. The metadata information and the selected at least one data packet are transmitted to a consumer node.,240,91,,
7756984,PC,"Citrix Systems, Inc.",35482180,IP Address/Virtual Private Network,9/27/2004,2004,1/27/2027,Systems and methods for virtual host name roaming,Systems and methods for providing a uniform network addressing scheme for a user accessing a network that is independent from the computer from which the user accesses the network. A virtual IP address is assigned to a user a user session or a program run by user where the IP address is different from the IP address of the computer of the user and different from other users. A virtual host name is assigned to and associated with the virtual IP address of the user user session or the program the user is running. As the user accesses the network from different computers the user can be assigned the same virtual host name and in some cases the same virtual IP address. Furthermore as the user accesses the network from multiple user sessions the user can be assigned a virtual host name that uniquely identifies the user and the user session.,397,91,,
6785726,PC,"Citrix Systems, Inc.",32908817,Transport Mechanism/Event Bus,5/8/2000,2000,5/8/2020,Method and apparatus for delivering local and remote server events in a similar fashion,The present invention relates to a method and apparatus for delivering events to local and remote servers. In one aspect the invention relates to a method for communicating in a server system. The method includes the steps of providing a first server having a first plurality of subsystems and a first event bus providing a second server having a second plurality of subsystems and a second event bus and posting to the first event bus by one of the first plurality of subsystems a local event having as its target another of the first plurality of subsystems. The method also includes the step of posting to the first event bus by one of the first plurality of subsystems a remote event having as its target one of the second plurality of subsystems.In one embodiment the method also includes the step of delivering by the event bus the local event to the target subsystem. In another embodiment the method also includes the step of delivering by the event bus the remote event to a transport mechanism. In another embodiment the method also includes the step of transmitting by the transport mechanism the remote event to the target subsystem using TCP/IP. In another embodiment the method also includes the step of generating by one of the first plurality of subsystems an event for transmission to another subsystem.,181,91,,
6968557,PC,"Citrix Systems, Inc.",35345112,Other Topics,12/18/2000,2000,1/16/2022,Reducing stack memory resources in a threaded computer system,A computer thread utilizes an auxiliary stack resource to execute program code function calls requiring substantial stack memory resources. In a wrapper embodiment portions of the program code having function calls requiring substantial stack resources are wrapped in a wrapper that calls an auxiliary stack resource for executing the function call and returns the auxiliary stack resource when the function call is completed. In one embodiment the stack memory allocated to the thread is selected to accommodate a first class of function calls requiring comparatively low amounts of stack memory and the auxiliary stack resource is called to accommodate the requirements of a second class of function calls requiring comparatively large amounts of stack memory. The allocation of stack memory according to the requirements of function calls allows for multiple computing tasks such as those carried out by Internet websites and services to be carried out more efficiently.,176,91,,
6999957,PC,"Citrix Systems, Inc.",32993501,Real Time/Information Packets,1/11/2000,2000,1/31/2022,System and method for real-time searching,A system and method for real time search that matches a plurality of client queries against a plurality of terms extracted from a plurality of information packets. The method and system allows implementation of complex matching techniques in real time. The method and system provides that a group of information packets originating from a single information source is checked in order to provide a query result. In addition it provides that received information packets and information representative of a reception of extracted terms are stored in a manner that allows fast insertion and deletion of content.,377,91,,
8706877,PC,"Citrix Systems, Inc.",37235963,Directed Towards/Client Side|Transport Layer Connection/Client Side|Transport Layer Connection/Intermediary,12/30/2004,2004,9/11/2029,Systems and methods for providing client-side dynamic redirection to bypass an intermediary,The present invention is directed towards systems and methods for dynamically redirecting on a client communications of the client with a server to bypass an intermediary that is determined to be unavailable for such communications. An acceleration program on the client establishes a transport layer connection between the client and server and intercepts communications of the client to the server. The transport layer connection may be established via an intermediary such as a gateway proxy or appliance. If the client-side acceleration program determines the intermediary is not available for communicating by the client to the server the acceleration program automatically establishes a second transport layer connection to the server in order to bypass the intermediary. The acceleration program then transmits the intercepted communications of the client via the second transport layer connection to the server. The acceleration program may automatically redirect intercepted communications of the client to the server transparently to any user or application of the client.,250,91,,
7724657,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,3/24/2029,Systems and methods for communicating a lossy protocol via a lossless protocol,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,191,91,,
6922724,PC,"Citrix Systems, Inc.",34749090,Server Farm,5/8/2000,2000,5/8/2020,Method and apparatus for managing server load,The present invention relates to a method and apparatus for managing and balancing the load of each of the servers in the network. In one aspect the invention relates to an apparatus for managing server load in a networked system of servers. The apparatus includes a dynamic store storing run-time information associated with a plurality of servers in a server farm. The apparatus also includes an event bus. The apparatus also includes a load management subsystem in communication with the dynamic store via the event bus. The load management subsystem receives a request from the event bus to identify a server and transmits a message to the event bus that includes an address of an identified server based on information from the dynamic store.,173,91,,
8352606,PC,"Citrix Systems, Inc.",36126795,Client Node/Access Control,9/30/2004,2004,9/20/2024,Method and system for assigning access control levels in providing access to networked content files,A method and system for assigning access control levels when granting access to resources includes a client node a collection agent and a policy engine. The client node requests access to a resource. The collection agent gathers information about the client node. The policy engine receives the gathered information and assigns one of a plurality of levels of access responsive to application of a policy to the received information and transmits the information.,170,91,,
8069226,PC,"Citrix Systems, Inc.",34978631,Other Topics,9/30/2004,2004,8/25/2027,System and method for data synchronization over a network using a presentation level protocol,A mechanism for synchronizing data on a device communicating with a client system with data accessible from a server-hosted session is disclosed. The synchronization occurs over a network connection using a presentation-level protocol to transmit communications between the client system and the server system. Devices communicating with the client system are mapped into a user session. Once the device is mapped into the server-hosted session data on the device in communication with the client system are synchronized with data accessible from the user-hosted session.,252,91,,
7712110,PC,"Citrix Systems, Inc.",34980088,Virtual Server/Client Devices,9/28/2004,2004,6/25/2027,System and method for remoting twain function calls from a user session to a client system,A mechanism for remoting Twain function calls within a user session to a client system is disclosed. By hooking Twain function calls made by a Twain application on the server the Twain function calls may be remoted over a virtual connection to a client system. A proxy application corresponding to the server-based Twain application is created on the client system. The proxy application communicates with the server and makes the appropriate function calls to the remainder of the Twain framework. The use of the proxy application allows multiple applications and devices to be supported simultaneously. Messages sent over the virtual connection are filtered prior to transmission thereby limiting the amount of required communication traffic. A multiplexor and demultiplexor are utilized in order to efficiently use bandwidth on the virtual channel. The present invention additionally compresses image data prior to transmission over the virtual channel.,146,91,,
6799199,PC,"Citrix Systems, Inc.",32993501,Real Time/Media Stream,1/11/2000,2000,1/11/2020,Media monitor system,A media monitor system monitors content of a plurality of information streams provided by a plurality of information sources coupled to a media monitor system. The media monitor system is adapted to be coupled to a plurality of client systems the media monitor system includes an information retriever a distributor and an analyzer. The analyzer has a real time search engine and a real time alert engine.,422,91,,
8014421,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Intermediary Devices/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,7/22/2025,Systems and methods for adjusting the maximum transmission unit by an intermediary device,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present invention provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,166,91,,
7822831,PC,Citrix Systems International Gmbh,34104274,Mobile Devices/Enterprise Applications|Mobile Devices/Mobile Clients,7/31/2003,2003,3/4/2030,"Method, system and program product for preserving and restoring mobile device user settings",Under the present invention an enterprise application and corresponding client properties file is provided on a mobile device. Upon initiation of the mobile device the client properties file is read into application memory. The user can then make modifications to the client properties file to change the user settings as he/she desires. If an updated properties file is later received from the server it is reconciled with the client properties file. Thus the user's modifications are not discarded or overwritten. In addition the reconciled properties file could be synchronized to the server so that if the mobile device is lost or fails the user's settings can be restored.,109,90,,
7849269,PC,"Citrix Systems, Inc.",36441220,Directed Towards/Dynamically Generated Objects,1/24/2005,2005,7/20/2026,System and method for performing entity tag and cache control of a dynamically generated object not identified as cacheable in a network,The present invention is directed towards a method and system for modifying by a cache responses from a server that do not identify a dynamically generated object as cacheable to identify the dynamically generated object to a client as cacheable in the response. In some embodiments such as an embodiment handling HTTP requests and responses for objects the techniques of the present invention insert an entity tag or etag into the response to provide cache control for objects provided without entity tags and/or cache control information from an originating server. This technique of the present invention provides an increase in cache hit rates by inserting information such as entity tag and cache control information for an object in a response to a client to enable the cache to check for a hit in a subsequent request.,215,90,,
7760729,PC,"Citrix Systems, Inc.",33490680,Other Topics,5/28/2003,2003,1/13/2028,Policy based network address translation,A system and method is described for providing policy-based Network Address Translation (NAT) configurations wherein each user/resource policy within a network protection device may use a different set of address translation mappings.,215,90,,
8042120,PC,"Citrix Systems, Inc.",36127152,Isolation Environment/Isolation Scope,9/30/2004,2004,4/17/2028,Method and apparatus for moving processes between isolation environments,A method for moving an executing process from a source isolation scope to a target isolation scope includes the step of determining that the process is in a state suitable for moving. The association of the process changes from a source isolation scope to a target isolation scope. A rule loads in association with the target isolation scope.,173,90,,
8261057,PC,"Citrix Systems, Inc.",35515553,Private Networks/Network Session|Private Networks/Data Communication Network|Security Gateway/Client Application|Security Gateway/Data Communication Network,6/30/2004,2004,5/15/2025,System and method for establishing a virtual private network,A system and method for establishing a virtual private network (VPN) between a client and a private data communication network. An encrypted data communication session such as a—Secure Sockets Layer (SSL) data communication session is established between a gateway and the client over a public data communication network. The gateway then sends a programming component to the client for automatic installation and execution thereon. The programming component operates to intercept communications from client applications destined for resources on the private data communication network and to send the intercepted communications to the gateway via the encrypted data communication session instead of to the resources on the private data communication network.,107,90,,
8351333,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,7/22/2025,Systems and methods for communicating a lossy protocol via a lossless protocol using false acknowledgements,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,125,90,,
8019868,PC,"Citrix Systems, Inc.",35786547,Transport Layer Connection/Response to the Client|Security Gateway/Client Application,7/23/2004,2004,7/30/2025,Method and systems for routing packets from an endpoint to a gateway,A method for routing packets from an endpoint to a gateway includes receiving by a driver of a process for providing secure communications to a gateway from an endpoint a filtering table. The driver may intercept an outbound packet the driver terminating a first transport layer connection with an application of the endpoint. The driver may transmit the outbound packet to a client application responsive to the filtering table. The client application provides a second transport layer connection from the endpoint to the gateway. Responsive to an application of a policy to the outbound packet the client application may transmit the outbound packet to the gateway.,115,90,,
8914522,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,8/2/2031,Systems and methods for facilitating a peer to peer route via a gateway,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,274,90,,
6917960,PC,"Citrix Systems, Inc.",34710279,Other Topics,5/5/2000,2000,5/5/2020,Intelligent content precaching,A method and apparatus for content precaching is described. In one embodiment the method comprises periodically checking servers in a networked environment for new content based on a profile storing content identified as new on the servers in a cache accessible by an network access gateway the network access gateway thereafter detecting whether a request is for at least a portion of the identified new content previously stored in the cache and returning the at least a portion of the identified new content from the cache.,131,90,,
8423673,PC,"Citrix Systems, Inc.",36603340,Remote Access/Compression Algorithm,3/14/2005,2005,5/7/2028,Method and apparatus for updating a graphical display in a distributed processing environment using compression,A system and method for updating a remote display unit that communicates with a computing system are described. The method includes accessing display update information from an update queue that stores drawing commands issued by an application executing on the computing system caching the display update information applying a lossy compression algorithm to the display update information to create a lossy display update and transmitting the lossy update to the remote display. The method also includes applying a lossless compression algorithm to the display update information in the cache to create a lossless display update and transmitting the lossless display update a predetermined of time after transmitting the lossy update.,232,90,,
7984192,PC,"Citrix Systems, Inc.",36126967,Computing Devices/Computing Environment|Intermediary Devices/User Session|Isolation Environment/Remote User,9/27/2004,2004,8/27/2027,System and method for assigning unique identifiers to each remote display protocol session established via an intermediary device,The invention relates to systems and methods for assigning a unique network identifier to one or more programs invoked on a computer. The computer obtains a plurality of network identifiers and associates a first network identifier to a first program invoked on the computer and associates a second network identifier different from the first network identifier to a second program invoked on the computer. The program may be a user session hosted by the computer an application or an application isolation environment. The computer through a network communication interface transmits the first network identifier with the network communication of the first program and transmits the second network identifier with network communication of the second program.,297,90,,
7490356,PC,"Citrix Systems, Inc.",35414786,Other Topics,7/20/2004,2004,6/23/2026,End user risk management,A flexible efficient and easy-to-use computer security management system effectively evaluates and responds to informational risks on a wide variety of computing platforms and in a rapidly changing network environment. An individual computer system dynamically monitors its end user without regard to network connectivity in order to calculate a risk score and to ensure that the end user's behavior does not put corporate information or other assets at risk. Data regarding such risks and responses are analyzed and stored in real-time.,141,90,,
7814287,PC,"Citrix Systems, Inc.",37662950,Other Topics,7/15/2005,2005,4/13/2028,Using writeable page tables for memory address translation in a hypervisor environment,A method and system for using writeable page tables to increase performance of memory address translation in computing environments utilizing a hypervisor. Guest operating systems are given temporary write-access to a page table page after the system confirms that such page is not part of the current address space (i.e. confirming that the page is part of a different page table from the one that is currently in use such as a different user-space process). Alternatively if the page is part of the currently running page table the system invalidates the appropriate entry in the root page directory thus unlinking it and ensuring that the appropriate region of virtual address space is flushed from the translation lookaside buffer (TLB) in the current CPU and others that may be using it. After giving the OS write-access the page is added to a validation queue. Validation of all 1024 entries and re-hooking of the page occurs whenever a page fault is taken due to the page being unhooked or before context switching to another page table.,159,90,,
7035907,PC,"Citrix Systems, Inc.",36191174,Other Topics,9/13/2000,2000,10/4/2021,Manipulating content objects to control their display,A method and apparatus for processing content objects prior to their display is described. In one embodiment the method comprises a client receiving a content object over a network connection; the client prior to allowing the content object to be dynamically displayed examining the content object and changing a portion of the content object to reflect information stored locally to the client and dynamically displaying the content object changed based on the local information at the client.,139,90,,
7702750,PC,"Citrix Systems, Inc.",34982530,Virtual Server/Client Devices,9/29/2004,2004,4/9/2027,System and method for event detection and re-direction over a network using a presentation level protocol,A mechanism for detecting events generated from a device in communication with a client system and the re-direction of those events to a server system over a network using a presentation-level protocol is disclosed. Plug and play events are detected at the client system bound to a virtual connection for a user session and re-directed for handling to a server-based system using the presentation-level protocol. The server-based system maps the device to the user session. Applications which have registered a callback with the session are informed and generate an appropriate message which is transmitted to the device in communication with the client system via a specified virtual communication connection in the user session.,260,90,,
8042165,PC,"Citrix Systems, Inc.",36685476,Server Farm,1/14/2005,2005,4/11/2028,Method and system for requesting and granting membership in a server farm,A server transmits to a server in a server farm a request for membership in the server farm and a first nonce. The server derives a Kerberos service ticket and a Kerberos authenticator responsive to generating a hash of the server farm name a passphrase the name of the server the name of the server in the server farm the first nonce and a second nonce. The server transmits the Kerberos service ticket and the Kerberos authenticator to the server in the server farm. The server in the server farm authenticates the requesting server responsive to the received Kerberos service ticket and the Kerberos authenticator and a generated hash. The server in the server farm transmits responsive to the authentication a secret to the requesting server.,323,89,,
8302101,PC,"Citrix Systems, Inc.",36127152,Isolation Environment/Request for the Resource,9/30/2004,2004,10/2/2029,"Methods and systems for accessing, by application programs, resources provided by an operating system",In a method for accessing by application programs resources provided by an operating system a process receives a request for a resource and an identifier associated with the resource. It is determined that the requested resource resides in a location outside the application isolation environment. The request for the resource and the identifier associated with the resource is redirected to the determined location. The request for the resource is responded to using an instance of the resource residing in the determined location.,127,89,,
7587755,PC,"Citrix Systems, Inc.",34972207,Remote Access/User Application Requests|Remote Access/Access Rights,7/2/2004,2004,5/12/2026,System and method for executing interactive applications with minimal privileges,A mechanism for running interactive applications with a minimal set of privileges is disclosed. The privileges form a subset of the privileges afforded to the user requesting the application and are allocated consistent with the principle of least privilege. The application runs with the minimal amount of permissions necessary to accomplish its assigned tasks. A new user account is created and provisioned or identified for each application to which a user requests access. The accounts have a subset or superset of the access rights and operating system privileges that the user who is logged on to the system and requesting access to the application ordinarily enjoys. The subset/superset of the user's privileges is determined by a policy-based decision system. The policy-based decision system makes its determination based on an analysis of the application requirements an analysis of the data security and privacy concerns associated with the execution of the application the identity of the user and user's role and any other policy considerations previously specified by an administrator. Once the determination as to the appropriate set of privileges to be afforded in the execution environment has been made the execution environment is created and provisioned or a pre-existing execution environment possessing the requisite privileges is identified and the remote user is logged into the server-side account. The application-specific accounts may be audited by audit trail tools that provide evidence of policy enforcement.,118,88,,
7849270,PC,"Citrix Systems, Inc.",36441220,Directed Towards/Dynamically Generated Objects,1/24/2005,2005,12/30/2025,System and method for performing entity tag and cache control of a dynamically generated object not identified as cacheable in a network,The present invention is directed towards a method and system for modifying by a cache responses from a server that do not identify a dynamically generated object as cacheable to identify the dynamically generated object to a client as cacheable in the response. In some embodiments such as an embodiment handling HTTP requests and responses for objects the techniques of the present invention insert an entity tag or etag into the response to provide cache control for objects provided without entity tags and/or cache control information from an originating server. This technique of the present invention provides an increase in cache hit rates by inserting information such as entity tag and cache control information for an object in a response to a client to enable the cache to check for a hit in a subsequent request.,86,88,,
7865958,PC,"Citrix Systems, Inc.",35414786,Other Topics,7/20/2004,2004,9/24/2024,End user risk management,A flexible efficient and easy-to-use computer security management system effectively evaluates and responds to informational risks on a wide variety of computing platforms and in a rapidly changing network environment. An individual computer system dynamically monitors its end user without regard to network connectivity in order to calculate a risk score and to ensure that the end user's behavior does not put corporate information or other assets at risk. Data regarding such risks and responses are analyzed and stored in real-time.,139,88,,
8739274,PC,"Citrix Systems, Inc.",35600727,Data Packets/Communications Network|Data Packets/Client Devices,6/30/2004,2004,7/10/2025,Method and device for performing integrated caching in a data communication network,A device that implements a method for performing integrated caching in a data communication network. The device is configured to receive a packet from a client over the data communication network wherein the packet includes a request for an object. At the operating system/kernel level of the device one or more of decryption processing of the packet authentication and/or authorization of the client and decompression of the request occurs prior to and integrated with caching operations. The caching operations include determining if the object resides within a cache serving the request from the cache in response to a determination that the object is stored within the cache and sending the request to a server in response to a determination that the object is not stored within the cache.,270,87,,
8117559,PC,"Citrix Systems, Inc.",36207423,Other Topics,9/30/2004,2004,12/4/2028,Method and apparatus for virtualizing window information,A method and apparatus for virtualizing access to windows includes a hooking mechanism a window name virtualization engine and an operating system interface. A request relating to a window from a process executing in the context of a user account is received the request including a virtual window name. A determination is made for a literal name for the window using a scope-specific identifier. A request is issued to the operating system including the determined literal window name. A window handle is associated with the determined virtual window name.,165,87,,
8634420,PC,"Citrix Systems, Inc.",35149192,Computing Devices/Network Packets|Directed Towards/Client Side|Directed Towards/Network Packets|Remote Access/Client Side|Remote Access/Network Packets,7/23/2004,2004,8/27/2027,Systems and methods for communicating a lossy protocol via a lossless protocol,The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device such as a gateway. Additionally the present invention provides the following techniques to optimize peer-to peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter accounting for overhead due to encryption 4) application-aware prioritization of client-side network communications and 5) network disruption shielding for reliable and persistent network connectivity and access.,226,87,,
8528047,PC,"Citrix Systems, Inc.",33490678,Other Topics,5/28/2003,2003,5/28/2024,Multilayer access control security system,A computer-based system provides secure configurable access to computer network resources. A human-readable language is provided for defining access policy rules. Rules in this language are converted in an automated fashion into filters applied within the various subsystems and components in a multi-layer security system. Network users are authenticated by an access control security system that obtains basic information about that user. Based on the user ID a set of abstract policies can be retrieved. The retrieved policies are associated with the user and the groups associated with that user. Based on the retrieved rules a set of rules for multiple layers of the network are generated and applied to those subsystems. Two or more of the subsystems may be placed in series with different types of processing occurring in each of the subsystems reducing the workload of subsequent subsystems.,221,87,,
8132176,PC,"Citrix Systems, Inc.",36127152,Isolation Environment/Request for the Resource|Isolation Environment/Isolation Scope,9/30/2004,2004,5/22/2028,"Method for accessing, by application programs, resources residing inside an application isolation scope",In a method for accessing by application programs resources provided by an operating system a process receives a request for a resource and an identifier associated with the resource. It is determined that the requested resource resides inside an application isolation environment. The request for the resource and the identifier associated with the resource is redirected to the application isolation environment. The request for the resource is responded to using an instance of the resource residing inside the application isolation environment.,138,86,,
7630956,PC,"Citrix Systems, Inc.",36954025,Other Topics,3/7/2005,2005,7/28/2026,System and method for analyzing and reporting extensible data from multiple sources in multiple formats,A system and method for analyzing and reporting data from multiple sources is provided. The system is a foundation for an analytical platform that covers not only traditional relational data but also a new generation of extensible data formats designed for the web such as those based on XML (FIXML FpML ebXML XBRL ACORD etc.) as well as HTML E-mail Excel PDF and others. In a preferred embodiment the eXtensible on-line analytical processing (XOLAP) is a scalable client/server platform that allows the multi-dimensional analysis of modern data types as well as traditional relational data by bringing them all into an internal common XML-based model without the time and expense of creating a data warehouse.,182,85,,
7969876,PC,"Citrix Systems, Inc.",33554959,Data Packets/Communications Network,10/30/2002,2002,12/1/2023,Method of determining path maximum transmission unit,Network endpoints using TCP/IP operate to determine the maximum transmission unit (MTU) of the path between them. This determination is done so as to avoid the expensive IP fragmentation that will occur when transmitting links with a smaller MTU size. The standard method of determining the path MTU (PMTU) has several known deficiencies including: inefficient use of bandwidth as proper operation will likely result in the loss of one or more packets and difficulty of implementation as the reverse channel communication mechanism reception of ICMP messages indicating the discarding of unfragmentable packets is frequently blocked by firewalls and other security apparatus. A method of determining the PMTU between intermediate proxies is disclosed that does not require reception of ICMP messages or the inefficient use of bandwidth due to the presumed dropping of packets with valid data.,150,84,,
8340130,PC,"Citrix Systems, Inc.",36683795,Data Packets/Data Structures,1/14/2005,2005,11/26/2029,Methods and systems for generating playback instructions for rendering of a recorded computer session,A type of input stored by a packet in a recorded session is identified this recorded session comprises a plurality of packets that represent display data that is generated by an application program. At least one of the packets can be marked responsive to determining the type of input stored in that packet. A destination for rendering the contents of the packet can also be stored in a playback data structure in response to marking at least one of the packets.,200,81,,
8286230,PC,"Citrix Systems, Inc.",35447847,Client Node/Other Topics,9/30/2004,2004,3/18/2025,Method and apparatus for associating tickets in a ticket hierarchy,A method and apparatus for associating session ticket includes a ticketing authority server. The ticketing authority server receives a ticket generation request and information about a client node. It identifies a master session ticket associated in a storage element with the client node. The ticketing authority server then generates a derivative session ticket for the client node and associates the derivative session ticket with the master session ticket. Finally the ticketing authority server stores information about the client node and the derivative session ticket in the storage element.,101,81,,
7098815,PC,"Citrix Systems, Inc.",36915581,Data Packets/Data Streams|Compression History,3/25/2005,2005,3/25/2025,Method and apparatus for efficient compression,A compression method and apparatus identifying candidates for compression by selectively fingerprinting shingles or overlapping subsets of an input dataset and creating a set of characteristic input fingerprints based on fingerprint value. In some cases the characteristic fingerprints are selected based on the relative value of the fingerprints with respect to other fingerprints in the same cluster. Potential matches may be identified and confirmed by comparing the characteristic input fingerprints with fingerprints associated with a history. Advantageously some examples according to the current invention may be applied to input data such as: data files bit streams byte streams packet streams and previously encoded compressed and/or encrypted data. In some cases the number of fingerprints selected per cluster the cluster size the shingle size or shingle configuration the size or configuration of the overlap between successive shingles and the configuration for adding entries to a history may be adaptively configurable.,125,80,,
7603700,PC,"Citrix Systems, Inc.",35945046,Authentication Credentials,8/31/2004,2004,1/4/2026,Authenticating a client using linked authentication credentials,Techniques are provided for improving security in a single-sign-on context by providing to a user's client system two linked authentication credentials in separate logical communication sessions and requiring that both credentials be presented to a host system. Only after presentation of both credentials is the user authenticated and permitted to access applications on the host system.,202,80,,
8194673,PC,"Citrix Systems, Inc.",33490680,Other Topics,5/28/2003,2003,5/28/2024,Policy based network address translation,A system and method is described for providing policy-based Network Address Translation (NAT) configurations wherein each user/resource policy within a network protection device may use a different set of address translation mappings.,141,79,,
8312074,PC,Bytemobile Inc,37040699,Transmitted Page,5/26/2005,2005,12/14/2027,Method for multipart encoding,A system including a user agent configured to transmit request data to a content server wherein the request data corresponds to a request for a web page; and an optimization server configured to receive a first response data corresponding to the request data from a content server identify response object data within the first response data query the content server for second response data that is associated with the identified response object data and transmit optimized data to the user agent wherein the contents of the optimized data can include the first response data and the second response data.,224,79,,
8352964,PC,"Citrix Systems, Inc.",36127152,Isolation Environment/Isolation Scope,9/30/2004,2004,9/30/2024,Method and apparatus for moving processes between isolation environments,A method for moving an executing process from a source isolation scope to a target isolation scope includes the step of determining that the process is in a state suitable for moving. The association of the process changes from a source isolation scope to a target isolation scope. A rule loads in association with the target isolation scope.,232,79,,
6961726,PC,Citrix Systems International Gmbh,35150883,Remote Access/Remote File|Local Computing/Remote File,5/25/2000,2000,5/25/2020,"Method of, system for, and computer program product for storing, retrieving, and using remote host file attributes on a local file system",Remote file attributes are retrieved stored and accessed for use on a local data processing system's installable file system. The remote file attributes are first obtained on a remote host by a communication program located on the remote host. The remote file attributes are then transferred to a client communication program on the local data processing system via a message. The client communication program uses the local data processing system's shared storage mechanisms to save the remote file attributes and to make them available to other processes executing on the local data processing system. The remote file attributes have an associated lifetime or duration on the local data processing system. This lifetime is pre-determined by the client communication program as to not to exceed a certain time limit and the remote file attributes are cleared when this maximum lifetime is reached. This clearing causes periodic synchronization between the remote file attributes stored on the local data processing system and the remote file attributes on the host.,279,78,,
7555532,PC,"Citrix Systems, Inc.",36075283,Other Topics,9/23/2004,2004,2/17/2027,Advanced content and data distribution techniques,A method and apparatus for displaying locally stored content objects is disclosed. In one embodiment the method comprises receiving a message containing one or more parameters indicative of one or more characteristics of a client and sending one of a plurality of groups of one or more content objects from a set of content objects to the client based on the one or more parameters wherein each of the plurality of groups is suited for use with clients having a different set of one or more parameters.,137,77,H?,30 Amazon citations. Intermediary pre-caches content at a client by pulling server content filtered based on client HW characteristics. Eg Android device may precache content on device based on device HW
8346811,PC,"Citrix Systems, Inc.",36954025,Other Topics,3/7/2005,2005,4/27/2026,System and method for analyzing and reporting extensible data from multiple sources in multiple formats,A system and method for analyzing and reporting data from multiple sources is provided. The system is a foundation for an analytical platform that covers not only traditional relational data but also a new generation of extensible data formats designed for the web such as those based on XML (FIXML FpML ebXML XBRL ACORD etc.) as well as HTML E-mail Excel PDF and others. In a preferred embodiment the eXtensible on-line analytical processing (XOLAP) is a scalable client/server platform that allows the multi-dimensional analysis of modern data types as well as traditional relational data by bringing them all into an internal common XML-based model without the time and expense of creating a data warehouse.,116,76,,
8051207,PC,"Citrix Systems, Inc.",35786616,Data Packets/Communications Network|Data Packets/Client Devices,6/25/2004,2004,8/18/2025,Inferring server state in s stateless communication protocol,Server state objects are identified by an intermediate server among packets transmitted between an application server and a client device on a network based upon a stateless communication protocol by monitoring and analyzing the packets transmitted between the application server and the client device. The packets are parsed into a plurality of name-value pairs. The entropy of the name-value pairs having a same name field is computed and candidate data objects that are likely to be server state objects are selected based upon the computed entropy. Candidate data objects that were transmitted bi-directionally between the application sever and the client device are identified as server state objects.,164,74,,
7415498,PC,Citrix Systems International Gmbh,34700381,Other Topics,12/10/2003,2003,3/15/2026,Time limited collaborative community role delegation policy,A method and system for establishing and maintaining a permission delegation policy for roles within a collaborative computing environment provide a list of potential delegatee end user persons to a delegator end user person. A list of delegatable permissions is provided to the delegator end user person in which the list of delegatable permissions correspond to permissions held by the delegator end user person. A delegation policy is received from the delegator end user person. The delegation policy includes one or more delegated permissions from the list of delegatable permissions and identification of a delegatee end user person from the list of potential delegatee end users persons designated to receive the delegated permissions.,95,72,,
7519739,PC,Citrix Systems International Gmbh,34200808,Other Topics,8/26/2003,2003,8/7/2026,Synchronizing a client user interface with a server backend,In a server system coupled to at least one client system a method for synchronizing a user interface (UI) presentation to be displayed to a user of the client system to a UI description maintained by the server system the method comprising the steps of: converting the UI description into one or more UI object definitions; storing each UI object definition in a document; and transmitting the document to the client system; the client system adapted to convert the UI object definitions to UI objects to generate the UI presentation.,106,71,,
8874791,PC,"Citrix Systems, Inc.",34437417,Other Topics,6/13/2001,2001,1/22/2024,Automatically reconnecting a client across reliable and persistent communication sessions,The invention relates to methods and systems for reconnecting a client and providing user authentication across a reliable and persistent communication session. The method includes providing a first connection between a client and first protocol service and a second connection between the first protocol service and a host service. The first protocol service detects a disruption in the first connection. The client re-establishes the first connection between the client and the first protocol service while maintaining the second connection between the first protocol service and the host service. The first protocol service receives a ticket associated with the client and validates the ticket. The first protocol service links the re-established first connection to the maintained second connection after the ticket is validated.,187,70,,
8250301,PC,"Citrix Systems, Inc.",35600727,Data Packets/Communications Network|Data Packets/Client Devices,6/30/2004,2004,7/10/2028,Systems and methods of marking large objects as non-cacheable,A device that implements a method for performing integrated caching in a data communication network. The device is configured to receive a packet from a client over the data communication network wherein the packet includes a request for an object. At the operating system/kernel level of the device one or more of decryption processing of the packet authentication and/or authorization of the client and decompression of the request occurs prior to and integrated with caching operations. The caching operations include determining if the object resides within a cache serving the request from the cache in response to a determination that the object is stored within the cache and sending the request to a server in response to a determination that the object is not stored within the cache.,151,70,,
8078689,PC,"Citrix Systems, Inc.",34422758,Remote Access/Other Topics,10/10/2003,2003,11/14/2023,Methods and apparatus for providing access to persistent application sessions,Methods and apparatus for providing remote access to two or more application sessions in which authentication information associated with a user is received a plurality of application sessions already associated with the user are identified in response to the information and a client computer operated by the user is connected to the plurality of application sessions.,181,68,,
8856777,PC,"Citrix Systems, Inc.",36933242,Directed Towards/Client Side|Remote Access/Client Side,12/30/2004,2004,7/22/2026,Systems and methods for automatic installation and execution of a client-side acceleration program,The present invention is directed towards systems and methods for dynamically deploying and executing acceleration functionality on a client to improve the performance and delivery of remotely accessed applications. The acceleration program of the present invention is automatically installed and executed on a client in a manner transparent to and seamless with the operation of the client. An appliance may intercept a request of the client to establish a communication session or connection with a server and transmit the acceleration program to the client. In some cases the appliance determines whether the application being accessed by the client can be accelerated and only provides the acceleration program if the application can be accelerated. Upon receipt of the acceleration program the client automatically performs a silent installation of the acceleration program and executes the acceleration program upon completion of the installation.,105,67,,
8108608,PC,"Citrix Systems, Inc.",35600727,Data Packets/Communications Network|Data Packets/Client Devices,6/30/2004,2004,7/2/2027,Systems and methods of maintaining freshness of a cached object based on demand and expiration time,A device that implements a method for performing integrated caching in a data communication network. The device is configured to receive a packet from a client over the data communication network wherein the packet includes a request for an object. At the operating system/kernel level of the device one or more of decryption processing of the packet authentication and/or authorization of the client and decompression of the request occurs prior to and integrated with caching operations. The caching operations include determining if the object resides within a cache serving the request from the cache in response to a determination that the object is stored within the cache and sending the request to a server in response to a determination that the object is not stored within the cache.,138,67,,
8190676,PC,"Citrix Systems, Inc.",34982530,Virtual Server/Client Devices,9/29/2004,2004,1/23/2025,System and method for event detection and re-direction over a network using a presentation level protocol,A mechanism for detecting events generated from a device in communication with a client system and the re-direction of those events to a server system over a network using a presentation-level protocol is disclosed. Plug and play events are detected at the client system bound to a virtual connection for a user session and re-directed for handling to a server-based system using the presentation-level protocol. The server-based system maps the device to the user session. Applications which have registered a callback with the session are informed and generate an appropriate message which is transmitted to the device in communication with the client system via a specified virtual communication connection in the user session.,214,65,,
8583827,PC,Bytemobile Inc,37040699,Transmitted Page,5/26/2005,2005,7/12/2028,Dynamic data optimization in data network,A system including a client device communicatively coupled to a first wireless network wherein the client device has the ability to request a web page from a content server and an optimization server is configured to receive network data associated with the characteristics of the first wireless network to provide tuning settings based on the network data to receive response data from the content server and to transmit optimized response data to the client device wherein the response data corresponds to a request for a web page from a client device and the optimized response data corresponds to the response data being altered based on the provided tuning settings.,176,64,,
8422851,PC,"Citrix Systems, Inc.",36683999,Computing Devices/Data Streams|Data Packets/Data Streams|Data Packets/Packet Engine,1/14/2005,2005,11/5/2026,System and methods for automatic time-warped playback in rendering a recorded computer session,Methods and systems for generating playback instructions for time-warped playback of presentation layer protocol data. The method includes a protocol engine executing on a computing device recording a protocol data stream comprising a plurality of packets representing a user session. The protocol engine determines a complexity factor for a first portion of the protocol data stream and for a second portion of the protocol data stream based on content of the packets of the protocol data stream. The protocol engine determines a first playback rate for the first portion of the protocol data stream and a second playback rate for the second portion of the protocol data stream using the complexity factor of each portion of the protocol data stream wherein the first playback rate differs from the second playback rate. The protocol engine renders the protocol data stream according to the determined playback rates.,198,63,,
7818252,PC,"Citrix Systems, Inc.",32912282,Other Topics,2/20/2003,2003,7/25/2023,Enforcement of network service level agreements,A service level agreement may be imposed by a service provider that may include e.g. a volume limitation and a bandwidth limitation. One or more limitations of the service level agreement may be enforced or modified in response to a triggering event. For example a bandwidth limitation on a network subscriber may be enforced or modified based on how much data is consumed by the subscriber.,143,62,,
7441000,PC,Citrix Systems International Gmbh,34673625,Other Topics,12/22/2003,2003,8/19/2026,Method for session sharing,The present invention provides a method and system for session sharing that allows multiple authorized users (e.g. assistants) to access the same session and synchronize the browser views when the current state changes. Through the use of use of session sharing it is ensured that all users work on the same data and have the same Web side state. The Client side is kept in synchronization through the use of a publisher-subscriber model that initiates an update of all connected Clients when a state change occurs. These functionalities of the present invention ensure that all participating users can work together and can share the same state both on server and Client side.,202,61,,
8719433,PC,"Citrix Systems, Inc.",34422757,Remote Access/Resource Provided,10/10/2003,2003,12/26/2023,Methods and apparatus for scalable secure remote desktop access,The invention provides scalable secure and easily administerable methods and systems for providing remote access to networked resources by combing aspects of physical access limitation measures with traditional computer access limitation measures. The methods and systems utilize an enrollment administration system for specifying enrollment rules an enrollment system configured to communicate with the enrollment administration system to permit enrolling a first networked resource if permitted by specified enrollment rules and a remote access system for granting a user remote access to the first networked resource if the user successfully enrolled the first networked resource.,301,59,,
8892778,PC,"Citrix Systems, Inc.",35786547,Data Packets/Communications Network|Data Packets/Intercepting|Remote Access/Network Packets|Remote Access/Performance Data|Private Networks/Data Communication Network,7/23/2004,2004,9/6/2025,Method and systems for securing remote access to private networks,A method for securing remote access to private networks includes a receiver intercepting from a data link layer a packet in a first plurality of packets destined for a first system on a private network. A filter intercepts from the data link layer a packet in a second plurality of packets transmitted from a second system on the private network destined for an system on a second network. A transmitter in communication with the receiver and the filter performing a network address translation on at least one intercepted packet and transmitting the at least one intercepted packet to a destination.,171,58,,
8375087,PC,"Citrix Systems, Inc.",35096171,Data Packets/Dynamic Data,4/15/2004,2004,1/3/2025,Methods and apparatus for synchronization of data set representations in a bandwidth-adaptive manner,A bandwidth-adaptive method for synchronizing a consumer node representation of a dynamic data set and the source node representation of the dynamic data includes the step of receiving from a source node metadata information identifying a plurality of data packets that represent a state of at least a portion of a changing data set at a point in time. At least one of the identified data packets is received from the source node and at least one of the received data packets is selected responsive to the received meta-data information. The metadata information and the selected at least one data packet are transmitted to a consumer node.,314,57,,
8897299,PC,"Citrix Systems, Inc.",35786547,IP Address/Routing Packets,7/23/2004,2004,7/22/2025,Method and systems for routing packets from a gateway to an endpoint,A method for routing packets from a gateway to an endpoint includes the step of associating a private internet protocol (IP) address with an endpoint having a public IP address. A packet addressed to the private IP address of the endpoint is captured. A policy is applied to the packet. The packet is transmitted to the public IP address of the endpoint responsive to the application of the policy to the packet.,151,56,,
8726006,PC,"Citrix Systems, Inc.",35515553,Private Networks/Network Session|Private Networks/Data Communication Network|Security Gateway/Client Application|Security Gateway/Data Communication Network,6/30/2004,2004,1/24/2025,System and method for establishing a virtual private network,A system and method for establishing a virtual private network (VPN) between a client and a private data communication network. An encrypted data communication session such as a Secure Sockets Layer (SSL) data communication session is established between a gateway and the client over a public data communication network. The gateway then sends a programming component to the client for automatic installation and execution thereon. The programming component operates to intercept communications from client applications destined for resources on the private data communication network and to send the intercepted communications to the gateway via the encrypted data communication session instead of to the resources on the private data communication network.,77,55,H?,intermediary device between client and server intercepts comm from app running on client and encapsulates comm before passing it along to server
8917978,PC,"Citrix Systems, Inc.",36683999,Computing Devices/Data Streams|Data Packets/Data Streams|Data Packets/Packet Engine,1/14/2005,2005,4/23/2025,System and methods for automatic time-warped playback in rendering a recorded computer session,Methods and systems for generating playback instructions for time-warped playback of presentation layer protocol data. The method includes a protocol engine executing on a computing device recording a protocol data stream comprising a plurality of packets representing a user session. The protocol engine determines a complexity factor for a first portion of the protocol data stream and for a second portion of the protocol data stream based on content of the packets of the protocol data stream. The protocol engine determines a first playback rate for the first portion of the protocol data stream and a second playback rate for the second portion of the protocol data stream using the complexity factor of each portion of the protocol data stream wherein the first playback rate differs from the second playback rate. The protocol engine renders the protocol data stream according to the determined playback rates.,156,54,,
8312261,PC,"Citrix Systems, Inc.",36540206,Other Topics,1/28/2005,2005,10/21/2025,Method and system for verification of an endpoint security scan,A method of granting access to resources includes the step of receiving a request from a node to access a resource. A scanning agent is generated to gather information about the node. A key is generated and embedded in the scanning agent. The scanning agent is transmitted to the node and gathers information regarding the node. The scanning agent encrypts the gathered information using the at least one generated key. The encrypted gathered information is received from the scanning agent and decrypted.,196,52,,
8677022,PC,"Citrix Systems, Inc.",36603340,Remote Access/Compression Algorithm,3/14/2005,2005,3/14/2025,Method and apparatus for updating a graphical display in a distributed processing environment using compression,A system and method for updating a remote display unit that communicates with a computing system are described. The method includes accessing display update information from an update queue that stores drawing commands issued by an application executing on the computing system caching the display update information applying a lossy compression algorithm to the display update information to create a lossy display update and transmitting the lossy update to the remote display. The method also includes applying a lossless compression algorithm to the display update information in the cache to create a lossless display update and transmitting the lossless display update a predetermined of time after transmitting the lossy update.,154,50,,
7783728,PC,Citrix Systems International Gmbh,36462333,Other Topics,11/22/2004,2004,5/14/2027,Concurrent evaluation of policies with synchronization,A policy for a computer system is transformed into a plurality of sub-policies at least one synchronization step and a final action. The sub-policies are distributed to corresponding sub-components in the computer system. The sub-policies are evaluated wherein each sub-component evaluates its corresponding one or more sub-policies as other sub-components evaluate their corresponding one or more sub-policies. The sub-policies are synchronized by using the at least one synchronization step. The final action is performed in response to synchronizing the sub-policies. The computer system can be singular or distributed.,339,50,,
8009694,PC,Bytemobile Inc,31947154,Computing Devices/Other Topics,7/26/2000,2000,7/27/2021,Wireless services provider network system and method,An application service provider provides wireless access to a packetized data network such as the Internet. The application service provider includes a server computer. The server computer is connected to the network which is at least in part a wired network. The wired network is connected to a cellular wireless communications system. Data is communicated over the network both wired and wireless via OSI models for example according to TCP/IP protocols or specialized variants. A wireless device such as a modern-equipped laptop computer or personal digital assistant a web-enabled telephone or the like is communicatively connected to the cellular wireless communications system. The application service provider can maintain a website including targeted content on the server computer for access by the wireless device.,283,45,,
7209474,PC,Bytemobile Inc,31947154,Computing Devices/Other Topics,1/21/2000,2000,8/27/2021,Wireless services provider network system and method,An application service provider provides wireless access to a packetized data network such as the Internet. The application service provider includes a server computer. The server computer is connected to the network which is at least in part a wired network. The wired network is connected to a cellular wireless communications system. Data is communicated over the network both wired and wireless via OSI models for example according to TCP/IP protocols or specialized variants. A wireless device such as a modem-equipped laptop computer or personal digital assistant a web-enabled telephone or the like is communicatively connected to the cellular wireless communications system. The application service provider can maintain a website including targeted content on the server computer for access by the wireless device.,227,45,,
8312172,PC,Bytemobile Inc,37040699,Other Topics,5/26/2005,2005,9/2/2029,Method and system for delta compression,A method and system for providing delta compression the method includes receiving request data from a user agent communicating with a content server wherein the communication includes transmitting the request data to the content server and receiving response data associated with the request data generating key data associated with the response data wherein the generated key data represents block data of the response data storing the generated key data and the block data and transmitting the block data to the user agent.,232,44,,
7616559,PC,Bytemobile Inc,34278669,Other Topics,9/3/2003,2003,6/2/2026,"Multi-link network architecture, including security, in seamless roaming communications systems and methods",A communications system provides for secure communications of information over multiple communications links. The system includes a client device a server device and at least one and typically multiple available and usable communications channels elements modes and links for connecting the devices for communications of information therebetween. The system includes a link detector for determining existence and usability of the communications links for communications of the information a pathfinder for selecting one or more of the communications links for communications of at least some of the information a link handover for switching to the selected one or more communications links for communications of the information or portion thereof and an auto reconnector for re-connecting to detected and selected one or more communications links for communications of the information or portions of it in the event that any communication is hindered terminated or upset.,197,43,,
8127019,PC,"Citrix Systems, Inc.",34673625,Other Topics,12/22/2003,2003,9/22/2025,System and program product for session sharing,The present invention provides a system and program product for session sharing that allows multiple authorized users (e.g. assistants) to access the same session and synchronize the browser views when the current state changes. Through the use of use of session sharing it is ensured that all users work on the same data and have the same Web side state. The Client side is kept in synchronization through the use of a publisher-subscriber model that initiates an update of all connected Clients when a state change occurs. These functionalities of the present invention ensure that all participating users can work together and can share the same state both on server and Client side.,225,40,,
8521909,PC,"Citrix Systems, Inc.",35786616,Data Packets/Communications Network|Data Packets/Client Devices,6/25/2004,2004,6/25/2024,Inferring server state in a stateless communication protocol,Server state objects are identified by an intermediate server among packets transmitted between an application server and a client device on a network based upon a stateless communication protocol by monitoring and analyzing the packets transmitted between the application server and the client device. The packets are parsed into a plurality of name-value pairs. The entropy of the name-value pairs having a same name field is computed and candidate data objects that are likely to be server state objects are selected based upon the computed entropy. Candidate data objects that were transmitted bi-directionally between the application server and the client device are identified as server state objects.,128,36,,
8429711,PC,"Citrix Systems, Inc.",34972207,Remote Access/User Application Requests|Remote Access/Access Rights,7/2/2004,2004,1/18/2025,System and method for executing interactive applications with minimal privileges,A mechanism for running interactive applications with a minimal set of privileges is disclosed. The privileges form a subset of the privileges afforded to the user requesting the application and are allocated consistent with the principle of least privilege. The application runs with the minimal amount of permissions necessary to accomplish its assigned tasks. A new user account is created and provisioned or identified for each application to which a user requests access. The accounts have a subset or superset of the access rights and operating system privileges that the user who is logged on to the system and requesting access to the application ordinarily enjoys. The subset/superset of the user's privileges is determined by a policy-based decision system. The policy-based decision system makes its determination based on an analysis of the application requirements an analysis of the data security and privacy concerns associated with the execution of the application the identity of the user and user's role and any other policy considerations previously specified by an administrator. Once the determination as to the appropriate set of privileges to be afforded in the execution environment has been made the execution environment is created and provisioned or a pre-existing execution environment possessing the requisite privileges is identified and the remote user is logged into the server-side account. The application-specific accounts may be audited by audit trail tools that provide evidence of policy enforcement.,156,36,,
7548974,PC,Citrix Systems International Gmbh,36263396,Other Topics,10/12/2004,2004,1/19/2027,Adaptively processing client requests to a network server,In a computer network environment a server protocol is provided to process read requests from clients. Rather than all read requests being processed synchronously or all read requests being processed asynchronously an attempt is first made to perform a synchronous read. If the synchronous read is unsuccessful the connection through which the request was received by the server is registered with a monitoring service. When the data is ready to be read an appropriate callback is called and the data transmitted. An optional delay may be imposed before the synchronous read is attempted to increase the likelihood that the attempt will be successful. A series of delays/read attempts may also be employed in order to increase the likelihood still further that an attempt will be successful.,77,33,L/M?,"networked reads: attempt synch read, on fail spin spin thread for asynch read and jump to callback when read is ready"
8126986,PC,"Citrix Systems, Inc.",36075283,Other Topics,9/23/2004,2004,10/16/2024,Advanced content and data distribution techniques,A method and apparatus for displaying locally stored content objects is disclosed. In one embodiment the method comprises receiving a message containing one or more parameters indicative of one or more characteristics of a client and sending one of a plurality of groups of one or more content objects from a set of content objects to the client based on the one or more parameters wherein each of the plurality of groups is suited for use with clients having a different set of one or more parameters.,203,25,,see other family member. This one is narrower
8275711,PC,"Citrix Systems, Inc.",32912282,Other Topics,2/20/2003,2003,3/15/2024,Enforcement of network service level agreements,A service level agreement may be imposed by a service provider such as an Internet service provider that may include e.g. a volume limitation and a bandwidth limitation. One or more limitations of the service level agreement may be enforced or modified in response to a triggering event. For example a bandwidth limitation on a network subscriber may be enforced or modified based on how much data is consumed by the subscriber.,150,20,,
8090775,PC,Citrix Systems International Gmbh,34700381,Other Topics,12/10/2003,2003,8/1/2025,Time limited collaborative community role delegation policy,A system for establishing and maintaining a permission delegation policy for roles within a collaborative computing environment provides a list of potential delegatee end user persons to a delegator end user person. A list of delegatable permissions is provided to the delegator end user person in which the list of delegatable permissions correspond to permissions held by the delegator end user person. A delegation policy is received from the delegator end user person. The delegation policy includes one or more delegated permissions from the list of delegatable permissions and identification of a delegatee end user person from the list of potential delegatee end users persons designated to receive the delegated permissions.,101,16,,
7840672,PC,Citrix Systems International Gmbh,36263396,Other Topics,10/12/2004,2004,11/7/2024,Adaptively processing client requests to a network server,In a computer network environment a server protocol is provided to process read requests from clients. Rather than all read requests being processed synchronously or all read requests being processed asynchronously an attempt is first made to perform a synchronous read. If the synchronous read is unsuccessful the connection through which the request was received by the server is registered with a monitoring service. When the data is ready to be read an appropriate callback is called and the data transmitted. An optional delay may be imposed before the synchronous read is attempted to increase the likelihood that the attempt will be successful. A series of delays/read attempts may also be employed in order to increase the likelihood still further that an attempt will be successful.,104,10,,see family
6088706,PC,Citrix Systems International Gmbh,10790107,Other Topics,3/8/1996,1996,5/17/2016,System and method for managing replicated data by merging the retrieved records to generate a sequence of modifications,A data management system and a method for managing copies of a shared data file maintained on a plurality of computer systems that are connectable via a mobile communications network. The method comprises: for each copy of the shared data file maintaining a record of modifications made to that copy; retrieving via connection to the mobile communications network the records maintained for other copies of the shared data file; merging the retrieved records to generate a sequence of modification; applying predefined rules to the sequence of modifications to resolve conflicts within the sequence of modifications; and modifying the copies of the shared file based on the conflict-resolved sequence of modifications. The solution is not restricted to a particular set of applications. It improves efficiency since it retains communication autonomy from the applications. Applications need not be modified to make use of the facilities provided.,118,86,,
6065118,PC,"Citrix Systems, Inc.",10798284,Other Topics,8/9/1996,1996,9/24/2016,Mobile code isolation cage,The present invention reduces the risk of damage to data or programs in an end user computer system programmed to operate in response to an imported data stream containing one or more mobile program components from an external source. The incoming data stream is screened to identify mobile program components of that data stream. Some of the mobile program components are passed to a program execution location isolated from the end user system prior to being executed to operate in a desired manner. The execution location has an interface with the external source of the data stream and an interface with the end user system. The operation of the interface between the execution location and the end user system is programmed so that only data which has been interacted on by the program component within the execution location in a specified and controlled manner can be passed to and from the end user system.,219,78,,
7774492,PC,"Citrix Systems, Inc.",25431857,Interface Unit,7/26/2001,2001,11/18/2024,"System, method and computer program product to maximize server throughput while avoiding server overload by controlling the rate of establishing server-side net work connections",A method for maximizing server throughput while avoiding overload of a server is presented. The method involves intercepting via an interface unit a client request for information from the server. Next the interface unit determines the current server performance where the server performance is based on the number of connections opened to the server the response time of the server and the rate at which the response time is changing. Finally the interface unit forwards the client request to the server if the current server performance is close to an optimal performance whereby avoiding overload of the server.,271,93,,
7801978,PC,"Citrix Systems, Inc.",24772450,Interface Unit,10/18/2000,2000,12/5/2023,"Apparatus, method and computer program product for efficiently pooling connections between clients and servers",An apparatus method and computer program product for efficiently pooling network client-server connections. The apparatus is implemented within an interface unit connecting a plurality of servers to the Internet which is in turn connected to a plurality of clients. The method includes the steps of opening a connection between a first client and the interface unit; determining whether a connection between the interface unit and a server is finished being utilized by the first client; opening a connection between a second client and the interface unit; if no free connection is open between the interface unit and the server then allowing the second client to access information on the server via the same connection utilized by the first client without waiting for the first client to initiate closing the connection; and delinking the connections between the first and second clients and the interface unit while keeping open the connection between the interface unit and the server.,278,93,,
6684259,PC,"Citrix Systems, Inc.",24157876,Other Topics,10/11/1995,1995,10/11/2015,Method for providing user global object name space in a multi-user operating system,A method suitable for use in client/server system which allows multiple copies of a single-user application to run simultaneously in a multi-user operating system without modification of the single-user program by modifying existing operating system methods used for object name creation look-up and deletion. The method creates a user global context by labeling each instance of the single-user application with a user identifier (name) that defines a single-user name space in which each labeled object is only available to the named user. In addition the single-user server process is allowed to impersonate the client for allowing the server to access the named resources of the single-user name space. A coexisting system global context is also created by marking system global named resources.,153,93,L,expires 2015
6986040,PC,"Citrix Systems, Inc.",24836276,Session Key/Client Devices|Session Key/Communication Session,11/3/2000,2000,11/11/2022,System and method of exploiting the security of a secure communication channel to secure a non-secure communication channel,The present invention features a system and method for establishing a secure communication channel between a client and an application server. In one embodiment a ticket service generates a ticket having an identifier and a session key. A communications device obtains the ticket from the ticket service and transmits the ticket to a client over a secure communication channel. The client transmits the identifier of the ticket to an application server over an application communication channel. The application server then obtains a copy of the session key of the ticket from the ticket service. Communications exchanged between the client and the application server over the application communication channel are then encrypted using the session key to establish the application communication channel as a secure communication channel.,198,92,,
7228350,PC,"Citrix Systems, Inc.",22834980,Other Topics,8/4/2000,2000,10/12/2022,Intelligent demand driven recognition of url objects in connection oriented transactions,The present invention is directed to a network switch that determines when specific content is hot and directs flow to one or more cache servers. The architecture of the present invention can include a cache and a digest generator to store predetermined objects in the cache based on the digest generated by the digest generator.,240,92,,65 Amazon citations. see family
6785713,PC,"Citrix Systems, Inc.",24267202,Transport Mechanism/Event Bus,5/8/2000,2000,5/8/2020,Method and apparatus for communicating among a network of servers utilizing a transport mechanism,The present invention relates to a method and apparatus for communication between servers. In one aspect the invention relates to a multi-server system including a first server and a second server. The first server has a first plurality of subsystems and a first event bus associated with the first plurality of subsystems the first event bus including a first event delivery object having a first dispatch table and a first transport mechanism associated with the first event delivery object. The second server has a second plurality of subsystems. One of the first plurality of subsystems communicates with one of the second plurality of subsystems by transmitting an event to the first transport mechanism based on an entry in the first dispatch table.In one embodiment the first transport mechanism transmits data using TCP/IP. In another embodiment the first plurality of subsystems includes a transport subsystem. In another embodiment the transport subsystem is in communication with the second server. In another embodiment each of the first plurality of subsystems has an associated unique identifier. In another embodiment one of the first plurality of subsystems creates an event having an identifier unique to the creating subsystem.,183,92,,see family
7177945,PC,"Citrix Systems, Inc.",22834980,Other Topics,8/4/2000,2000,12/15/2022,Non-intrusive multiplexed transaction persistency in secure commerce environments,The present invention is directed to a network switch that determines when specific content is hot and directs flow to one or more cache servers. The architecture of the present invention includes a decryption processor for authenticating clients and decrypting and encrypting transaction requests before the transaction requests are routed by the switch.,183,92,,see family. Adds encrypted message trafficking.
6799209,PC,"Citrix Systems, Inc.",24314280,Other Topics,5/25/2000,2000,5/25/2020,Activity monitor and resource manager in a network environment,An apparatus and method for monitoring the activity level of a user by the client and managing the network resources including server resources in response to the level of activity identified by the client. In one embodiment the invention relates to a method for managing network resources in response to the level of activity identified by the client. In another embodiment the invention relates to a system for managing network resources in response to the level of activity identified by the client. In still yet another embodiment the invention related to a server for managing resources allocated to an external client in response to the level of activity identified by the client.,118,92,,
7836191,PC,"Citrix Systems, Inc.",24015860,Interface Unit,2/18/2000,2000,8/16/2024,"Apparatus, method and computer program product for guaranteed content delivery incorporating putting a client on-hold based on response time",An apparatus method and computer program product for guaranteeing network client-server response time while providing a way of putting the client on-hold when the response time temporarily prohibits access to the requested server. The apparatus is implemented within an interface unit connecting a plurality of servers and an on-hold server to the Internet which is connected to a plurality of clients. According to one aspect of the invention the method includes the steps of opening a connection between a client and the interface unit; determining which server the client desires a page from; determining the current response time of the requested server; if the response time is acceptable then opening a connection between the interface unit and the requested server if no free connection is open between the interface unit and the requested server; allowing the client to access information on the requested server via the connections; and closing the connection between the client and the interface unit while keeping open the connection between the interface unit and the requested server. Alternatively if the response time is not acceptable then putting the client on-hold by redirecting the client to an on-hold server until the response time of the requested server becomes acceptable. According to a on-hold distribution aspect of the invention the interface unit determines the on-hold preference of the client and selects the server hosting that on-hold preference. According to another aspect of the invention instead of utilizing the interface unit each server has the intelligence to put the client on-hold when applicable.,149,92,,
7100200,PC,"Citrix Systems, Inc.",25375900,Session Key/User Session|Session Key/Communication Session|Authentication Credentials,6/13/2001,2001,8/20/2024,Method and apparatus for transmitting authentication credentials of a user across communication sessions,The invention relates to an apparatus and for facilitating the reauthentication of a user using a client computer to a server computer. In one embodiment the method includes the steps of receiving by the server confidential information during a first communication session between the server and a client encrypting the confidential information with a key to create encrypted confidential information and storing the encrypted confidential information in the server's memory. The method also includes the steps of transmitting by the server the key to the client and deleting by the server the key from the server's memory. When the server receives the key from the client during a second communication session the server uses the key to decrypt the encrypted confidential information.,87,91,,
7981052,PC,"Citrix Systems, Inc.",23609885,Other Topics,9/28/1999,1999,9/28/2019,Endoscopic submucosal core biopsy device,An embodiment of the invention includes a device for collecting body tissue. The device may include an inner member comprising a hollow portion to collect body tissue and a distal end configured to both penetrate body tissue and define an opening of the hollow portion. The device may further include an outer member co-axially and slidably disposed around the exterior of the inner member comprising a distal end portion. The distal end portion of the outer member may be configured to penetrate body tissue prevent body tissue from exiting the hollow portion of the inner member and allow the distal end of the inner member to extend beyond the distal end of outer member. The opening of the hollow portion of the inner member may be disposed in a plane that is not perpendicular to the longitudinal axis of the inner member.,198,91,,
7702785,PC,Citrix Systems International Gmbh,25099376,Other Topics,1/31/2001,2001,3/26/2030,"Methods, systems and computer program products for selectively allowing users of a multi-user system access to network resources",Methods systems and computer program products are provided for selectively allowing a user of a multi-user system access to a plurality of resources in a network. Pursuant to these methods systems and computer program products a request originated by a user of the multi-user system may be received to transmit a message over the network to one of the plurality of resources in the network. A security zone associated with this resource may then be identified. Pursuant to the operations of the present invention if it is determined that the user is authorized access to the identified security zone the message may be forwarded over the network to the resource.,146,91,,
7444418,PC,Bytemobile Inc,23115243,Other Topics,5/11/2001,2001,6/13/2024,Transcoding multimedia information within a network communication system,Multimedia information communicated between a transmitter and a receiver may be transcoded by intercepting the multimedia information within a network communication system. The available transmission rate of the downlink channel may be estimated by for example calculating a ratio of the smoothed round trip time of packets communicated to the receiver and a smoothed congestion window associated with the downlink channel. If the transmission rate at which the multimedia information is encoded is greater than the available transmission rate the multimedia information may be transcoded to conform the multimedia information to the available transmission rate. The transcoded multimedia information may then be transmitted to the receiver over the downlink channel using a transmission timer.,162,91,,
7062570,PC,"Citrix Systems, Inc.",22834980,Server Farm,8/4/2000,2000,9/7/2023,High performance server farm with tagging and pipelining,The present invention is directed to a network switch that determines when specific content is hot and directs flow to one or more cache servers. The architecture can include a tag generator to generate unique tags corresponding to a server in a plurality of servers a content pre-fetching algorithm to retrieve information before the information is requested by determining the hotness of the information and a cache server in which stored information is configured based upon the relative degrees of hotness of the stored information.,168,91,M/L?,"67 Amazon citations. Switches and routers between clients and server farm forward transaction requests and responses, and tag follow up requests so they can be routed to the same server that served the initial request"
7596593,PC,"Citrix Systems, Inc.",23545092,Other Topics,9/7/1999,1999,11/7/2020,Methods and apparatus for efficiently transmitting interactive application data between a client and server using markup language,A method for efficiently transferring data between a client and a server includes the steps of: providing an application program; providing an application-independent client process effecting a plurality of client states; providing an application-independent server process effecting a plurality of server states; transferring data from the server process to the client process in response to an application program; and updating at least one client state in response to the transferred data. A related apparatus is also disclosed.,184,91,,
6370552,PC,"Citrix Systems, Inc.",25322596,Other Topics,5/14/1997,1997,5/14/2017,Apparatus and method for displaying application output in an html document,A method for displaying an executing application in an HTML page includes the steps of receiving an indication that execution of an application should begin determining the parameters of a window in which the executing application will be displayed creating a communication channel to the HTML page using the determined window parameters and displaying the output of the application which is executing on a server in the window via the communications channel. A related apparatus includes a parameter handler and a network executive. The parameter handler determines the parameters of the application window and passes the parameters to a network executive. The network executive uses the parameters to begin execution of the desired applications program on a server and causes the output of the program to be displayed in the window.,144,91,,
6826606,PC,"Citrix Systems, Inc.",24267202,Transport Mechanism/Event Bus,5/8/2000,2000,5/8/2020,Method and apparatus for communicating among a network of servers,The present invention relates to a method and apparatus for communication between servers. In one aspect the invention relates to a multi-server system including a first server and a second server. The first server has a first plurality of subsystems and a first event bus associated with the first plurality of subsystems the first event bus including a first event delivery object having a first dispatch table and a first transport mechanism associated with the first event delivery object. The second server has a second plurality of subsystems. One of the first plurality of subsystems communicates with one of the second plurality of subsystems by transmitting an event to the first transport mechanism based on an entry in the first dispatch table.In one embodiment the first transport mechanism transmits data using TCP/IP. In another embodiment the first plurality of subsystems includes a transport subsystem. In another embodiment the transport subsystem is in communication with the second server. In another embodiment each of the first plurality of subsystems has an associated unique identifier. In another embodiment one of the first plurality of subsystems creates an event having an identifier unique to the creating subsystem.,108,91,LM?,"36 Amazon citations. Designating a node in a zone within a server farm as collector point of runtime data, and having other nodes in the zone send runtime data to it. Priority?"
7359953,PC,"Citrix Systems, Inc.",24222134,Client Node/Communications Link|Client Node/Network Communication,11/13/1995,1995,5/8/2018,Methods and apparatus for making a hypermedium interactive,A system and method of making a hypermedium page interactive. In one embodiment the system includes a hyperlink on the hypermedium page displayed on a client node; a hyperlink configuration file (corresponding to the hyperlink on the client node) located on a network server node; and a client agent located on the client node. In response to a user selecting the hyperlink on the hypermedium page the client agent establishes a communications link from the client agent to an application execution server agent on an application server using the information located in the configuration file obtained from the network server node. In response to the creation of the communications link between the application execution server agent and the client agent the application executes on the application execution server and the user is capable of interactively using the application running on the application execution node from the client node. Data input and display occurs at the client node under the control of the client agent.,122,91,L,"SII, server sends ""network configuration file"" to client, ""without browser intervention"""
6643690,PC,"Citrix Systems, Inc.",22353360,Client Node/User Credentials,12/29/1998,1998,2/18/2019,Apparatus and method for determining a program neighborhood for a client node in a client-server network,An apparatus and method for determining a program neighborhood of a client node in a client-server network is described. The program neighborhood of the client node includes application programs hosted by application servers on the network. The present invention enables a user of a client node to learn of these application programs. The user is not required to know where to find such applications or to manually establish links to such applications. To make the client node aware of its program neighborhood a host server collects application-related information corresponding to application programs hosted by the servers in the network. The application-related information can include the application name the server location of the application minimum capabilities required of client nodes for executing the application and those users who are authorized to use that application. User credentials are received from the client system. The user credentials are used to filter the application-related information. Information representing those application programs that are available to the client node is transmitted from the host server to the client system for display. In a Windows-based client node the information can be represented by a graphical icon for each available application program.,207,91,,
6701415,PC,"Citrix Systems, Inc.",23083196,Other Topics,3/31/1999,1999,3/31/2019,Selecting a cache for a request for information,Methods and systems for handling requests received from a client for information stored on a server. In general when a request for information is received cache functions are bypassed or executed based on whether an execution of cache functions in an attempt to access the information from cache is likely to slow processing of a request for the information without at least some compensating reduction in processing time for a request for the information received at a later time. Also described is receiving information that identifies the location of a resource within a domain and selecting a cache based on the information that identifies the location of the resource within the domain.,223,91,,
6437803,PC,"Citrix Systems, Inc.",22201620,Other Topics,5/29/1998,1998,5/29/2018,System and method for combining local and remote windows into a single desktop environment,A system for incorporating windows from remote desktop environments into a local desktop environment includes a local node a local agent a first remote node and a first remote agent. The first remote node provides a first remote desktop environment and the first remote agent monitors the first remote desktop environment for changes in the environment. The first remote node transmits messages to the local agent indicative of changes in the first remote desktop environment. The local agent receives the transmitted messages and commands the local node to modify a representation of a first remote window that is part of a local desktop environment. The local agent also monitors the local desktop and transmits messages to the remote agent indicative of a change in the local desktop. In some embodiment the local node provides the local desktop environment. Local agents can be embodied on articles of manufacture.,119,91,,
7586871,PC,Bytemobile Inc,22039245,Other Topics,5/22/2001,2001,2/20/2024,Platform and method for providing data services in a communication network,A communication node and corresponding method for processing data communication passing through the node between a first data network and a second data network is described. The method includes detecting an event associated with data communication arriving at the node from the first data network and determining whether the data communication is to be suspended for service at the node based on the detected event. Suspended data communication is processed based on information in the data communication. Return data communication arriving at the node from the second data network in response to the processed data communication from the first data network is detected. The detected return data communication is allowed to pass through the node without processing the detected return data communication.,113,91,,
6243816,PC,Citrix Systems International Gmbh,22095724,Other Topics,4/30/1998,1998,4/30/2018,Single sign-on (sso) mechanism personal key manager,A method of managing passwords of users desiring access to multiple target resources in a computer enterprise environment. For each given user each of a set of id/password pairs is associated to each of a set of one or more respective targets. Each id/password pair is normally required to access a respective target resource. The targets of each given user are stored in a globally-accessible database. In response to entry by a given user at a client machine of a single-sign on (SSO) id/password the globally-accessible database is accessed from a personal key manager (PKM) server to retrieve the targets of the given user. The targets are returned to the PKM server which then uses data therein to access the respective target resources on behalf of the given user at the client machine.,107,91,,
6766333,PC,"Citrix Systems, Inc.",24845353,Software Application/Client and the Server|Software Application/User Interface,11/8/2000,2000,11/8/2020,Method and apparatus for synchronizing a user interface element displayed on a client and a software application component executing on a web server,A system and method for synchronizing a user interface element displayed on a client and a software application component executing on a web server are described. The synchronizing of a user interface element and a software application component includes representing a user interface element as a user interface element component having a characteristic and providing a wiring descriptor relating the characteristic of the user interface element component with a characteristic of a software application component. The wiring descriptor associates the user interface element component with the software application component and synchronizes the characteristic of the user interface element component with the characteristic of the software application component.,98,91,,
6370570,PC,"Citrix Systems, Inc.",24222134,Client Node/Communications Link|Client Node/Network Communication,11/13/1995,1995,11/13/2015,Method and apparatus for making a hypermedium interactive,A system and method of making a hypermedium page interactive. In one embodiment the system includes a hyperlink on the hypermedium page displayed on a client node; a hyperlink configuration file (corresponding to the hyperlink on the client node) located on a network server node; and a client agent located on the client node. In response to a user selecting the hyperlink on the hypermedium page the client agent establishes a communications link from the client agent to an application execution server agent on an application server using the information located in the configuration file obtained from the network server node. In response to the creation of the communications link between the application execution server agent and the client agent the application executes on the application execution server and the user is capable of interactively using the application running on the application execution node from the client node. Data input and display occurs at the client node under the control of the client agent.,144,91,L,expires 2015
6538667,PC,"Citrix Systems, Inc.",23419752,Computing Devices/Client Devices|Client Node/Providing a Connection|Client Node/Client Computing,7/23/1999,1999,7/23/2019,System and method for providing immediate visual response to user input at a client system connected to a computer system by a high-latency connection,A method and an apparatus for reducing perceived visual response to user input at a client node are described. The client node remotely executes an application program on a server node wherein all execution of the application program occurs on the server node. The client node transmits user-provided input to the server node and the user-provided input elicits a response from the server node that is transmitted back to the client node for display. The client node receives the user input to be transmitted to the server node. The client node can obtain the user input through a keyboard or a pointing device. In response to the user input the client node produces a prediction of a server response to the user input. The client node then displays the prediction. The display of the prediction provides the client user with a faster visual response to the user input than could be obtained from the server node. Upon receiving the server response the client node displays the server response overwriting the prediction.,168,91,,
6772226,PC,"Citrix Systems, Inc.",24559674,Private Networks/Other Topics|IP Address/Virtual Private Network|MAC Address,8/15/2000,2000,8/15/2020,Vpn device clustering using a network flow switch and a different mac address for each vpn device in the cluster,A VPN device clustering system connects two or more VPN devices on one side of a virtual private network to a similarly clustered system of two or more VPN devices on the other side of a virtual private network. The VPN device clustering system typically includes a plurality of clustering units for redundancy that avoids difficulties that arise with a single point of failure. For example two clustering units may be used in an active-passive high-availability configuration. A VPN device cluster creator creates or configures a VPN device cluster. To create a VPN device cluster an administrator assigns to the cluster a logical Internet protocol (IP) address IPvpn and specifies VPN devices that are members of the cluster.,121,91,,
6691157,PC,"Citrix Systems, Inc.",24222134,Client Node/Communications Link|Client Node/Network Communication,11/13/1995,1995,11/13/2015,Method and apparatus for making a hypermedium interactive,A system and method of making a hypermedium page interactive. In one embodiment the system includes a hyperlink on the hypermedium page displayed on a client node; a hyperlink configuration file (corresponding to the hyperlink on the client node) located on a network server node; and a client agent located on the client node. In response to a user selecting the hyperlink on the hypermedium page the client agent establishes a communications link from the client agent to an application execution server agent on an application server using the information located in the configuration file obtained from the network server node. In response to the creation of the communications link between the application execution server agent and the client agent the application executes on the application execution server and the user is capable of interactively using the application running on the application execution node from the client node. Data input and display occurs at the client node under the control of the client agent.,95,91,L,expires 2015
6016535,PC,"Citrix Systems, Inc.",24158283,Other Topics,10/11/1995,1995,10/11/2015,Method for dynamically and efficiently caching objects by subdividing cache memory blocks into equally-sized sub-blocks,A method for dynamically caching data objects in a logical cache memory begins by organizing the logical cache memory into a set of maximally equally-sized contiguous pages that begin at a logical cache base address. Any one of the maximal size logical cache pages may be dynamically subdivided into a set of smaller pages of equal size. The smaller size pages cache data objects having a smaller size than the maximum possible data object size. Each subdivided page stores only those smaller size data objects. The logical address for a page is mapped to at least a maximal size page index identifying the position of the maximal size logical page in the cache and if the page is a smaller size page the page location is also mapped to a smaller size page index which identifies a particular one of the smaller size pages located within a maximal size page. Pages are dynamically reconfigured based on a least-recently-used policy. A maximal size page may be reconfigured to provide for storage of multiple smaller sized pages and a set of smaller sized pages may be reconfigured to provide storage for a maximal size page. In one aspect maximally sized pages may be chained together to provide for storage of data objects which exceed the size of the pages. Chained pages may be contiguous or non-contiguous.,175,90,L,expires 2015
6157944,PC,"Citrix Systems, Inc.",25322553,Client Node/Communications Link|Client Node/Protocol Stack,5/14/1997,1997,5/14/2017,System and method for replicating a client/server data exchange to additional client nodes connecting to the server,A system and method for replicating data that are exchanged between a server and a first client node and transmitting the replicated data to other client nodes connected to the server are described. A connection is established with the first client node and a predetermined communications port located on the server using an initial protocol stack. The initial protocol stack includes a data structure that links the initial protocol stack to the connection with the first client node. The data structure enables the connection between the server and the first client node to move to other ports of the server. When the first client node communicates with the server a connection manager produces a new protocol stack in response to those communications. An execution environment on the server becomes associated with the first client node. When the execution environment is started the server application requested by the first client node is also started. The connection manager then transfers the connection between the first client node and the server to the new protocol stack by moving the data structure from the initial protocol stack to the new protocol stack. Similarly a second connection is established between a second client node and the server using a third protocol stack. Data communicated between the first client node and the application program executing on the server are replicated and transmitted to the second client node using the third protocol stack.,204,90,,
6920480,PC,"Citrix Systems, Inc.",23545092,Other Topics,9/7/1999,1999,3/24/2021,Methods and apparatus for efficiently transmitting interactive application data between a client and server using markup language,A method for efficiently transferring data between a client and a server includes the steps of: providing an application program; providing an application-independent client process effecting a plurality of client states; providing an application-independent server process effecting a plurality of server states; transferring data from the server process to the client process in response to an application program; and updating at least one client state in response to the transferred data. A related apparatus is also disclosed.,100,90,,
6807580,PC,"Citrix Systems, Inc.",24267202,Transport Mechanism/Event Bus,5/8/2000,2000,5/8/2020,Method and apparatus for communicating among a network of servers,The present invention relates to a method and apparatus for communication between servers. In one aspect the invention relates to a multi-server system including a first server and a second server. The first server has a first plurality of subsystems and a first event bus associated with the first plurality of subsystems the first event bus including a first event delivery object having a first dispatch table and a first transport mechanism associated with the first event delivery object. The second server has a second plurality of subsystems. One of the first plurality of subsystems communicates with one of the second plurality of subsystems by transmitting an event to the first transport mechanism based on an entry in the first dispatch table. In one embodiment the first transport mechanism transmits data using TCP/IP. In another embodiment the first plurality of subsystems includes a transport subsystem. In another embodiment the transport subsystem is in communication with the second server. In another embodiment each of the first plurality of subsystems has an associated unique identifier. In another embodiment one of the first plurality of subsystems creates an event having an identifier unique to the creating subsystem.,162,90,,"see family. Designating two nodes in a server farm zone as collector points, each for one kind of data"
5961586,PC,"Citrix Systems, Inc.",25322388,Client Node/Providing a Connection,5/14/1997,1997,5/14/2017,System and method for remotely executing an interpretive language application,A server node in a client-server system downloads and executes application written in interpretive languages on behalf of associated client nodes. A connection manager provides communications control in a server of a client-server system. The connection manager permits the client node to establish rudimentary communications with a designated server port and then moves the connection to a communications port specific to the application running on the server. The specific communications port is then configured by the communications manager with the protocol drivers required by the client node. The server node then executes an application written in an interpretive language on behalf of the client node. The server accepts input from the client node allowing client processor to interact with the downloaded application. Output from the downloaded application is transmitted to the client node which displays the output normally.,143,90,,
6331855,PC,"Citrix Systems, Inc.",23161594,Remote Access/Various Embodiments,4/28/1999,1999,4/28/2019,"Method and apparatus for providing remote access, control of remote systems and updating of display information",The present invention is a system and method for controlling information displayed on a first processor-based system from a second processor-based system. The apparatus comprises a memory to store instruction sequences by which the second processor-based system is processed and a processor coupled to the memory. The stored instruction sequences cause the processor to: (a) examine at a predetermined interval a location of a currently displayed image; (b) compare the location with a corresponding location of a previously displayed image to determine if the previously displayed image has changed; (c) transmitting location information representing the change; and (d) storing the changed information on the first processor-based system. Various embodiments are described.,134,90,,
6438598,PC,"Citrix Systems, Inc.",25322753,Client Node/Providing a Connection|Client Node/Protocol Stack|Client Node/Transmitting the same Data to more than One,5/14/1997,1997,5/14/2017,System and method for transmitting data from a server application to more than one client node,The invention relates to a system and method for transmitting the same data to more than one client node substantially simultaneously. In one embodiment the invention relates to a method for transmitting the same data substantially simultaneously from an application executing on a server node to at least two client nodes. The method includes the steps of providing a connection between a first client node and a first client protocol stack and between the application and the first client protocol stack; associating a first minimal communications protocol stack with the first client protocol stack; providing a connection between the application and the first minimal communications protocol stack and between a second client node and a second client protocol stack; associating a second minimal communications protocol stack with the second client protocol stack; providing a connection between the first minimal protocol stack and the second minimal protocol stack; and between the second minimal protocol stack and said the client protocol stack. The method then transmits data from the application program to the first client protocol stack and the first minimal protocol stack substantially simultaneously.The invention also relates to a communication system including a server node including: an application program a first client protocol stack in electrical communication with the application program a first minimal protocol stack in electrical communication with the application program; a second minimal protocol stack in electrical communication with the first minimal protocol stack; and a second client protocol stack in electrical communication with the second minimal protocol stack.,168,90,,
6377971,PC,"Citrix Systems, Inc.",24425869,Other Topics,2/23/1996,1996,2/23/2016,Method and apparatus for installing and executing a single user task in a multi-user environment,A method and apparatus for installing and executing a single user application on a multi-user system. The method includes the steps of installing a single user application using the installation program of the application placing the application initialization data in a predetermined location in data storage obtaining initialization data corresponding to the single user application from the predetermined location in data storage copying the initialization data into a user specific initialization data and executing the single user application using the user specific initialization data. The apparatus includes a process installing a single user application a process placing the application initialization data in a predetermined location in data storage a process obtaining initialization data corresponding to the single user application from the predetermined location in data storage a process copying the initialization data into a user specific initialization data and a process executing the single user application using the user specific initialization data.,181,90,,
6141737,PC,"Citrix Systems, Inc.",24158283,Other Topics,10/11/1995,1995,10/11/2015,Method for dynamically and efficiently caching objects received from an application server by a client computer by subdividing cache memory blocks into equally-sized sub-blocks,A method for dynamically caching data objects in a logical cache memory begins by organizing the logical cache memory into a set of maximally equally-sized contiguous pages that begin at a logical cache base address. Any one of the maximal size logical cache pages may be dynamically subdivided into a set of smaller pages of equal size. The smaller size pages cache data objects having a smaller size than the maximum possible data object size. Each subdivided page stores only those smaller size data objects. The logical address for a page is mapped to at least a maximal size page index identifying the position of the maximal size logical page in the cache and if the page is a smaller size page the page location is also mapped to a smaller size page index which identifies a particular one of the smaller size pages located within a maximal size page. Pages are dynamically reconfigured based on a least-recently-used policy. A maximal size page may be reconfigured to provide for storage of multiple smaller sized pages and a set of smaller sized pages may be reconfigured to provide storage for a maximal size page. In one aspect maximally sized pages may be chained together to provide for storage of data objects which exceed the size of the pages. Chained pages may be contiguous or non-contiguous.,200,90,L,expires 2015
6725272,PC,"Citrix Systems, Inc.",24015860,Interface Unit,2/18/2000,2000,2/18/2020,"Apparatus, method and computer program product for guaranteed content delivery incorporating putting a client on-hold based on response time","An apparatus method and computer program product for guaranteeing network client-server response time while providing a way of putting the client on-hold when the response time temporarily prohibits access to the requested server. The apparatus is implemented within an interface unit connecting a plurality of servers and an on-hold server to the Internet which is connected to a plurality of clients. According to one aspect of the invention the method includes the steps of opening a connection between a client and the interface unit; determining which server the client desires a page from; determining the current response time of the requested server; if the response time is acceptable then opening a connection between the interface unit and the requested server if no free connection is open between the interface unit and the requested server; allowing the client to access information on the requested server via the connections; and closing the connection between the client and the interface unit while keeping open the connection between the interface unit and the requested server. Alternatively if the response time is not acceptable then putting the client on-hold by redirecting the client to an on-hold server until the response time of the requested server becomes acceptable. According to a ""on-hold distribution"" aspect of the invention the interface unit determines the on-hold preference of the client and selects the server hosting that on-hold preference. According to another aspect of the invention instead of utilizing the interface unit each server has the intelligence to put the client on-hold when applicable.",143,90,,
6081623,PC,"Citrix Systems, Inc.",24156966,Remote Access/Low Bandwidth Transport|Transport Mechanism/Lossless Compression,10/11/1995,1995,10/11/2015,Method for lossless bandwidth compression of a series of glyphs,A lossless bandwidth compression method for use in a distributed processor system for communicating graphical text data from a remote application server to a user workstation over a low bandwidth transport mechanism enables the workstation display to support the illusion that the application program is running locally rather than at the remote application server. At the application server the graphical text data is represented by a string of glyphs each glyph being a bit mask representing the foreground/background state of the graphical text data pixels. Each unique glyph is encoded by assigning a unique identification code (IDC). Each IDC is compared with the previous IDCs in the string and if a match is found the IDC is transmitted to the workstation. If a match with a prior IDC is not found the IDC and the corresponding glyph pattern are transmitted to the workstation. At the workstation the IDCs are queued in the order received while the glyph patterns are cached using the corresponding IDCs as addresses. The string of glyphs is reconstructed by using the queued IDCs in their natural order for accessing the cached glyph patterns as required to reproduce the original string of glyphs.,262,90,L,expires 2015
6532455,PC,"Citrix Systems, Inc.",23864937,Other Topics,12/22/1999,1999,12/22/2019,"Method and system for content-based document security, routing, and action execution",A method and system for determining document content based actions. A rule engine is provided with a document to be acted on preferably in XML format. The rule engine is also provided with a set of rules and associated actions to be taken upon special conditions. The document is evaluated according to the rules and the document contents; each of the rules is parsed into a parse tree the document is further evaluated including for the provided document populating the parse tree with at least a portion of the document contents to create a content-populated parse tree. The portion of the actions to be initiated is selected based on the content-populated parse tree. Actions could include by way of example security control or further routing of the document.,91,90,,
5923842,PC,"Citrix Systems, Inc.",25213498,Other Topics,3/6/1997,1997,3/6/2017,Method and apparatus for simultaneously providing anonymous user login for multiple users,A method for allowing anonymous user login to a computer begins when an application request is received from a client. The next available anonymous user name is determined and assigned to the client\'s application request. The anonymous user name is authenticated and a new session is created which invokes the application targeted by the client\'s application request. When the client terminates execution of the application the anonymous user name is returned to the anonymous user name pool and is available to be reassigned to the next anonymous user.,87,90,L,"""plurality of temporary user names"""
6118899,PC,"Citrix Systems, Inc.",24156966,Remote Access/Low Bandwidth Transport|Transport Mechanism/Lossless Compression,10/11/1995,1995,10/11/2015,Method for lossless bandwidth compression of a series of glyphs,A lossless bandwidth compression method for use in a distributed processor system for communicating graphical text data from a remote application server to a user workstation over a low bandwidth transport mechanism enables the workstation display to support the illusion that the application program is running locally rather than at the remote application server. At the application server the graphical text data is represented by a string of glyphs each glyph being a bit mask representing the foreground/background state of the graphical text data pixels. Each unique glyph is encoded by assigning a unique identification code (IDC). Each IDC is compared with the previous IDCs in the string and if a match is found the IDC is transmitted to the workstation. If a match with a prior IDC is not found the IDC and the corresponding glyph pattern are transmitted to the workstation. At the workstation the IDCs are queued in the order received while the glyph patterns are cached using the corresponding IDCs as addresses. The string of glyphs is reconstructed by using the queued IDCs in their natural order for accessing the cached glyph patterns as required to reproduce the original string of glyphs.,239,90,L,expires 2015
6172683,PC,"Citrix Systems, Inc.",24658344,Data Packets/Lossless Compression|Graphical User Interface/Lossless Compression|Transport Mechanism/Lossless Compression,6/12/1996,1996,6/12/2016,Method for the lossless compression of lines in a distributed computer system,In a distributed computer system a method for lossless compression of a graphical line within an application server allows the compressed line data to be transmitted over a low bandwidth transport mechanism to a graphical user interface for display on a workstation. The application server determines from graphical line data representative of the graphical line coordinate locations for the endpoints of each sub-path of the graphical line and attributes of each sub-path. The application server generates a compressed line data packet of variable length which includes the coordinate location data and attribute data for each sub-path of the graphical line.,194,90,,
7415038,PC,Citrix Systems International Gmbh,25230989,Data Packets/Requested Action|Real Time/Data Processing,3/29/2001,2001,5/13/2025,Method and system for network management providing access to application bandwidth usage calculations,A method system apparatus and computer program product is presented for management of a distributed data processing system. The network management framework is able to monitor multiple sources of network packets on various subnets within the distributed data processing system; distributed packet snoopers are deployed from a packet usage manager to monitor the multiple sources of network packets. The system administrator can request packet filtering based upon selected active users or active applications. A bandwidth history database is compiled from bandwidth usage data associated with multiple entities within the data processing system including users applications and/or endpoints within the data processing system. In response to a requested action within the data processing system bandwidth usage for the requested action can be predicted with reference to the bandwidth history database. The actual and predicted bandwidth usage of requested actions can be displayed to the system administrator in real time.,173,90,,
6681330,PC,Citrix Systems International Gmbh,22598606,Other Topics,10/2/1998,1998,10/2/2018,Method and system for a heterogeneous computer network system with unobtrusive cross-platform user access,Aspects for a heterogeneous computer network system with unobtrusive cross-platform user access are described. In an exemplary system aspect the system includes a plurality of computer systems coupled in a network each of the plurality of computer systems operating according to one of a plurality of operating system platforms each operating system platform having an associated security mechanism. The system further includes an enterprise directory included on at least one server system of the plurality of computer systems the enterprise directory configured for security interception to allow an authorized user access among the services of the plurality of computer systems without affecting the associated security mechanisms of the plurality of operating system platforms.,115,90,,
5941949,PC,"Citrix Systems, Inc.",25322753,Client Node/Providing a Connection|Client Node/Protocol Stack|Client Node/Transmitting the same Data to more than One,5/14/1997,1997,5/14/2017,System and method for transmitting data from a server application to more than one client node,The invention relates to a system and method for transmitting the same data to more than one client node substantially simultaneously. In one embodiment the invention relates to a method for transmitting the same data substantially simultaneously from an application executing on a server node to at least two client nodes. The method includes the steps of providing a connection between a first client node and a first client protocol stack and between the application and the first client protocol stack; associating a first minimal communications protocol stack with the first client protocol stack; providing a connection between the application and the first minimal communications protocol stack and between a second client node and a second client protocol stack; associating a second minimal communications protocol stack with the second client protocol stack; providing a connection between the first minimal protocol stack and the second minimal protocol stack; and between the second minimal protocol stack and said the client protocol stack. The method then transmits data from the application program to the first client protocol stack and the first minimal protocol stack substantially simultaneously.,166,89,,
6148336,PC,"Citrix Systems, Inc.",21921150,Data Packets/Other Topics,3/13/1998,1998,3/13/2018,Ordering of multiple plugin applications using extensible layered service provider with network traffic filtering,Low-level network services are provided by network-service-provider plugins. These plugins are controlled by an extensible service provider that is layered above the TCP layer but below the Winsock-2 library and API. The extensible service provider orders the plugins based on the function performed by each plugin and on ordering hints. Plugins that redirect the protocol or socket are executed first. Plugins that examine packets or block entire packets are executed before plugins that modify packets. Plugins that compress or encrypt data are executed last for outgoing packets. Ordering hints cause a plugin to be executed before or after others in its functional class. Ordering allows examining plugins that simply read data get to the packets before an encrypting or compressing plugin renders the data unreadable. The extensible service provider has a plugin manager that orders and controls execution of the plugins. A filter manager evaluates one or more packet-filters. Filters are bound to plugins by binding objects; each socket has its own binding list of filters and plugins. Execution of some plugins can be skipped when filters bound to them do not match packets sent or received. Well-ordered plugins transparently provide a variety of network services such as content-filtering and blocking encryption and compression and statistics-gathering.,204,88,,
6166729,PC,Bytemobile Inc,25313638,Computing Devices/Other Topics|Remote Access/Other Topics,5/7/1997,1997,5/7/2017,Remote digital image viewing system and method,A remote viewing system is for viewing digital images of remote locations. The viewing system includes a plurality of digital image acquisition devices. The devices are located at remote locations. The system also includes a plurality of digital image transmission devices connected to respective ones of the digital image acquisition devices. A digital image receiving device is communicatively connected to each of the digital image transmission devices. A digital image server device is connected to the digital image receiving device. The digital image server device is connected to a network such as the Internet. A network-enabled computer can access select ones of the digital images over the network. The digital image receiving device and the digital image server device cooperate to make available to the network-enabled computer the select ones of the digital images for download from the network.,137,87,,
6023721,PC,"Citrix Systems, Inc.",25322383,Other Topics,5/14/1997,1997,5/14/2017,Method and system for allowing a single-user application executing in a multi-user environment to create objects having both user-global and system global visibility,A method and system for allowing a single-user application executing in a multi-user environment to create objects having both user-global and system-global visibility begins by intercepting an API function call to create or modify a named object. A set of rules is consulted which may explicitly or implicitly define the visibility to be associated with the named object. If a rule is found for the named object it is used to define the visibility level for that object. If however a rule is not encountered in the rule set then the visibility of a named object is set according to a default procedure.,113,87,,
6088515,PC,"Citrix Systems, Inc.",24222134,Client Node/Communications Link|Client Node/Network Communication,11/13/1995,1995,11/13/2015,Method and apparatus for making a hypermedium interactive,A system and method of making a hypermedium page interactive. In one embodiment the system includes a hyperlink on the hypermedium page displayed on a client node; a hyperlink configuration file (corresponding to the hyperlink on the client node) located on a network server node; and a client agent located on the client node. In response to a user selecting the hyperlink on the hypermedium page the client agent establishes a communications link from the client agent to an application execution server agent on an application server using the information located in the configuration file obtained from the network server node. In response to the creation of the communications link between the application execution server agent and the client agent the application executes on the application execution server and the user is capable of interactively using the application running on the application execution node from the client node. Data input and display occurs at the client node under the control of the client agent.,145,85,L,expires 2015
6014694,PC,"Citrix Systems, Inc.",25384840,Other Topics,6/26/1997,1997,6/26/2017,System for adaptive video/audio transport over a network,A system for adaptively transporting video over networks wherein the available bandwidth varies with time. The system comprises a video/audio codec that functions to compress code decode and decompress video streams that are transmitted over networks having available bandwidths that vary with time and location. Depending on the channel bandwidth the system adjusts the compression ratio to accommodate a plurality of bandwidths ranging from 20 Kbps for POTS to several Mbps for switched LAN and ATM environments. Bandwidth adjustability is provided by offering a trade off between video resolution frame rate and individual frame quality. The system generates a video data stream comprised of Key P and B frames from a raw source of video. Each frame type is further comprised of multiple levels of data representing varying degrees of quality. In addition several video server platforms can be utilized in tandem to transmit video/audio information with each video server platform transmitting information for a single compression/resolution level.,94,84,H?,"streaming video, adjusting frame quality based on networking bandwidth"
6057857,PC,"Citrix Systems, Inc.",24658344,Data Packets/Lossless Compression|Graphical User Interface/Lossless Compression|Transport Mechanism/Lossless Compression,6/12/1996,1996,6/12/2016,Method for the lossless compression of lines in a distributed computer system,In a distributed computer system a method for lossless compression of a graphical line within an application server allows the compressed line data to be transmitted over a low bandwidth transport mechanism to a graphical user interface for display on a workstation. The application server determines from graphical line data representative of the graphical line coordinate locations for the endpoints of each sub-path of the graphical line and attributes of each sub-path. The application server generates a compressed line data packet of variable length which includes the coordinate location data and attribute data for each sub-path of the graphical line.,203,84,,
6886046,PC,"Citrix Systems, Inc.",25398874,Other Topics,6/26/2001,2001,3/3/2023,Methods and apparatus for extendible information aggregation and presentation,Methods and apparatus for arbitrarily extendible information aggregation and display. This functionality is achieved by abstracting the components of the system into individual modules which communicate using a platform-independent extendible markup language such as extensible markup language (XML). A designer adds support for new information sources or client devices by abstracting and encapsulating messages to and from the information source or client device in a wrapper using a platform-independent extendible markup language such as XML.,124,84,,
5826027,PC,"Citrix Systems, Inc.",24157343,Transport Mechanism/Client and Server,10/11/1995,1995,10/11/2015,Method for supporting an extensible and dynamically bindable protocol stack in a distributed process system,A method for providing an extensible and dynamically bindable protocol stack with parameters in a distributed process system based on using information exchange over a common transport mechanism between an application server and a client workstation. The application server and the client workstation are initialized with a minimum set of enabled protocols only the basic set required by the common transport mechanism. The workstation requiring service sends a list of required protocols with parameters to the application server together with any optional protocols and enables the required protocols. The server responds by enabling the required and acceptable optional protocols. The server negotiates the arrangement by an acknowledgment that includes any parameter modifications required. Both client and server enable the negotiated set of protocols.,168,83,L,expires 2015
5862348,PC,"Citrix Systems, Inc.",24396968,Client Node/Network Communication,2/9/1996,1996,2/9/2016,Method and apparatus for connecting a client node to a server node based on load levels,A network including at least two server nodes a master network information server node and a client node in communication with each other. The master network information server node contains a list of network addresses and respective load information corresponding to each of the server nodes. In one embodiment the client node is directed to use a server node on which to execute an application based on the load information stored on the master network information server node. A method is described which includes the steps of requesting an available servers from a master network information server node and connecting the client node to an available server node based on the load levels.,142,83,,
6341312,PC,Citrix Systems International Gmbh,22794672,Other Topics,12/16/1998,1998,12/16/2018,Creating and managing persistent connections,Persistent network connections created by the inventive mechanism survive logoff and persist across logon. A persistent connection is created when a network connection is established (or when an existing connection is modified) using a simple command line or GUI interface. Information supplied via the interface enables the mechanism to establish dynamically a different security context for each given persistent connection and this security context is “flexible” in that it may differ from the user&apos;s logon id and password. If a user were currently authenticated for a given persistent network connection before a network failure the user upon connect is allowed access to the network connection without requiring further authentication.,66,83,L?,security contexts associated w network connections by remote clients. Look at dep claim 5
7110514,PC,Citrix Systems International Gmbh,21808120,Other Topics,12/17/2001,2001,4/15/2024,Identifying a context for a call,A method system and program for identifying a context for a call are provided. Multiple context clues for a call are detected from a line number a line subscriber profile a caller profile and other parameters associated with the call. A context for the call is identified from the context clues such that at least one party to the call is enabled to receive the context of the call. Context for the call preferably includes at least one of who is placing a call who is receiving a call identities of devices utilized for the call locations of those devices the path of line number numbers accessed for a call a billing plan for the call and a subject matter of the call.,51,83,,
5754763,PC,Citrix Systems International Gmbh,24911332,Software Application/Enterprise Applications,10/1/1996,1996,10/1/2016,Software auditing mechanism for a distributed computer enterprise environment,A large distributed enterprise includes computing resources that are organized into one or more managed regions each region being managed by a management server servicing one or more gateway machines with each gateway machine servicing a plurality of endpoint machines. A method of auditing software usage in the environment begins by deriving a count of a number of simultaneous method invocations of one or more application programs that occur in response to a system management task. The count is then used to determine whether an authorized number of copies of each application program within the managed region has been exceeded. This protocol obviates a dedicated licensing server.,95,83,,
6954780,PC,"Citrix Systems, Inc.",22694205,Interface Unit,11/10/1998,1998,11/10/2018,Internet client-server multiplexer,"An apparatus method and computer program product for network client-server multiplexing. The apparatus is implemented within an interface unit connecting a plurality of servers to the Internet which is connected to a plurality of clients. According to a ""connection pooling"" aspect of the invention the interface unit opens and maintains connections with the servers and handles the opening and closing of connections with clients accessing the servers thereby freeing the servers of the processing load incurred by opening and closing connections. According to a ""connection distribution"" aspect of the invention the interface unit examines the path names within requests received from clients and selects the server hosting the requested information according to the path names.",131,82,,
8296446,PC,"Citrix Systems, Inc.",25322753,Client Node/Providing a Connection|Client Node/Protocol Stack|Client Node/Transmitting the same Data to more than One,5/14/1997,1997,5/14/2017,System and method for transmitting data from a server application to more than one client node,A system and method for transmitting the same data to more than one client node or from an application to at least two client nodes. The method includes connecting a first client node and a first client protocol stack and connecting the application and the first client protocol stack; associating a first minimal communications protocol stack with the first client protocol stack; providing a connection between the application and the first minimal communications protocol stack and between a second client node and a second client protocol stack; associating a second minimal communications protocol stack with the second client protocol stack; providing a connection between the first minimal protocol stack and the second minimal protocol stack; and between the second minimal protocol stack and said the client protocol stack. Data is then transmitted from the application program to the first client protocol stack and the first minimal protocol stack substantially simultaneously.,133,82,,
8799502,PC,"Citrix Systems, Inc.",25431857,Interface Unit,7/26/2001,2001,6/30/2025,Systems and methods for controlling the number of connections established with a server,A method for maximizing server throughput while avoiding overload of a server is presented. The method involves intercepting via an interface unit a client request for information from the server. Next the interface unit determines the current server performance where the server performance is based on the number of connections opened to the server the response time of the server and the rate at which the response time is changing. Finally the interface unit forwards the client request to the server if the current server performance is close to an optimal performance whereby avoiding overload of the server.,235,81,,
6522334,PC,"Citrix Systems, Inc.",23161594,Remote Access/Various Embodiments,4/28/1999,1999,4/28/2019,"Method and apparatus for providing remote access, control of remote systems and updating of display information",The present invention is a system and method for controlling information displayed on a first processor-based system from a second processor-based system. The apparatus comprises a memory to store instruction sequences by which the second processor-based system is processed and a processor coupled to the memory. The stored instruction sequences cause the processor to: (a) examine at a predetermined interval a location of a currently displayed image; (b) compare the location with a corresponding location of a previously displayed image to determine if the previously displayed image has changed; (c) transmitting location information representing the change; and (d) storing the changed information on the first processor-based system. Various embodiments are described.,83,79,,
7602808,PC,Citrix Systems International Gmbh,25230989,Data Packets/Requested Action|Real Time/Data Processing,3/29/2001,2001,3/29/2021,Method and system for network management providing access to application bandwidth usage calculations,A method system apparatus and computer program product is presented for management of a distributed data processing system. The network management framework is able to monitor multiple sources of network packets on various subnets within the distributed data processing system; distributed packet snoopers are deployed from a packet usage manager to monitor the multiple sources of network packets. The system administrator can request packet filtering based upon selected active users or active applications. A bandwidth history database is compiled from bandwidth usage data associated with multiple entities within the data processing system including users applications and/or endpoints within the data processing system. In response to a requested action within the data processing system bandwidth usage for the requested action can be predicted with reference to the bandwidth history database. The actual and predicted bandwidth usage of requested actions can be displayed to the system administrator in real time.,181,79,,
8090793,PC,"Citrix Systems, Inc.",24222134,Client Node/Communications Link|Client Node/Network Communication,11/13/1995,1995,8/20/2016,Methods and apparatus for making a hypermedium interactive,A system and method of making a hypermedium page interactive. In one embodiment the system includes a hyperlink on the hypermedium page displayed on a client node; a hyperlink configuration file (corresponding to the hyperlink on the client node) located on a network server node; and a client agent located on the client node. In response to a user selecting the hyperlink on the hypermedium page the client agent establishes a communications link from the client agent to an application execution server agent on an application server using the information located in the configuration file obtained from the network server node. In response to the creation of the communications link between the application execution server agent and the client agent the application executes on the application execution server and the user is capable of interactively using the application running on the application execution node from the client node. Data input and display occurs at the client node under the control of the client agent.,151,78,,
6411986,PC,"Citrix Systems, Inc.",22694205,Interface Unit,11/10/1998,1998,11/10/2018,Internet client-server multiplexer,"An apparatus method and computer program product for network client-server multiplexing. The apparatus is implemented within an interface unit connecting a plurality of servers to the Internet which is connected to a plurality of clients. According to a ""connection pooling"" aspect of the invention the interface unit opens and maintains connections with the servers and handles the opening and closing of connections with clients accessing the servers thereby freeing the servers of the processing load incurred by opening and closing connections. According to a ""connection distribution"" aspect oft he invention the interface unit examines the path names within requests received from clients and selects the server hosting the requested information according to the path names.",313,77,,
6049630,PC,"Citrix Systems, Inc.",24477417,Other Topics,3/19/1996,1996,3/19/2016,Data compression using adaptive bit allocation and hybrid lossless entropy encoding,"A method and apparatus for adaptive bit allocation and hybrid lossless entropy encoding in a lossy compression system. The invention includes three components: (1) a transform stage to decorrelate image data into a baseband and multiple subbands (2) a quantization stage to quantize the resulting transform coefficients and (3) a lossless entropy coder stage to encode the quantized indexes. In the preferred embodiment the transform stage uses a wavelet transform algorithm. The quantization stage adaptively estimates values for parameters defining an approximation between quantization size and the logarithm of quantization error and recursively calculates the optimal quantization size for each band to achieve a desired bit rate. The baseband and subbands are transformed into quantization matrices using the corresponding quantization sizes. The lossless entropy coder stage uses the observation that the entropy property of run lengths of zero index values in the subband quantization matrices is different from the entropy property of non-zero indices. Each quantization matrix is parsed so that each non-zero index is extracted into a separate stream and the remaining position information is parsed into an odd stream of run length values for ""0"" and an even stream of run length values for ""1"". These three streams are Huffman coded separately in conventional fashion. This hybrid algorithm gives an approximately 10% percent improvement over conventional run length and Huffman coding for similar images. The overall compression algorithm gives about 2 DIFFERENCE 6 dB improvement in terms of peak signal-to-noise ratio (PSNR) over JPEG algorithms for similar images at similar bit rates.",91,76,L,diff to detect
7000198,PC,Citrix Systems International Gmbh,25395681,Other Topics,7/8/1997,1997,8/19/2019,Method and system for web-based dce management,A frames-based Web browser is used with existing distributed computing environment (DCE) interfaces to facilitate and simplify management of DCE cells. In the preferred embodiment administration may be performed from any secure Web browser acting as a client. Management data is typically supported on a target Web server. At the browser CGI scripts are used to dynamically generate HTML (hypertext markup language) pages based on the network administrator's selections and the current state and defined objects in the DCE cell. The result is a robust and efficient Web-based DCE management scheme.,113,73,,
5913060,PC,"Citrix Systems, Inc.",24156900,Other Topics,10/11/1995,1995,10/11/2015,Method for deadlock avoidance in a distributed process system using a synchronous procedure call,A method for avoiding deadlock in a distributed process system that has a master process and a plurality of slave processes in which the system uses a synchronous procedure call protocol that interchanges the role of the master process as the procedure call requester with the slave process role as the procedure call responder. In this manner the master process is never left in a deadlock state waiting for the slave process to respond. The role-switching is accomplished by initializing each slave process when initially connected to the system by having each slave process send a status message to the master process as the first part of the two-part synchronous procedure call protocol. This places the slave process in the role of the requester and the master process in the role of the responder. The slave processes are also re-initialized after responding to a master procedure call request by sending a status message indicating that the slave process is ready to receive another procedure call from the master process.,129,73,L,expires 2015
7191223,PC,"Citrix Systems, Inc.",23911046,Real Time/Information Packets,1/11/2000,2000,6/17/2023,System and method for real-time alerts,A system and method for real time alert adapted to receive information streams to analyze the content of said stream in real time and to generate an alert. Said system and method allow to provide real time alerts based upon an analysis of a reception of information packets generated from a plurality of information sourced during a predetermined period of time.,166,72,,
5682152,PC,"Citrix Systems, Inc.",24477417,Other Topics,3/19/1996,1996,3/19/2016,Data compression using adaptive bit allocation and hybrid lossless entropy encoding,"A method and apparatus for adaptive bit allocation and hybrid lossless entropy encoding in a lossy compression system. The invention includes three components: (1) a transform stage to decorrelate image data into a baseband and multiple subbands (2) a quantization stage to quantize the resulting transform coefficients and (3) a lossless entropy coder stage to encode the quantized indexes. In the preferred embodiment the transform stage uses a wavelet transform algorithm. The quantization stage adaptively estimates values for parameters defining an approximation between quantization size and the logarithm of quantization error and recursively calculates the optimal quantization size for each band to achieve a desired bit rate. The baseband and subbands are transformed into quantization matrices using the corresponding quantization sizes. The lossless entropy coder stage uses the observation that the entropy property of run lengths of zero index values in the subband quantization matrices is different from the entropy property of non-zero indices. Each quantization matrix is parsed so that each non-zero index is extracted into a separate stream and the remaining position information is parsed into an odd stream of run length values for ""0"" and an even stream of run length values for ""1"". These three streams are Huffman coded separately in conventional fashion. This hybrid algorithm gives an approximately 10% percent improvement over conventional run length and Huffman coding for similar images. The overall compression algorithm gives about 2 DIFFERENCE 6 dB improvement in terms of peak signal-to-noise ratio (PSNR) over JPEG algorithms for similar images at similar bit rates.",128,71,,
5748892,PC,"Citrix Systems, Inc.",24491899,Client Node/Client Computing,3/25/1996,1996,3/25/2016,Method and apparatus for client managed flow control on a limited memory computer system,A method and apparatus for controlling data flow on a network having a server and a non-blocking client node in which the client node may not drop requests received from the server. A process on the non-blocking client node allocates resources on the non-blocking client node and notifies the server of the allocated resources. The server then determines the resources on the non-blocking client node required to fulfill a request by an application on the server and whether sufficient resources are available on the non-blocking client node to fulfill the request by the application. If sufficient resources are available the server then sends the request to the client node and if sufficient resources do not exist the server waits until sufficient resources do exist to issue the request to the non-blocking client node.,124,71,,
8812703,PC,"Citrix Systems, Inc.",24015860,Interface Unit,2/18/2000,2000,2/28/2020,"Apparatus, method and computer program product for guaranteed content delivery incorporating putting a client on-hold based on response time",An apparatus method and computer program product for guaranteeing network client-server response time while providing a way of putting the client on-hold when the response time temporarily prohibits access to the requested server. The apparatus is implemented within an interface unit connecting a plurality of servers and an on-hold server to the Internet which is connected to a plurality of clients. According to one aspect of the invention the method includes the steps of opening a connection between a client and the interface unit; determining which server the client desires a page from; determining the current response time of the requested server; if the response time is acceptable then opening a connection between the interface unit and the requested server if no free connection is open between the interface unit and the requested server; allowing the client to access information on the requested server-via the connections; and closing the connection between the client and the interface unit while keeping open the connection between the interface unit and the requested server. Alternatively if the response time is not acceptable then putting the client on-hold by redirecting the client to an on-hold server until the response time of the requested server becomes acceptable. According to a on-hold distribution aspect of the invention the interface unit determines the on-hold preference of the client and selects the server hosting that on-hold preference. According to another aspect of the invention instead of utilizing the interface unit each server has the intelligence to put the client on-hold when applicable.,118,68,,
8635363,PC,"Citrix Systems, Inc.",25431857,Interface Unit,7/26/2001,2001,9/13/2022,"System, method and computer program product to maximize server throughput while avoiding server overload by controlling the rate of establishing server-side network connections",A method for maximizing server throughput while avoiding overload of a server is presented. The method involves intercepting via an interface unit a client request for information from the server. Next the interface unit determines the current server performance where the server performance is based on the number of connections opened to the server the response time of the server and the rate at which the response time is changing. Finally the interface unit forwards the client request to the server if the current server performance is close to an optimal performance whereby avoiding overload of the server.,124,65,,
8631120,PC,"Citrix Systems, Inc.",24772450,Interface Unit,10/18/2000,2000,9/11/2021,"Apparatus, method and computer program product for efficiently pooling connections between clients and servers",An apparatus method and computer program product for efficiently pooling network client-server connections. The apparatus is implemented within an interface unit connecting a plurality of servers to the Internet which is in turn connected to a plurality of clients. The method includes the steps of opening a connection between a first client and the interface unit; determining whether a connection between the interface unit and a server is finished being utilized by the first client; opening a connection between a second client and the interface unit; if no free connection is open between the interface unit and the server then allowing the second client to access information on the server via the same connection utilized by the first client without waiting for the first client to initiate closing the connection; and delinking the connections between the first and second clients and the interface unit while keeping open the connection between the interface unit and the server.,209,61,,
8285782,PC,"Citrix Systems, Inc.",24222134,Client Node/Communications Link|Client Node/Network Communication,11/13/1995,1995,11/13/2015,Methods and apparatus for making a hypermedium interactive,The present disclosure is directed to a system and method of making a hypermedium page interactive. Responsive to a user selecting a hyperlink on a hypermedium page displayed on a client node a client agent located on the client node establishes a communications link from the client agent to an application execution server agent on an application server using information located in a hyperlink configuration file corresponding to the hyperlink displayed on the client node obtained from the network server node. Responsive to the creation of the communications link between the application execution server agent and the client agent the application executes on the application execution server and the user is capable of interactively using the application running on the application execution node from the client node. Data input and display occurs at the client node under the control of the client agent.,126,43,L,expires 2015
7894478,PC,Citrix Systems International Gmbh,25230989,Data Packets/Requested Action|Real Time/Data Processing,3/29/2001,2001,5/11/2021,Method and system for network management providing access to application bandwidth usage calculations,A method system apparatus and computer program product is presented for management of a distributed data processing system. The network management framework is able to monitor multiple sources of network packets on various subnets within the distributed data processing system; distributed packet snoopers are deployed from a packet usage manager to monitor the multiple sources of network packets. The system administrator can request packet filtering based upon selected active users or active applications. A bandwidth history database is compiled from bandwidth usage data associated with multiple entities within the data processing system including users applications and/or endpoints within the data processing system. In response to a requested action within the data processing system bandwidth usage for the requested action can be predicted with reference to the bandwidth history database. The actual and predicted bandwidth usage of requested actions can be displayed to the system administrator in real time.,116,41,,
